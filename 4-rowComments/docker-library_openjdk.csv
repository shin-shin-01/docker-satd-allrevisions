,CommitID,Dockerfile,Comment
0,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
4,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
7,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
9,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
14,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
17,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
18,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
19,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
20,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
21,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# amd64
"
22,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# fallback
"
23,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
24,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
25,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
26,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
27,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
28,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
29,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
30,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
31,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
32,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
33,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
34,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
35,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
36,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
37,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
38,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
39,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
40,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
41,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
42,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
43,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
44,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
45,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
46,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
47,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
48,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
49,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
50,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
51,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
52,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
53,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
54,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
55,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
56,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
57,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
58,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
59,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
60,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
61,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
62,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
63,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
64,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
65,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
66,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
67,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
68,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
69,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# basic smoke test
"
70,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
71,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
72,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
73,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
74,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
75,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
76,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
77,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
78,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
79,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
80,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
81,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
82,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
83,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
84,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
85,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
86,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
87,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
88,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
89,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
90,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
91,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
92,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
93,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
94,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
95,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
96,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
97,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
98,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
99,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
100,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
101,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
102,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
103,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
104,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
105,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
106,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
107,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
108,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
109,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
110,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
111,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
112,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"#!/bin/sh -e'; \
"
113,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
114,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
115,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
116,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
117,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
118,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
119,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
120,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
121,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
122,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
123,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
124,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
125,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
126,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
127,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
128,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
129,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
130,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
131,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
132,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
133,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
134,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
135,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
136,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
137,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
138,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
139,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
140,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
141,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
142,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
143,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
144,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
145,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
146,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
147,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
148,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
149,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
150,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
151,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
152,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
153,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
154,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
155,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
156,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
157,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
158,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
159,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
160,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
161,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
162,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
163,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
164,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
165,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
166,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
167,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
168,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
169,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
170,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
171,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
172,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
173,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
174,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
175,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
176,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
177,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
178,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
179,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# amd64
"
180,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# fallback
"
181,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
182,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
183,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
184,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
185,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
186,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
187,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
188,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
189,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
190,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"#!/bin/bash'; \
"
191,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
192,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
193,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
194,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
195,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
196,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
197,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
198,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
199,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
200,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"#!/bin/sh'; \
"
201,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
202,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
203,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
204,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
205,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
206,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
207,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
208,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
209,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
210,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
211,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
212,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
213,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
214,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
215,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
216,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
217,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
218,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
219,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# arm64v8
"
220,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# amd64
"
221,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# fallback
"
222,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
223,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
224,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
225,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
226,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
227,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# basic smoke test
"
228,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
229,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
230,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
231,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
232,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
233,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
234,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
235,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
236,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
237,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
238,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# basic smoke test
"
239,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
240,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
241,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
242,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
243,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
244,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
245,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"#!/bin/sh'; \
"
246,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
247,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
248,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
249,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
250,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
251,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
252,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
253,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
254,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
255,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
256,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
257,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
258,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
259,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
260,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
261,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
262,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
263,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
264,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
265,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
266,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
267,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
268,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
269,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
270,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
271,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
272,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
273,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
274,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
275,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
276,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
277,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
278,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"#!/bin/sh'; \
"
279,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
280,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
281,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
282,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
283,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
284,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
285,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
286,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
287,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
288,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
289,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
290,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
291,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
292,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
293,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
294,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
295,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
296,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
297,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
298,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
299,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
300,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
301,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
302,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
303,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
304,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
305,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
306,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
307,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
308,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
309,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
310,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
311,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# backwards compatibility shim
"
312,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
313,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
314,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
315,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
316,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
317,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
318,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# basic smoke test
"
319,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
320,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
321,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
322,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
323,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
324,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
325,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
326,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
327,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
328,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
329,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# backwards compatibility shim
"
330,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
331,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
332,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
333,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
334,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
335,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
336,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# basic smoke test
"
337,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
338,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
339,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
340,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
341,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
342,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
343,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
344,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
345,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
346,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
347,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
348,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
349,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
350,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
351,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
352,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
353,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
354,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
355,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
356,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
357,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
358,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
359,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
360,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
361,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
362,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
363,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
364,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
365,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
366,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
367,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
368,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
369,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# arm64v8
"
370,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# amd64
"
371,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# fallback
"
372,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
373,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
374,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
375,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
376,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
377,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
378,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
379,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
380,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# backwards compatibility shim
"
381,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
382,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
383,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
384,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# arm64v8
"
385,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# amd64
"
386,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# fallback
"
387,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
388,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
389,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
390,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
391,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
392,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
393,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
394,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# basic smoke test
"
395,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
396,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
397,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
398,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
399,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
400,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
401,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# amd64
"
402,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# fallback
"
403,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
404,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
405,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
406,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
407,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
408,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# basic smoke test
"
409,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
410,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
411,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
412,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
413,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
414,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
415,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
416,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
417,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
418,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
419,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
420,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
421,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
422,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
423,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
424,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
425,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# arm64v8
"
426,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# amd64
"
427,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# fallback
"
428,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
429,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
430,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
431,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
432,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
433,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
434,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
435,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
436,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
437,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
438,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
439,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
440,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
441,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
442,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
443,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
444,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
445,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
446,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
447,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
448,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
449,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
450,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"#!/bin/sh'; \
"
451,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
452,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
453,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
454,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
455,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
456,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
457,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
458,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
459,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
460,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
461,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
462,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
463,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
464,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
465,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
466,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
467,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
468,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
469,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
470,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
471,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
472,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
473,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
474,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
475,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
476,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
477,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
478,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
479,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
480,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
481,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"#!/bin/bash'; \
"
482,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
483,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
484,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
485,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
486,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
487,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
488,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# arm64v8
"
489,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# amd64
"
490,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# fallback
"
491,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
492,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
493,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
494,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
495,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
496,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
497,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
498,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
499,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
500,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# arm64v8
"
501,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# amd64
"
502,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# fallback
"
503,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
504,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
505,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
506,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
507,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
508,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
509,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"#!/bin/sh -e'; \
"
510,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
511,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
512,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
513,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
514,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
515,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
516,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
517,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
518,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
519,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
520,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
521,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
522,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
523,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
524,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
525,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
526,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
527,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
528,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# amd64
"
529,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# fallback
"
530,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
531,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
532,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
533,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
534,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
535,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
536,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
537,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
538,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
539,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
540,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
541,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
542,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
543,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
544,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
545,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
546,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
547,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
548,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
549,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
550,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
551,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
552,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
553,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
554,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"#!/bin/sh -e'; \
"
555,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
556,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
557,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
558,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
559,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
560,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
561,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
562,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
563,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
564,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
565,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
566,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
567,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
568,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
569,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
570,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
571,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
572,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
573,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
574,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
575,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
576,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
577,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
578,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"#!/bin/bash'; \
"
579,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
580,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
581,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
582,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
583,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
584,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
585,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
586,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
587,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
588,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
589,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
590,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
591,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
592,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# amd64
"
593,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# fallback
"
594,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
595,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
596,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
597,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
598,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
599,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
600,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
601,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
602,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
603,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
604,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
605,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
606,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
607,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
608,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
609,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
610,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
611,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
612,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
613,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
614,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
615,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
616,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
617,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
618,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
619,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
620,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
621,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
622,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# arm64v8
"
623,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# amd64
"
624,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# fallback
"
625,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
626,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
627,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
628,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
629,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
630,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
631,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
632,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
633,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
634,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"#!/bin/sh -e'; \
"
635,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
636,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
637,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
638,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
639,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
640,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
641,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
642,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
643,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
644,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
645,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
646,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
647,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
648,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
649,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
650,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
651,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
652,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
653,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
654,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
655,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
656,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
657,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
658,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
659,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
660,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
661,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
662,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
663,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
664,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
665,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
666,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
667,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
668,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
669,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
670,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
671,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
672,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
673,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
674,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
675,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
676,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
677,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
678,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
679,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
680,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
681,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
682,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
683,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
684,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# backwards compatibility shim
"
685,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
686,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
687,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
688,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# amd64
"
689,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# fallback
"
690,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
691,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
692,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
693,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
694,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
695,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
696,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
697,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# basic smoke test
"
698,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
699,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
700,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
701,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
702,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
703,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# arm64v8
"
704,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# amd64
"
705,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# fallback
"
706,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
707,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
708,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
709,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
710,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
711,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# basic smoke test
"
712,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
713,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
714,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
715,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
716,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
717,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
718,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
719,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
720,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
721,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
722,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
723,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
724,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
725,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
726,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
727,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
728,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
729,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
730,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
731,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
732,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
733,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
734,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
735,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
736,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
737,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
738,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
739,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
740,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
741,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# backwards compatibility shim
"
742,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
743,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
744,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# amd64
"
745,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# fallback
"
746,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
747,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
748,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
749,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
750,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
751,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# basic smoke test
"
752,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
753,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
754,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
755,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
756,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
757,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
758,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
759,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
760,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
761,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
762,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
763,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
764,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
765,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
766,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
767,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
768,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
769,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
770,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
771,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
772,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
773,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
774,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
775,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
776,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
777,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
778,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
779,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
780,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
781,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
782,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
783,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
784,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
785,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
786,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
787,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
788,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
789,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
790,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
791,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
792,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# arm64v8
"
793,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# amd64
"
794,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# fallback
"
795,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
796,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
797,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
798,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
799,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
800,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# basic smoke test
"
801,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
802,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
803,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
804,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
805,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
806,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
807,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
808,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
809,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
810,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
811,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
812,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
813,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
814,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
815,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
816,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
817,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
818,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
819,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# amd64
"
820,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# fallback
"
821,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
822,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
823,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
824,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
825,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
826,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# basic smoke test
"
827,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
828,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
829,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
830,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
831,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
832,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
833,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
834,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
835,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
836,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
837,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
838,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
839,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
840,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
841,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
842,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
843,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
844,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
845,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
846,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
847,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
848,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
849,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
850,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
851,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
852,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
853,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
854,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
855,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
856,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
857,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
858,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
859,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
860,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
861,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"#!/bin/sh'; \
"
862,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
863,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
864,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
865,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
866,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
867,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
868,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
869,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
870,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
871,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
872,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
873,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
874,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
875,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
876,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
877,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
878,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
879,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
880,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
881,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
882,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
883,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
884,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
885,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
886,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
887,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
888,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
889,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
890,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
891,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
892,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
893,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
894,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
895,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
896,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
897,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
898,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
899,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
900,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
901,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
902,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
903,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
904,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
905,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
906,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
907,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
908,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
909,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
910,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
911,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
912,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
913,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
914,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
915,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
916,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
917,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# basic smoke test
"
918,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
919,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
920,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
921,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
922,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
923,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
924,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"#!/bin/sh'; \
"
925,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
926,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
927,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
928,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
929,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
930,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
931,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
932,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
933,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
934,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
935,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
936,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
937,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
938,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
939,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
940,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
941,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
942,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
943,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
944,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
945,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
946,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
947,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
948,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
949,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"#!/bin/sh'; \
"
950,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
951,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
952,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
953,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
954,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
955,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
956,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
957,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
958,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
959,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# backwards compatibility shim
"
960,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
961,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
962,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
963,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
964,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
965,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
966,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
967,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
968,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
969,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# basic smoke test
"
970,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
971,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
972,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
973,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
974,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
975,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
976,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
977,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
978,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
979,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
980,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
981,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
982,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
983,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
984,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
985,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
986,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
987,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
988,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"#!/bin/sh'; \
"
989,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
990,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
991,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
992,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
993,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
994,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
995,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
996,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
997,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
998,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
999,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1000,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1001,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1002,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1003,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1004,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1005,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1006,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1007,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1008,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1009,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1010,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1011,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
1012,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
1013,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
1014,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
1015,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
1016,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
1017,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1018,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1019,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1020,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1021,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# basic smoke test
"
1022,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1023,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1024,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
1025,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
1026,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1027,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
1028,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# amd64
"
1029,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# fallback
"
1030,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1031,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1032,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
1033,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
1034,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1035,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1036,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1037,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
1038,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1039,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1040,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1041,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1042,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1043,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1044,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# basic smoke test
"
1045,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1046,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1047,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1048,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1049,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1050,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1051,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
1052,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1053,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1054,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
1055,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
1056,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1057,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1058,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1059,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1060,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1061,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1062,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1063,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1064,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1065,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
1066,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1067,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1068,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1069,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1070,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1071,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1072,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1073,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1074,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
1075,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1076,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1077,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1078,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# backwards compatibility shim
"
1079,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
1080,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
1081,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
1082,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
1083,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
1084,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1085,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1086,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1087,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1088,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# basic smoke test
"
1089,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1090,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1091,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1092,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1093,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"#!/bin/sh'; \
"
1094,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1095,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1096,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1097,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1098,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1099,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1100,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1101,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1102,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1103,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
1104,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1105,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1106,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
1107,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1108,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1109,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
1110,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1111,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1112,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1113,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1114,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1115,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1116,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1117,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1118,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1119,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
1120,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1121,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1122,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1123,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1124,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
1125,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1126,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1127,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1128,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1129,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
1130,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1131,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1132,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1133,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
1134,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1135,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1136,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1137,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1138,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1139,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1140,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1141,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
1142,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1143,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1144,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1145,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1146,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1147,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1148,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# basic smoke test
"
1149,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1150,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1151,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1152,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1153,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1154,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
1155,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1156,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1157,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1158,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1159,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
1160,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# backwards compatibility shim
"
1161,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
1162,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1163,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# arm64v8
"
1164,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# amd64
"
1165,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# fallback
"
1166,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1167,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
1168,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1169,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1170,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1171,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# basic smoke test
"
1172,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1173,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1174,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1175,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1176,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
1177,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1178,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1179,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1180,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1181,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1182,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
1183,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1184,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1185,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
1186,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1187,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
1188,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1189,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1190,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
1191,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
1192,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
1193,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1194,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1195,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
1196,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1197,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1198,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1199,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1200,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1201,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1202,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# basic smoke test
"
1203,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1204,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1205,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1206,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
1207,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
1208,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1209,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
1210,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
1211,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1212,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1213,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1214,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1215,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1216,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
1217,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1218,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1219,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1220,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1221,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1222,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1223,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1224,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
1225,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1226,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
1227,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1228,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1229,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1230,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1231,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"#!/bin/sh'; \
"
1232,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1233,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
1234,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
1235,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1236,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1237,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1238,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1239,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1240,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1241,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1242,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1243,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"#!/bin/sh'; \
"
1244,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1245,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
1246,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1247,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1248,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1249,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
1250,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1251,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1252,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1253,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1254,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
1255,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1256,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1257,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1258,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1259,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1260,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"#!/bin/sh'; \
"
1261,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1262,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1263,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
1264,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
1265,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1266,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1267,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1268,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1269,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1270,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1271,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
1272,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1273,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
1274,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1275,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
1276,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1277,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1278,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"#!/bin/sh'; \
"
1279,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1280,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
1281,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1282,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1283,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1284,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1285,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
1286,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1287,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1288,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1289,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1290,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
1291,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1292,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1293,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
1294,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
1295,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1296,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1297,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
1298,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1299,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1300,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1301,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1302,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1303,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"#!/bin/sh'; \
"
1304,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1305,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1306,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1307,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1308,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
1309,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1310,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1311,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1312,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1313,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
1314,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# backwards compatibility shim
"
1315,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
1316,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1317,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# amd64
"
1318,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# fallback
"
1319,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1320,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
1321,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1322,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1323,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1324,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# basic smoke test
"
1325,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1326,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1327,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1328,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1329,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1330,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# backwards compatibility shim
"
1331,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1332,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1333,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# amd64
"
1334,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# fallback
"
1335,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1336,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1337,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1338,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1339,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1340,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# basic smoke test
"
1341,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1342,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1343,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
1344,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1345,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1346,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
1347,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1348,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1349,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1350,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1351,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1352,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1353,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1354,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1355,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1356,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
1357,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
1358,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1359,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1360,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1361,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1362,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1363,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# basic smoke test
"
1364,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1365,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1366,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1367,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1368,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1369,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
1370,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1371,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1372,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1373,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1374,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
1375,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1376,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1377,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1378,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
1379,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1380,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
1381,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1382,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1383,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1384,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
1385,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1386,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1387,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1388,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1389,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
1390,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1391,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1392,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1393,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
1394,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1395,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1396,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1397,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1398,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
1399,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1400,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1401,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
1402,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1403,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1404,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
1405,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1406,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1407,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1408,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1409,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1410,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1411,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
1412,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
1413,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1414,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# amd64
"
1415,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# fallback
"
1416,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
1417,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1418,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# basic smoke test
"
1419,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1420,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1421,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1422,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1423,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1424,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1425,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1426,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1427,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
1428,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1429,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1430,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1431,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
1432,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
1433,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1434,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
1435,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# amd64
"
1436,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# fallback
"
1437,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1438,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1439,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
1440,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
1441,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1442,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1443,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1444,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1445,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1446,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# backwards compatibility shim
"
1447,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1448,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1449,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1450,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1451,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1452,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1453,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# basic smoke test
"
1454,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1455,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
1456,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
1457,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
1458,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
1459,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1460,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1461,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1462,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1463,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1464,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"#!/bin/bash'; \
"
1465,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1466,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1467,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1468,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1469,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1470,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
1471,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1472,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
1473,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
1474,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
1475,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1476,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
1477,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1478,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1479,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
1480,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1481,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1482,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"#!/bin/sh'; \
"
1483,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1484,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1485,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
1486,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1487,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1488,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1489,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1490,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1491,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1492,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1493,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1494,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
1495,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1496,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1497,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1498,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
1499,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1500,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1501,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1502,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1503,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1504,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
1505,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1506,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1507,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1508,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1509,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1510,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1511,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1512,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1513,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1514,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# backwards compatibility shim
"
1515,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1516,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1517,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# arm64v8
"
1518,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# amd64
"
1519,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# fallback
"
1520,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1521,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1522,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1523,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1524,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1525,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# basic smoke test
"
1526,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1527,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1528,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1529,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1530,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
1531,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1532,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1533,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
1534,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
1535,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1536,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1537,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
1538,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1539,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1540,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1541,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
1542,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
1543,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1544,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
1545,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
1546,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
1547,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1548,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1549,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1550,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1551,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# basic smoke test
"
1552,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1553,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1554,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1555,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
1556,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1557,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1558,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
1559,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1560,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1561,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"#!/bin/sh'; \
"
1562,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1563,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1564,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1565,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1566,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1567,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1568,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1569,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1570,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1571,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1572,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1573,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"#!/bin/sh'; \
"
1574,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1575,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1576,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1577,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1578,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1579,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1580,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1581,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1582,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
1583,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1584,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1585,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1586,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1587,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
1588,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1589,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1590,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1591,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1592,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1593,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# backwards compatibility shim
"
1594,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1595,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1596,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1597,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1598,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1599,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1600,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# basic smoke test
"
1601,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1602,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1603,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1604,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1605,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
1606,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1607,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1608,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1609,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1610,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1611,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1612,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
1613,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1614,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1615,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1616,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1617,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1618,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1619,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
1620,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1621,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1622,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1623,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1624,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1625,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1626,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# backwards compatibility shim
"
1627,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
1628,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1629,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
1630,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
1631,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
1632,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1633,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1634,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1635,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1636,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# basic smoke test
"
1637,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1638,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
1639,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1640,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
1641,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1642,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1643,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1644,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1645,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1646,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# backwards compatibility shim
"
1647,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1648,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1649,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# arm64v8
"
1650,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# amd64
"
1651,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# fallback
"
1652,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1653,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1654,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1655,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1656,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1657,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# basic smoke test
"
1658,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1659,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1660,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
1661,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1662,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
1663,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1664,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1665,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1666,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1667,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
1668,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1669,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
1670,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1671,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1672,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1673,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
1674,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1675,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1676,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1677,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1678,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1679,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# backwards compatibility shim
"
1680,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1681,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1682,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1683,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1684,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1685,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1686,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# basic smoke test
"
1687,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1688,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1689,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
1690,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1691,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1692,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
1693,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1694,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1695,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1696,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1697,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1698,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1699,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1700,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1701,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
1702,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1703,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
1704,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1705,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1706,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1707,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1708,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1709,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1710,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
1711,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
1712,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1713,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1714,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
1715,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1716,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1717,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1718,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
1719,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1720,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1721,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1722,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
1723,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1724,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1725,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
1726,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1727,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1728,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# backwards compatibility shim
"
1729,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
1730,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1731,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
1732,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1733,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1734,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1735,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# basic smoke test
"
1736,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
1737,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1738,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1739,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1740,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1741,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
1742,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1743,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1744,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
1745,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1746,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1747,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1748,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1749,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1750,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
1751,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1752,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
1753,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1754,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1755,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
1756,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1757,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1758,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
1759,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1760,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1761,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
1762,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1763,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1764,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1765,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1766,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1767,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1768,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1769,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1770,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
1771,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1772,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1773,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1774,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
1775,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1776,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1777,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
1778,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1779,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
1780,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1781,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1782,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1783,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1784,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
1785,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1786,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1787,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1788,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
1789,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
1790,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1791,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
1792,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
1793,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
1794,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1795,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
1796,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1797,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1798,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jre/slim/Dockerfile,"# basic smoke test
"
1799,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1800,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
1801,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
1802,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1803,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
1804,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
1805,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1806,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1807,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1808,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1809,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1810,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"#!/bin/sh'; \
"
1811,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1812,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1813,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
1814,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1815,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1816,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
1817,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1818,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1819,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1820,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1821,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1822,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1823,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1824,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1825,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1826,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
1827,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1828,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1829,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1830,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1831,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
1832,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1833,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1834,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1835,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
1836,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1837,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1838,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
1839,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1840,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1841,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"#!/bin/sh'; \
"
1842,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1843,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1844,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1845,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1846,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1847,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1848,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1849,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1850,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
1851,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
1852,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
1853,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1854,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1855,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1856,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
1857,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1858,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1859,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
1860,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1861,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1862,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
1863,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1864,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
1865,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1866,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1867,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1868,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1869,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
1870,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1871,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1872,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
1873,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
1874,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1875,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"#!/bin/sh'; \
"
1876,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1877,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1878,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1879,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1880,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1881,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1882,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1883,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
1884,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1885,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
1886,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1887,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1888,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1889,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1890,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
1891,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1892,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1893,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
1894,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
1895,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1896,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
1897,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
1898,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1899,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1900,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1901,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1902,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
1903,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1904,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1905,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1906,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1907,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
1908,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1909,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1910,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
1911,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1912,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1913,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"#!/bin/sh'; \
"
1914,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1915,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
1916,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
1917,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1918,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1919,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1920,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1921,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1922,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1923,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1924,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1925,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
1926,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1927,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1928,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1929,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1930,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
1931,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
1932,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
1933,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
1934,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1935,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1936,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1937,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1938,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
1939,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
1940,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
1941,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
1942,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
1943,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1944,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
1945,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
1946,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
1947,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
1948,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
1949,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
1950,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
1951,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1952,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1953,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1954,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
1955,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1956,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1957,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
1958,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
1959,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1960,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
1961,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
1962,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
1963,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
1964,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# backwards compatibility shim
"
1965,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
1966,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
1967,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
1968,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# arm64v8
"
1969,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# amd64
"
1970,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# fallback
"
1971,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
1972,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
1973,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
1974,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
1975,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
1976,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
1977,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
1978,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# basic smoke test
"
1979,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1980,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1981,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1982,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
1983,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1984,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
1985,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
1986,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
1987,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
1988,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
1989,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1990,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
1991,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1992,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
1993,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
1994,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
1995,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
1996,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
1997,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
1998,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
1999,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2000,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2001,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2002,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2003,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2004,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2005,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2006,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2007,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2008,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2009,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2010,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2011,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2012,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# backwards compatibility shim
"
2013,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
2014,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2015,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
2016,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
2017,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2018,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2019,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
2020,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2021,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# basic smoke test
"
2022,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2023,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
2024,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
2025,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2026,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2027,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
2028,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2029,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2030,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2031,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2032,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2033,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2034,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2035,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
2036,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2037,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2038,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2039,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
2040,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2041,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2042,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# arm64v8
"
2043,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# amd64
"
2044,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# fallback
"
2045,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2046,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2047,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
2048,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2049,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2050,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2051,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2052,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2053,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
2054,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2055,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2056,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
2057,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2058,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
2059,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2060,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2061,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2062,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2063,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2064,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2065,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2066,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2067,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2068,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2069,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2070,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2071,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2072,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2073,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2074,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2075,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2076,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
2077,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2078,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2079,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2080,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
2081,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2082,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2083,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2084,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
2085,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2086,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2087,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2088,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2089,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2090,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2091,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
2092,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2093,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2094,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# basic smoke test
"
2095,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2096,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2097,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2098,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2099,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2100,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2101,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2102,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
2103,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2104,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2105,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2106,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
2107,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# backwards compatibility shim
"
2108,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2109,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2110,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2111,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# arm64v8
"
2112,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# amd64
"
2113,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# fallback
"
2114,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2115,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2116,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2117,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2118,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
2119,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2120,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2121,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# basic smoke test
"
2122,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2123,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2124,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
2125,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2126,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
2127,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2128,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2129,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2130,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2131,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2132,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
2133,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2134,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2135,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"#!/bin/sh'; \
"
2136,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2137,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2138,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
2139,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
2140,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2141,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2142,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2143,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2144,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2145,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2146,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2147,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2148,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
2149,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
2150,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2151,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2152,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# arm64v8
"
2153,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# amd64
"
2154,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# fallback
"
2155,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2156,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
2157,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2158,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2159,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2160,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# basic smoke test
"
2161,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2162,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2163,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
2164,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2165,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2166,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
2167,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2168,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
2169,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2170,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2171,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2172,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2173,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
2174,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2175,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2176,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
2177,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2178,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2179,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2180,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2181,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2182,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2183,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2184,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2185,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2186,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2187,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2188,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
2189,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2190,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2191,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
2192,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2193,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2194,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"#!/bin/sh'; \
"
2195,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2196,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2197,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2198,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2199,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2200,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2201,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2202,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2203,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2204,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# backwards compatibility shim
"
2205,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
2206,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2207,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2208,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2209,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2210,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2211,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
2212,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2213,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2214,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# basic smoke test
"
2215,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2216,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2217,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2218,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2219,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2220,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
2221,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2222,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2223,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2224,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2225,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"#!/bin/bash'; \
"
2226,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2227,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2228,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2229,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2230,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2231,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2232,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2233,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2234,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2235,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2236,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2237,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2238,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# backwards compatibility shim
"
2239,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
2240,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2241,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
2242,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2243,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2244,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2245,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# basic smoke test
"
2246,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2247,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2248,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2249,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2250,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
2251,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2252,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2253,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2254,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2255,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
2256,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2257,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
2258,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
2259,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2260,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
2261,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2262,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2263,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2264,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2265,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2266,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
2267,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2268,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
2269,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2270,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2271,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2272,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2273,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# backwards compatibility shim
"
2274,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2275,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2276,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2277,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2278,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2279,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2280,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
2281,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2282,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2283,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# basic smoke test
"
2284,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2285,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2286,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2287,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2288,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
2289,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2290,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2291,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
2292,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2293,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2294,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
2295,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2296,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2297,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2298,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2299,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2300,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2301,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
2302,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2303,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2304,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
2305,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2306,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2307,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2308,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2309,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2310,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2311,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2312,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2313,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
2314,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
2315,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
2316,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
2317,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2318,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2319,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2320,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
2321,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2322,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2323,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2324,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2325,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# backwards compatibility shim
"
2326,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
2327,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2328,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2329,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2330,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2331,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2332,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
2333,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2334,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2335,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# basic smoke test
"
2336,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2337,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2338,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2339,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2340,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2341,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
2342,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
2343,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2344,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
2345,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
2346,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2347,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2348,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2349,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2350,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2351,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"#!/bin/sh'; \
"
2352,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2353,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2354,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2355,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2356,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2357,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2358,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2359,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
2360,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2361,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2362,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
2363,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2364,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2365,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
2366,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2367,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2368,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2369,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2370,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2371,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2372,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2373,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2374,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2375,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# backwards compatibility shim
"
2376,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2377,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2378,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# arm64v8
"
2379,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# amd64
"
2380,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# fallback
"
2381,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2382,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
2383,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2384,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2385,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2386,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# basic smoke test
"
2387,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2388,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2389,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2390,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2391,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2392,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2393,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2394,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2395,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2396,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2397,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
2398,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2399,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2400,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"#!/bin/sh'; \
"
2401,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2402,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2403,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2404,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2405,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2406,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2407,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2408,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2409,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2410,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2411,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2412,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2413,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2414,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2415,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
2416,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2417,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2418,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
2419,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2420,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2421,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
2422,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2423,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2424,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
2425,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2426,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2427,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2428,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2429,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2430,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2431,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2432,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
2433,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2434,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2435,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2436,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2437,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
2438,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2439,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2440,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2441,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2442,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2443,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2444,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
2445,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
2446,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2447,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2448,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
2449,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2450,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2451,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
2452,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2453,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
2454,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2455,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2456,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
2457,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
2458,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2459,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2460,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
2461,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# amd64
"
2462,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# fallback
"
2463,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2464,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
2465,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2466,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2467,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2468,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
2469,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2470,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2471,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2472,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2473,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
2474,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2475,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2476,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2477,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2478,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2479,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2480,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2481,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2482,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2483,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2484,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"#!/bin/sh'; \
"
2485,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2486,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2487,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2488,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
2489,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
2490,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2491,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2492,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2493,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2494,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2495,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
2496,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2497,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2498,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# basic smoke test
"
2499,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2500,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2501,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2502,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2503,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2504,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2505,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2506,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2507,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2508,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"#!/bin/sh'; \
"
2509,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2510,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2511,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
2512,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2513,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2514,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2515,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2516,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
2517,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2518,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2519,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2520,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2521,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
2522,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2523,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2524,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
2525,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
2526,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2527,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2528,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2529,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# amd64
"
2530,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# fallback
"
2531,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2532,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2533,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2534,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2535,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
2536,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2537,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2538,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# basic smoke test
"
2539,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2540,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
2541,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
2542,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2543,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2544,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# amd64
"
2545,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# fallback
"
2546,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2547,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
2548,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2549,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2550,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2551,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# basic smoke test
"
2552,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2553,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2554,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
2555,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2556,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2557,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2558,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2559,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2560,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2561,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2562,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2563,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# backwards compatibility shim
"
2564,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2565,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
2566,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# amd64
"
2567,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# fallback
"
2568,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2569,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
2570,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2571,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2572,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2573,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# basic smoke test
"
2574,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2575,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2576,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2577,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2578,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2579,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"#!/bin/sh'; \
"
2580,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2581,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2582,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2583,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2584,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2585,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
2586,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2587,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2588,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
2589,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2590,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2591,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2592,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# basic smoke test
"
2593,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2594,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2595,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2596,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2597,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
2598,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
2599,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2600,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2601,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
2602,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2603,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2604,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2605,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2606,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2607,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
2608,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2609,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2610,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
2611,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2612,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2613,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2614,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2615,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2616,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2617,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2618,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2619,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2620,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2621,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2622,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2623,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2624,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
2625,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2626,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2627,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2628,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
2629,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2630,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2631,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
2632,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2633,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2634,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2635,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# basic smoke test
"
2636,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2637,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2638,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2639,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2640,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2641,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2642,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"#!/bin/sh'; \
"
2643,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2644,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2645,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2646,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2647,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2648,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2649,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2650,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2651,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
2652,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2653,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2654,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
2655,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2656,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2657,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
2658,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2659,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2660,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2661,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2662,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2663,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2664,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2665,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2666,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2667,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2668,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2669,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2670,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2671,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2672,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2673,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2674,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2675,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
2676,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2677,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2678,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2679,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2680,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2681,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2682,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
2683,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2684,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2685,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# basic smoke test
"
2686,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2687,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2688,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2689,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2690,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2691,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2692,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2693,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"#!/bin/sh'; \
"
2694,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2695,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2696,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2697,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2698,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
2699,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2700,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2701,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
2702,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2703,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2704,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2705,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2706,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2707,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2708,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2709,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2710,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2711,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2712,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2713,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# backwards compatibility shim
"
2714,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2715,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2716,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
2717,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2718,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2719,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2720,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# basic smoke test
"
2721,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2722,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2723,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2724,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2725,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2726,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2727,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
2728,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
2729,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2730,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2731,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
2732,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2733,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2734,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
2735,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
2736,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2737,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2738,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
2739,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2740,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2741,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
2742,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2743,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2744,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
2745,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2746,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
2747,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2748,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2749,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
2750,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2751,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2752,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"#!/bin/sh'; \
"
2753,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2754,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2755,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2756,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2757,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2758,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2759,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2760,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2761,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2762,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2763,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"#!/bin/bash'; \
"
2764,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2765,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2766,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2767,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2768,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2769,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2770,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2771,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
2772,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2773,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2774,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2775,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2776,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2777,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2778,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2779,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2780,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2781,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
2782,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2783,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2784,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2785,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2786,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2787,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2788,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
2789,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2790,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2791,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2792,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2793,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# backwards compatibility shim
"
2794,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
2795,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2796,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
2797,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
2798,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
2799,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2800,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
2801,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2802,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2803,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# basic smoke test
"
2804,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2805,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2806,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2807,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2808,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2809,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
2810,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2811,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2812,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
2813,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2814,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2815,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2816,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
2817,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2818,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2819,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
2820,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2821,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2822,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
2823,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2824,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2825,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2826,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2827,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2828,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2829,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2830,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
2831,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2832,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2833,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
2834,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2835,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2836,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2837,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# basic smoke test
"
2838,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2839,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2840,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2841,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2842,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2843,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2844,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"#!/bin/sh'; \
"
2845,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2846,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2847,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2848,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2849,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2850,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
2851,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2852,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2853,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2854,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2855,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2856,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2857,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2858,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2859,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2860,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
2861,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2862,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2863,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2864,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
2865,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2866,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# backwards compatibility shim
"
2867,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
2868,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
2869,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
2870,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
2871,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
2872,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2873,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# basic smoke test
"
2874,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2875,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2876,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2877,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
2878,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2879,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2880,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
2881,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2882,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2883,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2884,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2885,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2886,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2887,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2888,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2889,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
2890,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
2891,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
2892,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
2893,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
2894,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
2895,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
2896,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2897,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2898,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
2899,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2900,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2901,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
2902,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2903,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2904,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"#!/bin/sh'; \
"
2905,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2906,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
2907,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2908,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2909,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2910,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2911,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
2912,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2913,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2914,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2915,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2916,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
2917,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2918,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
2919,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2920,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
2921,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2922,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2923,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2924,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
2925,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2926,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2927,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2928,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
2929,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
2930,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
2931,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2932,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
2933,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
2934,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2935,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
2936,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2937,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2938,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
2939,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2940,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2941,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2942,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2943,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2944,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2945,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
2946,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2947,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2948,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"#!/bin/sh'; \
"
2949,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2950,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2951,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2952,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2953,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2954,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2955,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2956,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2957,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2958,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
2959,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2960,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2961,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2962,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
2963,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
2964,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
2965,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
2966,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2967,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2968,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2969,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
2970,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2971,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2972,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
2973,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
2974,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2975,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
2976,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
2977,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
2978,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
2979,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
2980,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
2981,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2982,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2983,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2984,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
2985,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2986,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
2987,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
2988,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
2989,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
2990,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
2991,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
2992,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
2993,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
2994,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
2995,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
2996,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
2997,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
2998,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
2999,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3000,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
3001,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3002,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3003,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3004,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
3005,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3006,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3007,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3008,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
3009,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3010,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3011,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3012,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
3013,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3014,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3015,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3016,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3017,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
3018,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3019,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3020,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3021,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3022,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3023,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3024,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# arm64v8
"
3025,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# amd64
"
3026,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# fallback
"
3027,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3028,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3029,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3030,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3031,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3032,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# basic smoke test
"
3033,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3034,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3035,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3036,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3037,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3038,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3039,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3040,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3041,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3042,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3043,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3044,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3045,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3046,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3047,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3048,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
3049,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3050,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3051,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3052,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
3053,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3054,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3055,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3056,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3057,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3058,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3059,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3060,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3061,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3062,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3063,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# basic smoke test
"
3064,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3065,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3066,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3067,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
3068,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3069,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
3070,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3071,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3072,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3073,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3074,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3075,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3076,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3077,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3078,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"#!/bin/sh'; \
"
3079,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3080,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3081,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3082,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3083,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
3084,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3085,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3086,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3087,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3088,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3089,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3090,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3091,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3092,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3093,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
3094,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3095,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3096,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3097,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3098,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
3099,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3100,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3101,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3102,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3103,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3104,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3105,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3106,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3107,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3108,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3109,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
3110,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3111,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3112,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3113,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3114,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
3115,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3116,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3117,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3118,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3119,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3120,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# basic smoke test
"
3121,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3122,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3123,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3124,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3125,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3126,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
3127,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3128,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3129,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3130,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3131,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
3132,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3133,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3134,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3135,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
3136,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3137,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
3138,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3139,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3140,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3141,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
3142,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3143,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
3144,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
3145,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3146,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3147,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3148,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3149,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3150,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# basic smoke test
"
3151,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3152,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3153,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3154,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3155,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# backwards compatibility shim
"
3156,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
3157,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3158,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
3159,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3160,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3161,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3162,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# basic smoke test
"
3163,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3164,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3165,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3166,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3167,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
3168,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3169,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3170,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3171,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3172,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
3173,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3174,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3175,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3176,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3177,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# backwards compatibility shim
"
3178,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
3179,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
3180,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
3181,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
3182,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3183,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3184,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
3185,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3186,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3187,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# basic smoke test
"
3188,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3189,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3190,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3191,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3192,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3193,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"#!/bin/sh'; \
"
3194,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3195,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3196,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3197,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3198,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3199,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3200,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3201,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3202,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
3203,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3204,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3205,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3206,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3207,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3208,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3209,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3210,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3211,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
3212,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3213,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3214,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3215,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3216,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3217,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
3218,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3219,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3220,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
3221,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3222,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3223,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3224,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3225,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3226,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3227,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3228,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3229,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3230,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
3231,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3232,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3233,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3234,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3235,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3236,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3237,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
3238,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3239,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3240,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"#!/bin/sh'; \
"
3241,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3242,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3243,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3244,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3245,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3246,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3247,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3248,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3249,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3250,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3251,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3252,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3253,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3254,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3255,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3256,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3257,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
3258,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3259,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3260,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3261,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3262,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
3263,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3264,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3265,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3266,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3267,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3268,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3269,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3270,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3271,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
3272,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
3273,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
3274,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3275,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3276,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3277,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3278,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
3279,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3280,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3281,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3282,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3283,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3284,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3285,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3286,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
3287,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3288,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3289,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
3290,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3291,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3292,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
3293,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3294,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3295,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
3296,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3297,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3298,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3299,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3300,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3301,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3302,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
3303,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3304,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
3305,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# basic smoke test
"
3306,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3307,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3308,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3309,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3310,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3311,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"#!/bin/bash'; \
"
3312,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3313,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3314,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3315,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3316,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3317,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3318,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3319,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
3320,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3321,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3322,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3323,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3324,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
3325,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
3326,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3327,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
3328,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
3329,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3330,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3331,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3332,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
3333,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# backwards compatibility shim
"
3334,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
3335,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
3336,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3337,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# amd64
"
3338,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# fallback
"
3339,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
3340,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
3341,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3342,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3343,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
3344,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3345,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3346,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# basic smoke test
"
3347,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3348,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3349,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3350,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
3351,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3352,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
3353,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
3354,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3355,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
3356,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3357,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3358,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3359,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3360,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3361,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3362,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# amd64
"
3363,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# fallback
"
3364,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3365,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3366,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3367,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3368,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3369,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# basic smoke test
"
3370,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3371,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3372,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
3373,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3374,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
3375,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
3376,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3377,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3378,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3379,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3380,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# backwards compatibility shim
"
3381,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
3382,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3383,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
3384,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
3385,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3386,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# basic smoke test
"
3387,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3388,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3389,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3390,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3391,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3392,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3393,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3394,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
3395,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3396,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3397,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3398,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3399,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3400,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3401,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3402,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3403,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3404,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3405,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3406,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# backwards compatibility shim
"
3407,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3408,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3409,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# arm64v8
"
3410,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# amd64
"
3411,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# fallback
"
3412,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3413,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
3414,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3415,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3416,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3417,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# basic smoke test
"
3418,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3419,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3420,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3421,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
3422,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3423,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3424,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
3425,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3426,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3427,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"#!/bin/sh'; \
"
3428,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3429,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3430,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3431,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3432,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3433,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3434,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3435,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
3436,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
3437,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3438,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3439,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
3440,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3441,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3442,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3443,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3444,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3445,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3446,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3447,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3448,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3449,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
3450,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
3451,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3452,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3453,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# arm64v8
"
3454,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# amd64
"
3455,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# fallback
"
3456,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3457,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
3458,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3459,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3460,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3461,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# basic smoke test
"
3462,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3463,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3464,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
3465,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3466,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3467,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
3468,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3469,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3470,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
3471,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
3472,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3473,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3474,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3475,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3476,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3477,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3478,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3479,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3480,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3481,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3482,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3483,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3484,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3485,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"#!/bin/sh'; \
"
3486,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3487,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3488,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3489,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3490,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3491,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3492,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3493,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3494,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3495,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"#!/bin/sh'; \
"
3496,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3497,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3498,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3499,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3500,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
3501,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3502,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3503,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3504,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3505,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
3506,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3507,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
3508,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
3509,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3510,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3511,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3512,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3513,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# basic smoke test
"
3514,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3515,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
3516,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3517,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
3518,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3519,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3520,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3521,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
3522,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3523,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
3524,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3525,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3526,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3527,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
3528,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
3529,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3530,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3531,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
3532,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3533,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3534,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
3535,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3536,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3537,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
3538,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3539,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3540,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
3541,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3542,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3543,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3544,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3545,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3546,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3547,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3548,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3549,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# backwards compatibility shim
"
3550,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
3551,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
3552,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
3553,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
3554,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3555,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3556,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
3557,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3558,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3559,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# basic smoke test
"
3560,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3561,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3562,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3563,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3564,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3565,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
3566,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3567,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3568,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3569,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3570,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3571,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3572,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3573,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3574,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3575,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
3576,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3577,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3578,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3579,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3580,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
3581,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3582,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3583,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
3584,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3585,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# amd64
"
3586,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# fallback
"
3587,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
3588,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3589,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# basic smoke test
"
3590,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3591,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3592,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3593,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3594,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3595,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
3596,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3597,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3598,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3599,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3600,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3601,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3602,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3603,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3604,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
3605,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
3606,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
3607,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3608,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
3609,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3610,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3611,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3612,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3613,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3614,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3615,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
3616,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3617,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3618,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
3619,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# amd64
"
3620,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# fallback
"
3621,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3622,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3623,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
3624,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
3625,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3626,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3627,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3628,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
3629,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3630,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3631,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3632,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3633,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3634,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"#!/bin/bash'; \
"
3635,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3636,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3637,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3638,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3639,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3640,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3641,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
3642,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# backwards compatibility shim
"
3643,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3644,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3645,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# arm64v8
"
3646,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# amd64
"
3647,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# fallback
"
3648,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3649,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
3650,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3651,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3652,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3653,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# basic smoke test
"
3654,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3655,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3656,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3657,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3658,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
3659,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3660,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3661,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
3662,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3663,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3664,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"#!/bin/sh'; \
"
3665,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3666,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3667,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3668,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3669,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3670,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3671,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
3672,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
3673,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3674,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3675,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3676,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3677,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3678,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"#!/bin/sh'; \
"
3679,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3680,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3681,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3682,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3683,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3684,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3685,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3686,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3687,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
3688,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3689,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
3690,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3691,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
3692,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3693,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
3694,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3695,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3696,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3697,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3698,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
3699,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3700,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3701,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3702,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3703,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3704,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3705,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3706,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3707,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
3708,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
3709,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3710,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
3711,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# basic smoke test
"
3712,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3713,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3714,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3715,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3716,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
3717,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3718,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3719,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3720,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3721,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
3722,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3723,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3724,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3725,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
3726,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
3727,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
3728,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3729,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3730,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3731,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3732,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3733,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3734,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3735,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
3736,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3737,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3738,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3739,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
3740,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# backwards compatibility shim
"
3741,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
3742,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
3743,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3744,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# amd64
"
3745,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# fallback
"
3746,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
3747,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
3748,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3749,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3750,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
3751,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3752,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3753,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# basic smoke test
"
3754,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3755,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
3756,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3757,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3758,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"#!/bin/sh'; \
"
3759,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3760,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3761,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3762,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3763,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3764,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3765,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3766,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3767,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3768,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3769,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3770,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3771,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3772,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3773,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3774,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# basic smoke test
"
3775,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3776,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3777,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3778,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3779,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
3780,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3781,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"#!/bin/sh'; \
"
3782,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3783,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3784,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3785,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3786,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3787,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3788,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3789,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3790,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3791,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3792,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3793,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3794,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3795,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3796,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3797,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
3798,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3799,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3800,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3801,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3802,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3803,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3804,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
3805,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3806,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3807,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3808,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3809,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3810,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3811,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# backwards compatibility shim
"
3812,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3813,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3814,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
3815,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3816,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3817,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3818,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# basic smoke test
"
3819,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3820,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3821,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3822,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3823,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3824,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3825,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3826,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3827,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3828,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
3829,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3830,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
3831,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
3832,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3833,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3834,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3835,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3836,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3837,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# basic smoke test
"
3838,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3839,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3840,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3841,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3842,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3843,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3844,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3845,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3846,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3847,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# basic smoke test
"
3848,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3849,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3850,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3851,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
3852,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3853,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3854,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"#!/bin/sh'; \
"
3855,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3856,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3857,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3858,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3859,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3860,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3861,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3862,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3863,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3864,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3865,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3866,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3867,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3868,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3869,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
3870,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
3871,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
3872,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
3873,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# arm64v8
"
3874,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# amd64
"
3875,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# fallback
"
3876,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3877,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
3878,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3879,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3880,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3881,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# basic smoke test
"
3882,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3883,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3884,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3885,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3886,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3887,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# backwards compatibility shim
"
3888,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3889,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3890,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
3891,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3892,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3893,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3894,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# basic smoke test
"
3895,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3896,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3897,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3898,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
3899,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
3900,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3901,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
3902,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
3903,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
3904,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3905,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
3906,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3907,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3908,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# basic smoke test
"
3909,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3910,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
3911,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
3912,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
3913,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
3914,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
3915,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
3916,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
3917,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3918,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3919,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3920,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3921,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3922,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
3923,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3924,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3925,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3926,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3927,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3928,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
3929,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3930,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3931,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3932,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3933,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3934,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
3935,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3936,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3937,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3938,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3939,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3940,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
3941,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3942,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3943,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3944,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3945,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
3946,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3947,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3948,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
3949,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3950,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
3951,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3952,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3953,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3954,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
3955,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
3956,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3957,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
3958,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3959,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
3960,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# backwards compatibility shim
"
3961,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
3962,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
3963,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
3964,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
3965,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
3966,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
3967,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# basic smoke test
"
3968,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
3969,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
3970,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
3971,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
3972,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
3973,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
3974,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
3975,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
3976,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3977,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
3978,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3979,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3980,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
3981,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3982,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3983,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3984,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3985,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3986,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3987,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
3988,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
3989,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
3990,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
3991,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
3992,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
3993,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
3994,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
3995,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
3996,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
3997,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
3998,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
3999,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4000,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
4001,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4002,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4003,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
4004,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
4005,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4006,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4007,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
4008,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4009,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4010,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# basic smoke test
"
4011,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4012,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4013,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4014,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4015,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
4016,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4017,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4018,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4019,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4020,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4021,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4022,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4023,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4024,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
4025,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4026,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4027,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"#!/bin/sh'; \
"
4028,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4029,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4030,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
4031,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4032,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4033,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4034,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4035,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4036,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4037,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4038,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4039,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4040,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
4041,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4042,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4043,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4044,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4045,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4046,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4047,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4048,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4049,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4050,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4051,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
4052,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4053,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4054,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
4055,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4056,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4057,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
4058,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4059,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4060,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4061,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4062,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4063,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4064,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4065,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4066,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4067,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
4068,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4069,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4070,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
4071,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4072,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4073,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"#!/bin/sh'; \
"
4074,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4075,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4076,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4077,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4078,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4079,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4080,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4081,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4082,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4083,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4084,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4085,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4086,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4087,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4088,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
4089,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4090,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4091,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4092,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4093,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4094,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4095,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
4096,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4097,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4098,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4099,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
4100,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4101,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4102,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4103,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4104,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4105,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
4106,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4107,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4108,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4109,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4110,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4111,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4112,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4113,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4114,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4115,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4116,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4117,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4118,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4119,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4120,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# backwards compatibility shim
"
4121,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4122,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4123,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
4124,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
4125,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4126,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4127,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
4128,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4129,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4130,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# basic smoke test
"
4131,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4132,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
4133,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
4134,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4135,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4136,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# arm64v8
"
4137,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# amd64
"
4138,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# fallback
"
4139,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4140,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
4141,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4142,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4143,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4144,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# basic smoke test
"
4145,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4146,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4147,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4148,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4149,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
4150,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4151,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4152,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4153,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4154,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
4155,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4156,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4157,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4158,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4159,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4160,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4161,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4162,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4163,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4164,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4165,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4166,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4167,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4168,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4169,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4170,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"#!/bin/sh'; \
"
4171,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4172,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4173,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4174,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4175,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4176,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4177,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4178,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4179,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4180,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4181,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4182,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4183,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4184,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4185,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4186,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
4187,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4188,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4189,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4190,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4191,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
4192,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4193,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4194,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4195,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4196,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
4197,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4198,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4199,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4200,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4201,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4202,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4203,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4204,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
4205,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4206,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4207,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4208,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
4209,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4210,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4211,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4212,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
4213,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4214,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4215,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4216,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4217,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4218,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"#!/bin/sh'; \
"
4219,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4220,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4221,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4222,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4223,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4224,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4225,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4226,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
4227,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
4228,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
4229,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
4230,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
4231,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4232,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# basic smoke test
"
4233,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4234,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4235,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4236,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4237,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4238,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4239,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4240,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4241,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4242,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
4243,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4244,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4245,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# amd64
"
4246,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# fallback
"
4247,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4248,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4249,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
4250,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
4251,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4252,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4253,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
4254,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4255,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
4256,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4257,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4258,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4259,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# backwards compatibility shim
"
4260,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4261,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4262,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
4263,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
4264,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4265,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4266,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4267,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4268,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4269,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# basic smoke test
"
4270,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
4271,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
4272,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4273,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
4274,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4275,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4276,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4277,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4278,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
4279,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4280,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4281,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
4282,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
4283,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4284,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4285,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
4286,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4287,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4288,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4289,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4290,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
4291,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
4292,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
4293,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4294,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4295,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
4296,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4297,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4298,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
4299,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4300,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4301,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4302,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4303,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4304,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4305,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4306,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4307,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4308,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
4309,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4310,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
4311,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4312,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4313,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4314,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
4315,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4316,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4317,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
4318,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
4319,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
4320,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4321,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4322,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
4323,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
4324,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4325,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4326,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4327,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4328,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
4329,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4330,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4331,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
4332,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4333,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4334,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
4335,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4336,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4337,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
4338,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4339,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4340,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4341,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4342,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4343,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4344,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4345,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4346,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4347,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
4348,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4349,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4350,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4351,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
4352,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4353,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4354,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4355,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4356,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4357,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# backwards compatibility shim
"
4358,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4359,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4360,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4361,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4362,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4363,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4364,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# basic smoke test
"
4365,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4366,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4367,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4368,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4369,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4370,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# backwards compatibility shim
"
4371,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
4372,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4373,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4374,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4375,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4376,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4377,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# basic smoke test
"
4378,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4379,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4380,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4381,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4382,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4383,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4384,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4385,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4386,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4387,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
4388,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4389,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4390,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
4391,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4392,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# amd64
"
4393,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# fallback
"
4394,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
4395,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4396,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# basic smoke test
"
4397,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4398,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4399,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4400,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4401,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4402,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
4403,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4404,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
4405,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4406,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4407,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4408,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4409,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4410,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"#!/bin/sh'; \
"
4411,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4412,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4413,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4414,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4415,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4416,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4417,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
4418,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4419,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4420,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
4421,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4422,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4423,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4424,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# basic smoke test
"
4425,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4426,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
4427,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4428,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4429,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
4430,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4431,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4432,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4433,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4434,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
4435,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4436,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4437,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4438,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4439,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4440,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4441,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4442,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4443,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4444,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
4445,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4446,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4447,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4448,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
4449,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4450,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4451,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4452,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4453,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
4454,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4455,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4456,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4457,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4458,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
4459,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4460,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4461,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4462,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4463,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
4464,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4465,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4466,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4467,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4468,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
4469,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4470,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4471,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4472,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
4473,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4474,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4475,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4476,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4477,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"#!/bin/bash'; \
"
4478,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4479,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4480,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4481,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4482,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
4483,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4484,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4485,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"#!/bin/sh'; \
"
4486,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4487,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4488,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
4489,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4490,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4491,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4492,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4493,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4494,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4495,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4496,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4497,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4498,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4499,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4500,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4501,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4502,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4503,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4504,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# backwards compatibility shim
"
4505,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
4506,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
4507,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
4508,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4509,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# basic smoke test
"
4510,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4511,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4512,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4513,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4514,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"#!/bin/sh'; \
"
4515,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4516,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4517,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4518,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4519,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
4520,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4521,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4522,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
4523,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4524,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4525,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4526,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4527,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4528,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4529,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4530,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4531,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4532,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4533,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4534,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"#!/bin/sh'; \
"
4535,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4536,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4537,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4538,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4539,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4540,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4541,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4542,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"#!/bin/sh'; \
"
4543,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4544,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4545,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4546,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4547,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4548,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4549,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4550,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4551,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4552,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4553,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4554,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4555,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
4556,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4557,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4558,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4559,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4560,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4561,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4562,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4563,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# backwards compatibility shim
"
4564,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4565,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4566,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4567,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4568,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4569,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4570,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# basic smoke test
"
4571,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4572,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4573,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
4574,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
4575,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4576,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4577,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
4578,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4579,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4580,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4581,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4582,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4583,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# backwards compatibility shim
"
4584,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4585,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4586,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4587,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4588,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4589,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4590,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# basic smoke test
"
4591,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4592,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4593,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4594,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
4595,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
4596,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
4597,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
4598,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
4599,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4600,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4601,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
4602,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4603,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4604,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# basic smoke test
"
4605,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4606,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4607,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4608,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4609,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
4610,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4611,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4612,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4613,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4614,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
4615,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4616,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4617,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4618,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4619,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
4620,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4621,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4622,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4623,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
4624,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4625,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4626,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4627,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
4628,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4629,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4630,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4631,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4632,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
4633,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4634,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4635,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
4636,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4637,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4638,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
4639,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4640,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4641,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4642,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4643,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4644,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4645,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4646,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4647,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4648,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
4649,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4650,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4651,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4652,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4653,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4654,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4655,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
4656,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
4657,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4658,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4659,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
4660,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# amd64
"
4661,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# fallback
"
4662,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4663,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
4664,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4665,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4666,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4667,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
4668,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4669,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4670,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4671,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4672,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4673,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
4674,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4675,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4676,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4677,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4678,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4679,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4680,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4681,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4682,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4683,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4684,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4685,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4686,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4687,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4688,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4689,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4690,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
4691,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4692,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4693,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4694,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4695,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4696,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4697,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4698,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4699,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4700,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4701,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
4702,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4703,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4704,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4705,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4706,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4707,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4708,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4709,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4710,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4711,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4712,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4713,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4714,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4715,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4716,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4717,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
4718,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4719,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4720,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
4721,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4722,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4723,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
4724,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4725,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4726,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
4727,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4728,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4729,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4730,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4731,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4732,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4733,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4734,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
4735,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4736,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4737,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
4738,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# amd64
"
4739,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# fallback
"
4740,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4741,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4742,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
4743,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
4744,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4745,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4746,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4747,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4748,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4749,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
4750,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4751,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
4752,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4753,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
4754,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4755,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4756,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
4757,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
4758,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
4759,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4760,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4761,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
4762,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
4763,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4764,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4765,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
4766,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4767,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4768,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4769,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4770,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4771,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4772,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4773,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4774,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
4775,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4776,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4777,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4778,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4779,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# backwards compatibility shim
"
4780,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4781,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4782,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
4783,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
4784,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4785,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4786,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4787,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4788,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4789,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# basic smoke test
"
4790,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4791,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4792,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4793,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# backwards compatibility shim
"
4794,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4795,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4796,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
4797,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
4798,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4799,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4800,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
4801,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4802,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4803,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# basic smoke test
"
4804,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4805,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4806,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4807,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4808,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# backwards compatibility shim
"
4809,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4810,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4811,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# arm64v8
"
4812,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# amd64
"
4813,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# fallback
"
4814,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4815,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4816,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4817,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4818,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4819,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# basic smoke test
"
4820,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4821,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4822,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4823,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
4824,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4825,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4826,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4827,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
4828,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4829,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4830,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4831,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4832,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4833,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4834,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4835,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4836,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4837,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4838,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"#!/bin/bash'; \
"
4839,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4840,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4841,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4842,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
4843,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
4844,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
4845,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
4846,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
4847,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4848,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4849,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
4850,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4851,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4852,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# basic smoke test
"
4853,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4854,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4855,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4856,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4857,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
4858,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4859,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4860,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4861,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4862,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4863,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"#!/bin/sh'; \
"
4864,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4865,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
4866,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
4867,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4868,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4869,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4870,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
4871,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4872,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4873,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4874,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4875,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
4876,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4877,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4878,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4879,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
4880,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4881,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4882,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
4883,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
4884,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
4885,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4886,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
4887,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4888,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4889,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# basic smoke test
"
4890,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4891,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
4892,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
4893,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4894,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
4895,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
4896,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4897,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4898,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
4899,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4900,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4901,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
4902,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4903,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4904,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"#!/bin/sh'; \
"
4905,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4906,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4907,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4908,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4909,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4910,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4911,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4912,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
4913,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4914,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
4915,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4916,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4917,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4918,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
4919,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4920,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4921,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# amd64
"
4922,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# fallback
"
4923,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4924,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4925,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
4926,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
4927,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4928,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4929,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
4930,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
4931,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4932,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
4933,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4934,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4935,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4936,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4937,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4938,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4939,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4940,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
4941,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4942,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
4943,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4944,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4945,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4946,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
4947,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4948,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
4949,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4950,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
4951,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
4952,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
4953,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
4954,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
4955,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
4956,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
4957,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
4958,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
4959,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
4960,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"#!/bin/sh'; \
"
4961,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
4962,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
4963,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
4964,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
4965,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
4966,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
4967,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
4968,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
4969,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4970,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
4971,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
4972,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
4973,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# backwards compatibility shim
"
4974,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4975,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4976,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
4977,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
4978,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
4979,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
4980,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# basic smoke test
"
4981,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4982,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4983,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4984,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4985,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4986,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
4987,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
4988,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
4989,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
4990,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
4991,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
4992,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
4993,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
4994,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
4995,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
4996,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# amd64
"
4997,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# fallback
"
4998,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
4999,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
5000,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5001,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5002,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5003,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# basic smoke test
"
5004,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5005,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5006,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
5007,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5008,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5009,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
5010,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5011,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
5012,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5013,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5014,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5015,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5016,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
5017,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5018,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5019,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5020,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5021,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
5022,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5023,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5024,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5025,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5026,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5027,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5028,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5029,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5030,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5031,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5032,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5033,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5034,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
5035,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5036,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5037,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5038,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5039,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5040,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# backwards compatibility shim
"
5041,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
5042,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5043,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
5044,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
5045,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
5046,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5047,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
5048,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5049,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5050,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# basic smoke test
"
5051,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5052,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5053,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5054,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5055,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"#!/bin/sh'; \
"
5056,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5057,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5058,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5059,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5060,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5061,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5062,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5063,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5064,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5065,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5066,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5067,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5068,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
5069,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5070,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5071,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5072,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
5073,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5074,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5075,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5076,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5077,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5078,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# backwards compatibility shim
"
5079,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
5080,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5081,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
5082,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5083,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5084,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5085,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# basic smoke test
"
5086,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5087,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5088,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5089,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5090,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
5091,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5092,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5093,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
5094,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
5095,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5096,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5097,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
5098,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5099,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5100,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5101,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5102,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5103,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5104,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5105,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5106,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5107,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5108,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
5109,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5110,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5111,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
5112,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5113,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5114,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
5115,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5116,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5117,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
5118,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5119,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5120,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5121,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5122,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5123,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5124,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5125,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
5126,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5127,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
5128,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5129,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5130,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5131,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5132,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
5133,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5134,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5135,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5136,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
5137,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5138,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5139,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5140,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5141,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5142,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5143,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5144,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
5145,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5146,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
5147,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5148,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5149,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5150,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5151,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# backwards compatibility shim
"
5152,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
5153,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5154,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
5155,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5156,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5157,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5158,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# basic smoke test
"
5159,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5160,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5161,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5162,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5163,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
5164,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5165,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5166,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
5167,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5168,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5169,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"#!/bin/sh'; \
"
5170,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5171,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5172,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5173,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5174,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5175,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5176,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5177,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5178,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
5179,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5180,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
5181,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5182,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5183,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"#!/bin/sh'; \
"
5184,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5185,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5186,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
5187,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5188,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5189,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5190,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5191,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5192,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5193,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
5194,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
5195,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5196,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5197,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
5198,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5199,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5200,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5201,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5202,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5203,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"#!/bin/bash'; \
"
5204,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
5205,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
5206,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5207,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5208,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5209,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
5210,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5211,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5212,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
5213,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5214,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5215,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5216,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# basic smoke test
"
5217,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5218,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5219,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5220,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5221,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5222,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5223,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5224,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5225,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5226,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
5227,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5228,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5229,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
5230,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5231,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5232,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5233,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# basic smoke test
"
5234,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5235,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5236,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5237,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5238,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5239,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5240,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5241,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5242,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
5243,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5244,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5245,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5246,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5247,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5248,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5249,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
5250,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5251,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
5252,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5253,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5254,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
5255,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
5256,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5257,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
5258,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# basic smoke test
"
5259,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5260,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5261,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5262,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5263,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5264,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"#!/bin/sh'; \
"
5265,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5266,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5267,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5268,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5269,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
5270,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5271,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5272,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
5273,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5274,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5275,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
5276,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5277,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5278,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5279,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5280,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5281,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5282,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5283,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
5284,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5285,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5286,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"#!/bin/sh'; \
"
5287,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5288,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5289,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
5290,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5291,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5292,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5293,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5294,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5295,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5296,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5297,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5298,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5299,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5300,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5301,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5302,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5303,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5304,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5305,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5306,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
5307,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5308,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
5309,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
5310,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5311,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5312,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
5313,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# arm64v8
"
5314,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# amd64
"
5315,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# fallback
"
5316,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
5317,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
5318,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
5319,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5320,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
5321,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5322,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5323,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# basic smoke test
"
5324,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5325,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5326,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
5327,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5328,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
5329,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5330,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
5331,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5332,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5333,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
5334,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5335,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5336,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5337,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5338,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5339,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5340,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5341,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
5342,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5343,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5344,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"#!/bin/sh'; \
"
5345,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5346,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5347,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5348,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5349,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5350,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5351,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5352,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5353,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5354,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5355,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5356,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5357,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
5358,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5359,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5360,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
5361,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5362,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5363,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5364,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5365,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5366,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5367,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5368,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5369,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5370,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
5371,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5372,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5373,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
5374,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5375,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5376,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
5377,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5378,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5379,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
5380,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
5381,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5382,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5383,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5384,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5385,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5386,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5387,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5388,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
5389,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5390,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
5391,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5392,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5393,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
5394,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5395,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5396,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5397,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5398,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
5399,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# backwards compatibility shim
"
5400,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5401,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5402,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
5403,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# amd64
"
5404,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# fallback
"
5405,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
5406,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
5407,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
5408,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5409,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
5410,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5411,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5412,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# basic smoke test
"
5413,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5414,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5415,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
5416,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5417,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
5418,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5419,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5420,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5421,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
5422,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5423,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5424,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5425,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5426,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5427,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5428,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5429,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5430,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5431,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
5432,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5433,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5434,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5435,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
5436,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5437,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5438,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5439,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
5440,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5441,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5442,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
5443,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5444,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5445,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
5446,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5447,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5448,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5449,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5450,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5451,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5452,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5453,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5454,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5455,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5456,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5457,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5458,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5459,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5460,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5461,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
5462,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5463,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5464,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
5465,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5466,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5467,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"#!/bin/sh'; \
"
5468,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5469,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5470,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5471,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5472,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5473,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5474,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5475,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
5476,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5477,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
5478,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# https://bugs.alpinelinux.org/issues/10126
"
5479,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5480,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5481,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5482,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5483,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# backwards compatibility shim
"
5484,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
5485,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5486,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
5487,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
5488,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
5489,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5490,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
5491,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5492,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# basic smoke test
"
5493,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5494,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5495,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5496,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5497,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5498,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
5499,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5500,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5501,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5502,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5503,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5504,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5505,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5506,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# backwards compatibility shim
"
5507,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5508,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5509,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
5510,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5511,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5512,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5513,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# basic smoke test
"
5514,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5515,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5516,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5517,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5518,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5519,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
5520,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5521,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
5522,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5523,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5524,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5525,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
5526,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5527,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5528,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5529,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5530,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5531,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5532,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5533,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
5534,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5535,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5536,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5537,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
5538,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
5539,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
5540,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5541,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5542,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5543,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5544,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5545,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
5546,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
5547,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5548,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5549,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
5550,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5551,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5552,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
5553,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5554,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
5555,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5556,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5557,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
5558,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5559,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5560,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"#!/bin/sh'; \
"
5561,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5562,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5563,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5564,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5565,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5566,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5567,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5568,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
5569,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5570,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5571,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"#!/bin/sh'; \
"
5572,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5573,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5574,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
5575,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
5576,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5577,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5578,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5579,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5580,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5581,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5582,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
5583,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5584,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5585,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5586,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5587,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
5588,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5589,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
5590,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
5591,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# amd64
"
5592,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# fallback
"
5593,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
5594,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5595,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# basic smoke test
"
5596,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5597,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5598,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5599,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
5600,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5601,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5602,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
5603,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5604,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
5605,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5606,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
5607,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
5608,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5609,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
5610,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
5611,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5612,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5613,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5614,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5615,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
5616,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5617,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5618,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
5619,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5620,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5621,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
5622,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5623,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5624,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5625,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5626,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5627,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5628,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5629,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5630,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5631,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5632,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
5633,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5634,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5635,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5636,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
5637,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5638,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5639,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
5640,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
5641,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
5642,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5643,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
5644,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5645,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5646,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# basic smoke test
"
5647,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5648,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5649,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
5650,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
5651,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5652,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
5653,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
5654,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# amd64
"
5655,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# fallback
"
5656,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5657,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
5658,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5659,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5660,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5661,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
5662,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5663,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5664,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5665,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
5666,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5667,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
5668,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
5669,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
5670,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
5671,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5672,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5673,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
5674,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
5675,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5676,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5677,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
5678,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
5679,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
5680,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
5681,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
5682,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
5683,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# basic smoke test
"
5684,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5685,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5686,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5687,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5688,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5689,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5690,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5691,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
5692,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5693,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5694,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
5695,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5696,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5697,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5698,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5699,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5700,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5701,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5702,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5703,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5704,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
5705,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5706,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5707,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
5708,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5709,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5710,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
5711,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5712,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5713,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5714,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5715,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5716,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5717,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5718,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5719,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5720,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5721,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5722,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"#!/bin/sh'; \
"
5723,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5724,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5725,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5726,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5727,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
5728,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5729,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5730,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5731,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5732,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5733,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# backwards compatibility shim
"
5734,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5735,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5736,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
5737,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5738,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5739,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5740,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# basic smoke test
"
5741,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5742,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5743,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
5744,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5745,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5746,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"#!/bin/sh'; \
"
5747,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5748,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5749,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5750,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5751,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5752,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5753,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5754,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5755,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5756,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5757,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"#!/bin/bash'; \
"
5758,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
5759,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
5760,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5761,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5762,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5763,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5764,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
5765,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5766,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5767,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
5768,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5769,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5770,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"#!/bin/sh'; \
"
5771,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5772,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5773,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5774,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5775,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5776,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5777,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5778,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5779,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5780,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
5781,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5782,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5783,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5784,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5785,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5786,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5787,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5788,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
5789,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5790,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
5791,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5792,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
5793,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5794,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5795,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
5796,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5797,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5798,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5799,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5800,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5801,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5802,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5803,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5804,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5805,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5806,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
5807,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5808,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5809,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
5810,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5811,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5812,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
5813,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5814,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5815,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"#!/bin/sh'; \
"
5816,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5817,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5818,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
5819,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5820,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5821,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5822,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5823,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5824,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
5825,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5826,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5827,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
5828,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5829,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
5830,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5831,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5832,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5833,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5834,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
5835,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5836,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5837,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5838,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
5839,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5840,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5841,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5842,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5843,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5844,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5845,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5846,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5847,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
5848,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5849,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5850,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5851,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
5852,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5853,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5854,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
5855,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
5856,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
5857,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
5858,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5859,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5860,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5861,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5862,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
5863,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5864,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5865,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5866,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5867,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5868,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5869,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5870,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5871,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5872,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5873,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
5874,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
5875,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
5876,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
5877,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
5878,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5879,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5880,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5881,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5882,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5883,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
5884,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5885,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5886,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5887,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5888,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
5889,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5890,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5891,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5892,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
5893,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5894,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
5895,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5896,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
5897,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5898,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
5899,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
5900,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5901,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
5902,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"#!/bin/bash'; \
"
5903,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
5904,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5905,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5906,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5907,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5908,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5909,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5910,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5911,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# backwards compatibility shim
"
5912,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5913,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
5914,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# arm64v8
"
5915,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# amd64
"
5916,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# fallback
"
5917,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5918,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
5919,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5920,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5921,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5922,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# basic smoke test
"
5923,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5924,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5925,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5926,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5927,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
5928,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
5929,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
5930,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
5931,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# arm64v8
"
5932,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# amd64
"
5933,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# fallback
"
5934,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5935,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
5936,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5937,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5938,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5939,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# basic smoke test
"
5940,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5941,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5942,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5943,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
5944,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5945,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5946,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
5947,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5948,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5949,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5950,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# basic smoke test
"
5951,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5952,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5953,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5954,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5955,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5956,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5957,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5958,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5959,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5960,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5961,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5962,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5963,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
5964,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5965,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
5966,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
5967,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
5968,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5969,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
5970,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
5971,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
5972,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# backwards compatibility shim
"
5973,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5974,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5975,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
5976,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
5977,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
5978,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
5979,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# basic smoke test
"
5980,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5981,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5982,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5983,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5984,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5985,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
5986,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
5987,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
5988,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
5989,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
5990,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
5991,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
5992,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
5993,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
5994,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
5995,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
5996,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
5997,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
5998,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
5999,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6000,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6001,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6002,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6003,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# basic smoke test
"
6004,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6005,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6006,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6007,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
6008,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6009,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
6010,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6011,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6012,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6013,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6014,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
6015,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6016,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6017,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6018,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6019,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
6020,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6021,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6022,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6023,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6024,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6025,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6026,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
6027,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
6028,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6029,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6030,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6031,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6032,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6033,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# basic smoke test
"
6034,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6035,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6036,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
6037,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6038,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6039,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6040,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6041,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6042,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# backwards compatibility shim
"
6043,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
6044,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
6045,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
6046,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
6047,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6048,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# basic smoke test
"
6049,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6050,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6051,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
6052,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6053,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
6054,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6055,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
6056,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
6057,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
6058,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6059,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
6060,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# amd64
"
6061,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# fallback
"
6062,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6063,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
6064,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6065,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6066,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6067,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
6068,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6069,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6070,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6071,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6072,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
6073,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6074,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6075,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6076,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6077,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6078,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
6079,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6080,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6081,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6082,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6083,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6084,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6085,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6086,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6087,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6088,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6089,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6090,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
6091,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6092,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6093,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6094,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
6095,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# backwards compatibility shim
"
6096,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6097,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6098,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6099,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# arm64v8
"
6100,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# amd64
"
6101,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# fallback
"
6102,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
6103,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
6104,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6105,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6106,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
6107,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6108,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6109,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# basic smoke test
"
6110,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6111,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6112,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6113,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6114,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6115,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6116,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
6117,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6118,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6119,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6120,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6121,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6122,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
6123,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6124,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6125,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
6126,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6127,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6128,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6129,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6130,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6131,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6132,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
6133,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6134,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6135,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
6136,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6137,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6138,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
6139,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6140,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6141,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6142,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6143,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6144,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6145,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6146,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6147,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# backwards compatibility shim
"
6148,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6149,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6150,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# arm64v8
"
6151,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# amd64
"
6152,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# fallback
"
6153,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6154,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
6155,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6156,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6157,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6158,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# basic smoke test
"
6159,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6160,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6161,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6162,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6163,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6164,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"#!/bin/bash'; \
"
6165,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6166,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
6167,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6168,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6169,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6170,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6171,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6172,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6173,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
6174,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6175,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
6176,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6177,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6178,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"#!/bin/sh'; \
"
6179,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6180,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6181,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6182,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6183,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6184,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6185,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6186,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6187,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
6188,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
6189,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
6190,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
6191,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
6192,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6193,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6194,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6195,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6196,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6197,f11f75767926eb1e650b448690e15cbacc2d1b9f,/8/jdk/slim/Dockerfile,"# basic smoke test
"
6198,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6199,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6200,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6201,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6202,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
6203,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6204,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6205,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
6206,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6207,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6208,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6209,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6210,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6211,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6212,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6213,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6214,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6215,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
6216,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
6217,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6218,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6219,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
6220,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
6221,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6222,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6223,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
6224,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6225,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6226,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6227,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
6228,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
6229,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6230,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6231,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6232,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6233,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6234,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# basic smoke test
"
6235,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6236,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6237,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6238,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6239,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6240,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
6241,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6242,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6243,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
6244,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6245,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6246,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"#!/bin/sh'; \
"
6247,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6248,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6249,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
6250,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6251,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6252,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6253,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6254,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6255,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6256,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
6257,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6258,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6259,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
6260,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6261,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6262,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
6263,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6264,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6265,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6266,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6267,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6268,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6269,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6270,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6271,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6272,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# backwards compatibility shim
"
6273,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
6274,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6275,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
6276,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6277,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6278,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6279,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# basic smoke test
"
6280,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6281,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6282,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6283,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6284,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
6285,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6286,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6287,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
6288,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6289,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6290,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
6291,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6292,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6293,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6294,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6295,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6296,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6297,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6298,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6299,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6300,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6301,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# backwards compatibility shim
"
6302,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6303,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6304,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# arm64v8
"
6305,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# amd64
"
6306,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# fallback
"
6307,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6308,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
6309,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6310,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6311,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6312,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# basic smoke test
"
6313,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6314,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6315,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6316,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6317,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6318,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6319,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6320,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6321,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
6322,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
6323,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
6324,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
6325,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
6326,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6327,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6328,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6329,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6330,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6331,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# basic smoke test
"
6332,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6333,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6334,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6335,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
6336,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6337,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6338,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6339,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6340,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
6341,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6342,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6343,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6344,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6345,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
6346,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
6347,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
6348,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6349,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# arm64v8
"
6350,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# amd64
"
6351,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# fallback
"
6352,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6353,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
6354,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6355,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6356,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6357,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# basic smoke test
"
6358,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6359,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6360,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6361,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# backwards compatibility shim
"
6362,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
6363,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
6364,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
6365,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6366,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# basic smoke test
"
6367,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6368,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6369,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6370,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6371,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
6372,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6373,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6374,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6375,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6376,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6377,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# backwards compatibility shim
"
6378,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6379,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6380,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
6381,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6382,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6383,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6384,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# basic smoke test
"
6385,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6386,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6387,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6388,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6389,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
6390,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6391,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6392,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6393,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6394,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6395,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
6396,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6397,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6398,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6399,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6400,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6401,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6402,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6403,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6404,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6405,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6406,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6407,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6408,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6409,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
6410,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6411,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6412,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6413,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6414,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6415,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6416,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# backwards compatibility shim
"
6417,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
6418,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
6419,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
6420,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
6421,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6422,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# basic smoke test
"
6423,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6424,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6425,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
6426,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6427,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6428,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# arm64v8
"
6429,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# amd64
"
6430,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# fallback
"
6431,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6432,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6433,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6434,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6435,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6436,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# basic smoke test
"
6437,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6438,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6439,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6440,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6441,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6442,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6443,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6444,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
6445,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6446,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6447,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6448,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6449,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6450,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6451,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6452,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6453,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6454,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6455,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6456,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
6457,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6458,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6459,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6460,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6461,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6462,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6463,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6464,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6465,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6466,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
6467,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6468,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6469,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
6470,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
6471,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
6472,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6473,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# arm64v8
"
6474,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# amd64
"
6475,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# fallback
"
6476,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6477,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
6478,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6479,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6480,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6481,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# basic smoke test
"
6482,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6483,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6484,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6485,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# backwards compatibility shim
"
6486,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
6487,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
6488,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
6489,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6490,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# basic smoke test
"
6491,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6492,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6493,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6494,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
6495,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6496,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6497,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6498,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6499,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
6500,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6501,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
6502,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6503,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6504,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6505,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
6506,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
6507,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6508,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
6509,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
6510,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6511,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6512,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6513,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# backwards compatibility shim
"
6514,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6515,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6516,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# arm64v8
"
6517,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# amd64
"
6518,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# fallback
"
6519,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6520,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6521,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6522,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6523,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6524,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# basic smoke test
"
6525,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6526,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6527,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
6528,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6529,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
6530,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6531,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6532,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
6533,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6534,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
6535,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6536,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6537,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
6538,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6539,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6540,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
6541,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6542,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6543,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6544,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6545,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6546,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6547,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6548,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6549,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6550,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6551,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6552,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
6553,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6554,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6555,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6556,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6557,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6558,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# backwards compatibility shim
"
6559,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6560,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6561,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# arm64v8
"
6562,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# amd64
"
6563,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# fallback
"
6564,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6565,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
6566,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6567,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6568,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6569,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# basic smoke test
"
6570,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6571,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6572,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6573,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
6574,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6575,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6576,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6577,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6578,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6579,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
6580,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6581,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6582,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
6583,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6584,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6585,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6586,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6587,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6588,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6589,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6590,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6591,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6592,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"#!/bin/sh'; \
"
6593,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6594,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6595,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6596,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6597,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6598,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6599,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6600,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6601,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
6602,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6603,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6604,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6605,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6606,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
6607,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6608,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6609,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6610,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6611,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# backwards compatibility shim
"
6612,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
6613,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
6614,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
6615,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
6616,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6617,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6618,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
6619,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6620,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6621,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# basic smoke test
"
6622,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6623,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6624,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6625,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
6626,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6627,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6628,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6629,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6630,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6631,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"#!/bin/sh'; \
"
6632,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6633,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6634,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6635,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6636,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6637,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6638,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6639,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6640,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6641,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6642,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6643,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6644,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6645,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
6646,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6647,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6648,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6649,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6650,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6651,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"#!/bin/sh'; \
"
6652,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6653,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6654,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
6655,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6656,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6657,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6658,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6659,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6660,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6661,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6662,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6663,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
6664,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6665,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6666,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6667,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6668,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6669,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6670,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6671,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6672,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6673,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6674,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6675,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"#!/bin/sh'; \
"
6676,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6677,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6678,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6679,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6680,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6681,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6682,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6683,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
6684,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
6685,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6686,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6687,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
6688,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6689,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6690,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
6691,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
6692,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6693,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6694,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6695,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# amd64
"
6696,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# fallback
"
6697,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
6698,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
6699,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6700,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6701,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
6702,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6703,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6704,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# basic smoke test
"
6705,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6706,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
6707,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6708,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6709,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"#!/bin/sh'; \
"
6710,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6711,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6712,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
6713,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6714,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6715,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6716,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6717,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6718,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6719,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6720,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6721,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6722,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
6723,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6724,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6725,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6726,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6727,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6728,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6729,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6730,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6731,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6732,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6733,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6734,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6735,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6736,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
6737,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
6738,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6739,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6740,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
6741,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6742,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6743,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6744,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6745,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6746,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6747,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6748,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
6749,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6750,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6751,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6752,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6753,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6754,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6755,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6756,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
6757,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6758,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6759,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6760,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
6761,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6762,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6763,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6764,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
6765,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6766,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6767,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
6768,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6769,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6770,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"#!/bin/sh'; \
"
6771,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6772,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
6773,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6774,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6775,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6776,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6777,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
6778,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6779,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6780,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
6781,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
6782,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6783,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6784,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6785,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# amd64
"
6786,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# fallback
"
6787,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
6788,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
6789,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6790,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6791,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
6792,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6793,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6794,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# basic smoke test
"
6795,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6796,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6797,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6798,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
6799,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6800,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6801,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6802,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6803,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6804,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# backwards compatibility shim
"
6805,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
6806,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6807,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
6808,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6809,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6810,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6811,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# basic smoke test
"
6812,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6813,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6814,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6815,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
6816,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6817,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6818,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
6819,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
6820,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6821,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6822,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
6823,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6824,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6825,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
6826,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6827,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
6828,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6829,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6830,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
6831,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6832,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6833,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
6834,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
6835,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6836,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
6837,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# basic smoke test
"
6838,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6839,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6840,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6841,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
6842,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
6843,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6844,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6845,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6846,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6847,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6848,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6849,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6850,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
6851,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
6852,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6853,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
6854,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
6855,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
6856,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
6857,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
6858,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
6859,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6860,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6861,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
6862,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6863,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6864,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6865,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6866,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
6867,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
6868,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6869,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
6870,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
6871,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
6872,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6873,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6874,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
6875,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
6876,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
6877,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
6878,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
6879,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6880,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
6881,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6882,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6883,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6884,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
6885,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6886,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6887,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6888,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
6889,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6890,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6891,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6892,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6893,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6894,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6895,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6896,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
6897,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6898,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6899,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6900,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
6901,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6902,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6903,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
6904,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6905,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
6906,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6907,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
6908,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6909,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
6910,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6911,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
6912,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6913,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
6914,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6915,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6916,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6917,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6918,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
6919,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6920,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
6921,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6922,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
6923,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
6924,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6925,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6926,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6927,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
6928,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6929,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6930,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6931,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6932,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6933,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6934,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
6935,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6936,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
6937,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
6938,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
6939,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# arm64v8
"
6940,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# amd64
"
6941,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# fallback
"
6942,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6943,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
6944,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
6945,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
6946,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6947,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6948,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6949,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
6950,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6951,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6952,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6953,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6954,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
6955,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"#!/bin/sh'; \
"
6956,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6957,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
6958,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
6959,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
6960,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
6961,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
6962,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
6963,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
6964,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
6965,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
6966,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
6967,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
6968,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
6969,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
6970,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
6971,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
6972,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
6973,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
6974,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
6975,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
6976,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
6977,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
6978,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
6979,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
6980,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
6981,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# basic smoke test
"
6982,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6983,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6984,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6985,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
6986,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6987,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6988,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6989,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6990,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
6991,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6992,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
6993,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
6994,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
6995,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
6996,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
6997,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
6998,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
6999,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7000,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7001,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"#!/bin/sh'; \
"
7002,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7003,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7004,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7005,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7006,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7007,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7008,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7009,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
7010,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7011,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
7012,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7013,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7014,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7015,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7016,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"#!/bin/bash'; \
"
7017,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7018,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7019,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7020,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7021,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7022,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7023,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7024,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7025,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7026,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
7027,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
7028,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7029,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
7030,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
7031,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7032,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7033,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7034,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7035,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
7036,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7037,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7038,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7039,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7040,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7041,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7042,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7043,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7044,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7045,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7046,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7047,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7048,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7049,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7050,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
7051,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7052,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7053,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7054,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7055,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7056,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
7057,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7058,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7059,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7060,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7061,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
7062,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7063,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7064,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7065,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7066,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
7067,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# backwards compatibility shim
"
7068,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7069,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
7070,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# amd64
"
7071,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# fallback
"
7072,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7073,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
7074,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7075,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7076,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7077,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# basic smoke test
"
7078,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7079,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7080,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7081,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
7082,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7083,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7084,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7085,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
7086,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7087,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
7088,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
7089,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
7090,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
7091,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7092,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7093,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
7094,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
7095,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7096,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7097,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7098,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
7099,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
7100,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
7101,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7102,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7103,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7104,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7105,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
7106,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7107,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7108,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# basic smoke test
"
7109,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7110,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7111,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7112,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7113,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
7114,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7115,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7116,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7117,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
7118,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7119,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7120,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7121,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7122,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7123,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7124,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7125,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7126,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
7127,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7128,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7129,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7130,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
7131,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7132,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
7133,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
7134,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# amd64
"
7135,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# fallback
"
7136,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7137,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7138,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
7139,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
7140,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7141,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7142,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7143,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
7144,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7145,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
7146,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# arm64v8
"
7147,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# amd64
"
7148,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# fallback
"
7149,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7150,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7151,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
7152,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7153,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7154,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7155,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7156,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# backwards compatibility shim
"
7157,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7158,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7159,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7160,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7161,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7162,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7163,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
7164,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7165,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7166,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# basic smoke test
"
7167,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7168,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7169,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7170,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
7171,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7172,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7173,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7174,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
7175,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7176,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
7177,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
7178,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# amd64
"
7179,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# fallback
"
7180,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7181,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7182,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
7183,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
7184,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7185,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7186,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
7187,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7188,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7189,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
7190,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7191,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7192,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
7193,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7194,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7195,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7196,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7197,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7198,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7199,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
7200,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7201,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
7202,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7203,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7204,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7205,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
7206,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7207,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7208,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7209,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7210,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
7211,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
7212,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
7213,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7214,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7215,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7216,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
7217,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7218,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7219,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7220,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
7221,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7222,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7223,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7224,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7225,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7226,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7227,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7228,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
7229,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7230,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7231,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7232,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7233,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7234,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7235,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
7236,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7237,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7238,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
7239,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7240,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7241,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7242,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7243,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7244,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7245,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7246,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7247,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7248,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7249,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7250,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7251,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
7252,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7253,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7254,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7255,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7256,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7257,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7258,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7259,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# backwards compatibility shim
"
7260,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7261,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
7262,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# amd64
"
7263,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# fallback
"
7264,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7265,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7266,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7267,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7268,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7269,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# basic smoke test
"
7270,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7271,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7272,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7273,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7274,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
7275,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7276,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7277,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
7278,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7279,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7280,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
7281,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7282,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7283,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7284,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7285,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7286,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7287,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7288,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7289,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7290,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7291,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
7292,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7293,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7294,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7295,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7296,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7297,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
7298,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7299,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
7300,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7301,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
7302,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7303,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
7304,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7305,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7306,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7307,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7308,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
7309,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7310,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7311,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
7312,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7313,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7314,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"#!/bin/sh'; \
"
7315,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7316,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7317,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7318,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7319,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7320,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7321,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7322,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7323,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7324,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
7325,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7326,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
7327,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
7328,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7329,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
7330,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7331,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7332,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7333,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7334,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7335,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
7336,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7337,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7338,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7339,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7340,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7341,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7342,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7343,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7344,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7345,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7346,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
7347,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7348,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7349,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7350,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7351,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# backwards compatibility shim
"
7352,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7353,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7354,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7355,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7356,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7357,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7358,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7359,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7360,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7361,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# basic smoke test
"
7362,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7363,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7364,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7365,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7366,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
7367,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7368,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7369,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
7370,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7371,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7372,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"#!/bin/sh'; \
"
7373,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7374,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7375,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
7376,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7377,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7378,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7379,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7380,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7381,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7382,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7383,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7384,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7385,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7386,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7387,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7388,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7389,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"#!/bin/sh'; \
"
7390,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7391,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7392,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7393,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7394,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7395,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7396,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7397,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7398,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
7399,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7400,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7401,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"#!/bin/sh'; \
"
7402,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7403,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7404,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
7405,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7406,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7407,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7408,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7409,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7410,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7411,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7412,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7413,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
7414,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7415,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7416,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7417,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7418,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7419,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7420,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7421,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7422,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7423,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7424,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7425,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
7426,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7427,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7428,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7429,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7430,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7431,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7432,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7433,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7434,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7435,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
7436,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7437,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
7438,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# amd64
"
7439,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# fallback
"
7440,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7441,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7442,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
7443,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
7444,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7445,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7446,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7447,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7448,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7449,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7450,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7451,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
7452,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7453,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7454,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7455,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7456,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7457,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"#!/bin/sh'; \
"
7458,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7459,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7460,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7461,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7462,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7463,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7464,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7465,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7466,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7467,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# backwards compatibility shim
"
7468,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
7469,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
7470,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7471,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7472,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7473,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7474,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
7475,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7476,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7477,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# basic smoke test
"
7478,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7479,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7480,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7481,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# backwards compatibility shim
"
7482,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7483,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7484,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7485,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7486,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7487,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7488,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7489,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7490,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7491,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# basic smoke test
"
7492,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7493,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7494,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7495,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# backwards compatibility shim
"
7496,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
7497,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
7498,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
7499,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
7500,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7501,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7502,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7503,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7504,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7505,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# basic smoke test
"
7506,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7507,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7508,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7509,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7510,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7511,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7512,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7513,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"#!/bin/bash'; \
"
7514,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7515,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7516,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7517,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7518,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7519,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7520,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7521,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
7522,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7523,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7524,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7525,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# backwards compatibility shim
"
7526,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7527,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7528,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7529,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7530,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7531,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7532,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
7533,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7534,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7535,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# basic smoke test
"
7536,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7537,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7538,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7539,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# backwards compatibility shim
"
7540,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
7541,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
7542,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7543,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7544,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7545,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7546,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
7547,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7548,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7549,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# basic smoke test
"
7550,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7551,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7552,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7553,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7554,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"#!/bin/sh'; \
"
7555,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7556,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7557,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7558,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7559,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
7560,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
7561,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7562,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7563,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
7564,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7565,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7566,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7567,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
7568,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7569,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7570,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7571,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
7572,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7573,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7574,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7575,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7576,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7577,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
7578,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7579,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7580,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7581,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7582,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7583,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
7584,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7585,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7586,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"#!/bin/sh'; \
"
7587,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7588,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7589,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7590,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7591,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7592,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7593,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7594,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7595,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7596,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
7597,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7598,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7599,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7600,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7601,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7602,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7603,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7604,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7605,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
7606,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7607,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7608,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
7609,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
7610,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7611,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7612,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
7613,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7614,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7615,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# basic smoke test
"
7616,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7617,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
7618,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7619,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7620,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
7621,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7622,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7623,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7624,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7625,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7626,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7627,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7628,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7629,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7630,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7631,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7632,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
7633,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7634,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7635,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7636,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
7637,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7638,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7639,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7640,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7641,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7642,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
7643,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7644,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7645,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
7646,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7647,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7648,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7649,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7650,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7651,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7652,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7653,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7654,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7655,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# backwards compatibility shim
"
7656,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7657,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7658,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7659,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7660,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7661,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7662,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# basic smoke test
"
7663,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7664,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
7665,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
7666,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
7667,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
7668,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7669,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7670,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
7671,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7672,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7673,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"#!/bin/sh'; \
"
7674,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7675,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7676,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7677,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7678,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7679,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7680,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7681,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
7682,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
7683,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7684,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7685,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
7686,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7687,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7688,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7689,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
7690,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7691,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7692,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7693,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
7694,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7695,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7696,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7697,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
7698,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7699,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7700,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7701,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7702,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7703,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7704,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7705,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7706,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7707,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
7708,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7709,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7710,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"#!/bin/sh'; \
"
7711,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7712,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7713,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
7714,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7715,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7716,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7717,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7718,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7719,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7720,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7721,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7722,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"#!/bin/sh'; \
"
7723,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7724,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7725,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7726,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7727,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7728,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
7729,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7730,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7731,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7732,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
7733,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7734,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7735,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7736,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7737,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# backwards compatibility shim
"
7738,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
7739,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
7740,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
7741,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
7742,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7743,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7744,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7745,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7746,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7747,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# basic smoke test
"
7748,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7749,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7750,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7751,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
7752,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
7753,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
7754,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
7755,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
7756,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
7757,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7758,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
7759,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7760,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# basic smoke test
"
7761,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7762,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
7763,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7764,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7765,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7766,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
7767,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7768,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7769,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"#!/bin/sh'; \
"
7770,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7771,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7772,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7773,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7774,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7775,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7776,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7777,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7778,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7779,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7780,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7781,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7782,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"#!/bin/sh'; \
"
7783,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7784,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7785,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7786,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7787,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7788,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"#!/bin/sh'; \
"
7789,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7790,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7791,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7792,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
7793,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7794,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7795,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7796,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7797,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7798,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7799,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7800,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7801,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7802,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7803,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
7804,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7805,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
7806,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
7807,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7808,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7809,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
7810,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
7811,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7812,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7813,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
7814,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7815,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7816,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7817,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7818,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7819,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7820,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
7821,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7822,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7823,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7824,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7825,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
7826,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7827,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7828,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
7829,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7830,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7831,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7832,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# basic smoke test
"
7833,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7834,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
7835,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7836,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7837,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7838,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7839,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
7840,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7841,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7842,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7843,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7844,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7845,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
7846,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7847,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7848,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7849,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7850,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7851,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7852,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7853,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7854,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
7855,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7856,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
7857,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7858,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7859,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
7860,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7861,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7862,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7863,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7864,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7865,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7866,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7867,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
7868,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7869,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7870,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7871,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7872,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7873,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
7874,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7875,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7876,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7877,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7878,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7879,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7880,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7881,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7882,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7883,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7884,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7885,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"#!/bin/sh'; \
"
7886,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7887,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7888,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7889,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7890,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7891,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7892,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7893,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7894,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"#!/bin/sh'; \
"
7895,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7896,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7897,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7898,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7899,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7900,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7901,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7902,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7903,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7904,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7905,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7906,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7907,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7908,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7909,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7910,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
7911,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7912,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7913,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
7914,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7915,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
7916,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7917,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
7918,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
7919,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7920,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
7921,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7922,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7923,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"#!/bin/sh'; \
"
7924,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7925,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7926,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
7927,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7928,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7929,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7930,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7931,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7932,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7933,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7934,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7935,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# backwards compatibility shim
"
7936,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7937,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7938,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7939,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7940,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7941,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7942,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# basic smoke test
"
7943,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7944,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
7945,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
7946,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
7947,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7948,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# backwards compatibility shim
"
7949,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7950,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
7951,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
7952,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
7953,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
7954,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
7955,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# basic smoke test
"
7956,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7957,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7958,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7959,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7960,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
7961,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7962,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
7963,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
7964,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
7965,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
7966,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
7967,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
7968,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7969,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7970,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7971,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
7972,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
7973,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7974,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7975,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7976,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
7977,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7978,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7979,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
7980,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7981,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
7982,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
7983,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
7984,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
7985,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
7986,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
7987,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
7988,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
7989,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
7990,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
7991,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
7992,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"#!/bin/sh'; \
"
7993,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
7994,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
7995,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
7996,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
7997,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
7998,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
7999,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8000,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8001,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8002,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
8003,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8004,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8005,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8006,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
8007,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8008,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8009,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8010,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8011,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
8012,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8013,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8014,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
8015,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8016,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8017,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
8018,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8019,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8020,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
8021,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8022,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8023,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
8024,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8025,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8026,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8027,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8028,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8029,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8030,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8031,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
8032,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8033,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8034,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# amd64
"
8035,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# fallback
"
8036,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8037,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8038,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8039,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
8040,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8041,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8042,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
8043,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8044,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
8045,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8046,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8047,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8048,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8049,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
8050,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8051,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8052,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
8053,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
8054,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8055,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8056,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
8057,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# amd64
"
8058,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# fallback
"
8059,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8060,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
8061,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8062,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8063,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8064,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
8065,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8066,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8067,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8068,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8069,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# backwards compatibility shim
"
8070,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8071,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8072,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
8073,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
8074,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8075,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8076,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
8077,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8078,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8079,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# basic smoke test
"
8080,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8081,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8082,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
8083,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8084,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# amd64
"
8085,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# fallback
"
8086,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
8087,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8088,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# basic smoke test
"
8089,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8090,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8091,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8092,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8093,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8094,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
8095,5dba2054c6821e38a6d3fad32239369818289228,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8096,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8097,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
8098,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8099,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
8100,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# https://bugs.alpinelinux.org/issues/10126
"
8101,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8102,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8103,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8104,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8105,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8106,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8107,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8108,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8109,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8110,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8111,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8112,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8113,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8114,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8115,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8116,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
8117,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8118,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8119,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"#!/bin/sh'; \
"
8120,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8121,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8122,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8123,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8124,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8125,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8126,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8127,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8128,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8129,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8130,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8131,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8132,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
8133,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8134,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8135,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
8136,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8137,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8138,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
8139,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8140,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8141,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
8142,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8143,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8144,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
8145,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8146,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8147,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8148,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8149,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8150,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8151,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
8152,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8153,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8154,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8155,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8156,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8157,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8158,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8159,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
8160,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8161,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8162,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8163,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
8164,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8165,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
8166,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8167,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8168,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8169,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8170,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8171,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# backwards compatibility shim
"
8172,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8173,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8174,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
8175,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8176,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8177,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8178,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# basic smoke test
"
8179,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8180,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8181,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
8182,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
8183,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8184,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8185,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
8186,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8187,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8188,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8189,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8190,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
8191,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8192,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8193,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8194,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
8195,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8196,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8197,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
8198,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# amd64
"
8199,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# fallback
"
8200,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8201,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8202,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8203,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
8204,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8205,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8206,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8207,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8208,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8209,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
8210,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8211,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
8212,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
8213,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8214,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
8215,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
8216,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8217,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8218,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
8219,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8220,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8221,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
8222,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8223,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8224,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8225,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8226,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8227,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8228,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8229,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8230,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8231,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
8232,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8233,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8234,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8235,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8236,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8237,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8238,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# basic smoke test
"
8239,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8240,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8241,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8242,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8243,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8244,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
8245,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8246,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8247,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
8248,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8249,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
8250,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8251,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8252,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8253,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8254,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8255,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
8256,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8257,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8258,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
8259,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8260,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
8261,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8262,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8263,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
8264,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
8265,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8266,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8267,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# arm64v8
"
8268,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# amd64
"
8269,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# fallback
"
8270,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8271,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
8272,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8273,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8274,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8275,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# basic smoke test
"
8276,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8277,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8278,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
8279,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
8280,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8281,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
8282,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
8283,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8284,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8285,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
8286,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
8287,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8288,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
8289,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8290,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# basic smoke test
"
8291,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8292,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8293,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
8294,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8295,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8296,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"#!/bin/sh'; \
"
8297,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8298,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8299,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8300,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8301,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8302,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8303,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8304,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8305,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8306,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8307,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8308,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8309,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8310,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# backwards compatibility shim
"
8311,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8312,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8313,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# arm64v8
"
8314,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# amd64
"
8315,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# fallback
"
8316,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8317,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
8318,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8319,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8320,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8321,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# basic smoke test
"
8322,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8323,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8324,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8325,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
8326,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
8327,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8328,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
8329,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
8330,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8331,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8332,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8333,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8334,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8335,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# basic smoke test
"
8336,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8337,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
8338,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8339,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8340,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8341,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
8342,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8343,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8344,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
8345,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# amd64
"
8346,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# fallback
"
8347,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8348,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8349,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8350,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
8351,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8352,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8353,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8354,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8355,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8356,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
8357,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8358,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8359,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8360,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8361,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8362,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8363,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8364,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
8365,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8366,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8367,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8368,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8369,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8370,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8371,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
8372,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8373,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
8374,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8375,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8376,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8377,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
8378,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8379,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
8380,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8381,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8382,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
8383,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8384,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8385,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8386,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8387,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8388,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8389,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8390,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8391,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8392,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8393,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8394,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8395,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8396,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8397,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8398,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# backwards compatibility shim
"
8399,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8400,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8401,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# arm64v8
"
8402,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# amd64
"
8403,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# fallback
"
8404,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8405,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8406,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8407,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8408,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8409,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# basic smoke test
"
8410,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8411,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8412,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8413,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8414,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8415,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8416,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8417,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8418,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
8419,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8420,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8421,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
8422,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# amd64
"
8423,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# fallback
"
8424,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8425,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8426,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8427,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
8428,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8429,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8430,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8431,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8432,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8433,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8434,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8435,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8436,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8437,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8438,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8439,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8440,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
8441,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8442,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8443,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
8444,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8445,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8446,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"#!/bin/sh'; \
"
8447,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8448,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8449,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
8450,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8451,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8452,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8453,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8454,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8455,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8456,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
8457,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8458,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8459,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8460,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8461,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
8462,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8463,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8464,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8465,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8466,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8467,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8468,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8469,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
8470,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
8471,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8472,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8473,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# amd64
"
8474,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# fallback
"
8475,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8476,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
8477,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8478,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8479,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8480,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# basic smoke test
"
8481,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8482,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
8483,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
8484,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
8485,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
8486,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8487,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8488,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8489,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8490,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8491,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8492,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# arm64v8
"
8493,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# amd64
"
8494,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# fallback
"
8495,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8496,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8497,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8498,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
8499,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8500,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8501,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8502,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
8503,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8504,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8505,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8506,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
8507,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
8508,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8509,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
8510,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
8511,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8512,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8513,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8514,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8515,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# basic smoke test
"
8516,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8517,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8518,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
8519,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8520,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
8521,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8522,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8523,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
8524,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8525,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8526,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8527,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8528,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8529,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8530,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8531,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8532,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8533,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8534,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"#!/bin/sh'; \
"
8535,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8536,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8537,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8538,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
8539,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8540,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8541,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
8542,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# amd64
"
8543,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# fallback
"
8544,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8545,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8546,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8547,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
8548,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8549,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8550,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8551,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
8552,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8553,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8554,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
8555,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
8556,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
8557,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8558,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8559,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8560,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
8561,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8562,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8563,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8564,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8565,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
8566,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8567,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8568,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8569,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
8570,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8571,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
8572,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8573,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8574,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8575,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
8576,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8577,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8578,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
8579,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8580,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8581,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"#!/bin/sh'; \
"
8582,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8583,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
8584,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8585,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8586,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8587,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8588,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
8589,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8590,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8591,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
8592,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8593,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8594,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
8595,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8596,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8597,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
8598,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
8599,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8600,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8601,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8602,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8603,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8604,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8605,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
8606,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8607,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8608,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
8609,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8610,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8611,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8612,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8613,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8614,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8615,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8616,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8617,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8618,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8619,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"#!/bin/sh'; \
"
8620,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8621,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8622,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8623,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8624,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
8625,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8626,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8627,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8628,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
8629,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8630,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8631,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# arm64v8
"
8632,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# amd64
"
8633,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# fallback
"
8634,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8635,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8636,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8637,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8638,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8639,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# basic smoke test
"
8640,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8641,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8642,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8643,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
8644,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8645,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8646,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
8647,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
8648,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8649,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8650,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8651,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8652,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8653,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# basic smoke test
"
8654,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8655,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8656,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8657,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8658,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"#!/bin/sh'; \
"
8659,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8660,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8661,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8662,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
8663,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# backwards compatibility shim
"
8664,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8665,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8666,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8667,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# arm64v8
"
8668,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# amd64
"
8669,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# fallback
"
8670,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
8671,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
8672,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8673,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8674,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
8675,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8676,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8677,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# basic smoke test
"
8678,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8679,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8680,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8681,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8682,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# backwards compatibility shim
"
8683,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
8684,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8685,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
8686,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
8687,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8688,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8689,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
8690,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8691,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8692,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# basic smoke test
"
8693,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8694,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8695,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8696,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
8697,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8698,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8699,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8700,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8701,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8702,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"#!/bin/sh'; \
"
8703,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8704,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8705,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8706,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
8707,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8708,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8709,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8710,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8711,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# backwards compatibility shim
"
8712,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
8713,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8714,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
8715,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
8716,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8717,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8718,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
8719,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8720,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8721,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# basic smoke test
"
8722,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8723,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8724,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
8725,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8726,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8727,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
8728,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8729,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8730,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8731,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8732,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8733,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8734,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8735,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8736,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8737,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8738,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8739,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
8740,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8741,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8742,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8743,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8744,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
8745,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8746,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8747,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8748,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
8749,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8750,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8751,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
8752,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
8753,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8754,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# amd64
"
8755,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# fallback
"
8756,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8757,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8758,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
8759,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
8760,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8761,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8762,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
8763,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8764,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8765,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
8766,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8767,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8768,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8769,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8770,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8771,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8772,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8773,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
8774,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8775,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8776,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"#!/bin/sh'; \
"
8777,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8778,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8779,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8780,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8781,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8782,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8783,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8784,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8785,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8786,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8787,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8788,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8789,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
8790,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8791,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8792,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
8793,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
8794,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8795,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8796,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8797,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8798,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# backwards compatibility shim
"
8799,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8800,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8801,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
8802,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8803,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8804,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8805,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# basic smoke test
"
8806,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8807,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8808,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8809,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
8810,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8811,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8812,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8813,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8814,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8815,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8816,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8817,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
8818,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8819,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8820,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
8821,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8822,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8823,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
8824,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8825,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8826,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8827,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8828,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8829,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8830,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8831,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8832,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
8833,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8834,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
8835,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8836,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8837,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8838,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8839,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8840,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8841,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8842,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8843,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8844,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8845,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
8846,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8847,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8848,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
8849,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8850,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8851,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
8852,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8853,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8854,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8855,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8856,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8857,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8858,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8859,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8860,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8861,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8862,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8863,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8864,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
8865,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
8866,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8867,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
8868,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
8869,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
8870,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8871,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8872,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8873,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8874,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# basic smoke test
"
8875,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8876,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
8877,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8878,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8879,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"#!/bin/sh'; \
"
8880,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8881,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8882,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8883,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
8884,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8885,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8886,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8887,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8888,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8889,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8890,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8891,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8892,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8893,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8894,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8895,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
8896,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8897,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8898,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8899,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8900,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
8901,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8902,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8903,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8904,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8905,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
8906,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8907,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8908,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8909,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
8910,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8911,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8912,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8913,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8914,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8915,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8916,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# basic smoke test
"
8917,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8918,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8919,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8920,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8921,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
8922,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
8923,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
8924,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8925,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
8926,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
8927,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8928,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8929,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
8930,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8931,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8932,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
8933,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
8934,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8935,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8936,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# arm64v8
"
8937,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# amd64
"
8938,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# fallback
"
8939,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8940,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
8941,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8942,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8943,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8944,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# basic smoke test
"
8945,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8946,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8947,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8948,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8949,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
8950,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8951,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8952,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8953,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
8954,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8955,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
8956,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# arm64v8
"
8957,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# amd64
"
8958,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# fallback
"
8959,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
8960,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8961,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
8962,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
8963,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
8964,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8965,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8966,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8967,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8968,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
8969,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8970,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
8971,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
8972,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
8973,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
8974,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"#!/bin/sh'; \
"
8975,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
8976,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
8977,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
8978,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
8979,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
8980,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
8981,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
8982,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
8983,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
8984,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
8985,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# backwards compatibility shim
"
8986,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
8987,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
8988,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
8989,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
8990,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
8991,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
8992,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# basic smoke test
"
8993,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
8994,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
8995,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
8996,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
8997,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
8998,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
8999,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9000,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9001,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9002,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
9003,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9004,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9005,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
9006,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9007,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
9008,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9009,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9010,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
9011,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9012,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
9013,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9014,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9015,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9016,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
9017,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9018,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9019,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
9020,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
9021,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9022,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9023,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
9024,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9025,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9026,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9027,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9028,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
9029,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9030,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9031,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9032,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9033,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
9034,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9035,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9036,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
9037,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9038,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9039,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
9040,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9041,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
9042,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9043,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9044,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
9045,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9046,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9047,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"#!/bin/sh'; \
"
9048,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9049,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9050,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
9051,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
9052,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9053,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9054,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9055,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9056,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9057,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9058,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9059,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
9060,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9061,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9062,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9063,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9064,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# backwards compatibility shim
"
9065,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9066,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9067,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# amd64
"
9068,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# fallback
"
9069,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9070,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9071,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9072,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9073,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9074,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# basic smoke test
"
9075,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9076,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9077,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9078,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9079,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
9080,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9081,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9082,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
9083,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9084,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9085,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
9086,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9087,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9088,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9089,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9090,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9091,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9092,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9093,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
9094,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9095,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9096,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"#!/bin/sh'; \
"
9097,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9098,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9099,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9100,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9101,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9102,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9103,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9104,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9105,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9106,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9107,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"#!/bin/bash'; \
"
9108,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9109,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9110,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9111,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
9112,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
9113,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9114,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9115,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
9116,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9117,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9118,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9119,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9120,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9121,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9122,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9123,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
9124,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9125,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9126,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
9127,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9128,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9129,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9130,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9131,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9132,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9133,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9134,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9135,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
9136,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9137,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9138,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9139,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9140,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# backwards compatibility shim
"
9141,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
9142,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9143,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
9144,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
9145,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
9146,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9147,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9148,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9149,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# basic smoke test
"
9150,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9151,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
9152,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
9153,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9154,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
9155,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
9156,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
9157,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# basic smoke test
"
9158,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9159,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9160,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9161,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9162,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# backwards compatibility shim
"
9163,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9164,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9165,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9166,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9167,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9168,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9169,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# basic smoke test
"
9170,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9171,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9172,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9173,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
9174,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9175,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9176,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9177,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9178,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9179,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# backwards compatibility shim
"
9180,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9181,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9182,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# arm64v8
"
9183,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# amd64
"
9184,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# fallback
"
9185,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9186,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9187,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9188,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9189,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9190,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# basic smoke test
"
9191,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9192,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9193,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9194,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9195,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9196,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
9197,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9198,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9199,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9200,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9201,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9202,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9203,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9204,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9205,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"#!/bin/sh'; \
"
9206,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9207,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9208,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9209,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9210,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
9211,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# backwards compatibility shim
"
9212,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9213,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9214,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# arm64v8
"
9215,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# amd64
"
9216,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# fallback
"
9217,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9218,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
9219,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9220,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9221,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9222,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# basic smoke test
"
9223,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9224,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9225,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9226,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9227,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
9228,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9229,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
9230,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
9231,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9232,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
9233,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9234,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9235,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9236,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9237,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9238,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9239,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9240,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
9241,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9242,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9243,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9244,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9245,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9246,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9247,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9248,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9249,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9250,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
9251,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9252,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9253,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9254,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
9255,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9256,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9257,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
9258,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9259,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9260,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9261,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
9262,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9263,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
9264,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# basic smoke test
"
9265,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9266,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9267,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9268,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9269,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9270,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
9271,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9272,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9273,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9274,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9275,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9276,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9277,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9278,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# backwards compatibility shim
"
9279,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9280,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9281,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9282,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9283,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9284,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9285,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# basic smoke test
"
9286,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9287,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9288,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9289,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9290,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9291,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9292,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9293,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9294,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
9295,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9296,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
9297,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
9298,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9299,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9300,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
9301,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9302,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9303,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
9304,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9305,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9306,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9307,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9308,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9309,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9310,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9311,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9312,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
9313,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9314,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9315,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
9316,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
9317,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9318,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9319,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9320,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9321,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9322,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9323,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9324,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9325,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
9326,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9327,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
9328,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9329,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9330,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
9331,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9332,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9333,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9334,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9335,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9336,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9337,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9338,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
9339,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9340,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9341,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
9342,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9343,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9344,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9345,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9346,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9347,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9348,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9349,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9350,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9351,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9352,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9353,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"#!/bin/sh'; \
"
9354,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9355,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9356,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9357,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9358,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9359,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
9360,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9361,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9362,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"#!/bin/sh'; \
"
9363,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9364,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9365,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9366,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9367,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9368,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9369,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9370,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9371,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9372,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9373,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9374,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9375,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
9376,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
9377,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9378,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9379,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
9380,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9381,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9382,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9383,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
9384,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9385,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9386,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9387,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
9388,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9389,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9390,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9391,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
9392,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9393,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9394,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9395,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9396,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9397,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"#!/bin/sh'; \
"
9398,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9399,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9400,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9401,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9402,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
9403,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9404,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9405,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
9406,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9407,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9408,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"#!/bin/sh'; \
"
9409,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9410,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9411,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9412,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9413,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9414,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9415,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9416,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9417,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
9418,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9419,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
9420,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
9421,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9422,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9423,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9424,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9425,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9426,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# backwards compatibility shim
"
9427,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9428,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9429,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9430,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9431,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9432,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9433,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# basic smoke test
"
9434,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9435,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9436,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9437,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9438,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9439,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9440,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9441,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9442,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9443,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9444,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# backwards compatibility shim
"
9445,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9446,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9447,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9448,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9449,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9450,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9451,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# basic smoke test
"
9452,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9453,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9454,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9455,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9456,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9457,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9458,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9459,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9460,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
9461,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9462,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9463,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# arm64v8
"
9464,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# amd64
"
9465,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# fallback
"
9466,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9467,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
9468,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9469,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9470,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9471,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# basic smoke test
"
9472,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9473,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9474,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9475,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9476,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9477,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
9478,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9479,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9480,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
9481,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9482,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9483,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9484,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9485,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9486,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9487,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9488,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9489,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
9490,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9491,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9492,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
9493,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9494,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9495,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
9496,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9497,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9498,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9499,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9500,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9501,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9502,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9503,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9504,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9505,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9506,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
9507,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9508,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9509,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9510,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9511,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9512,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9513,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9514,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
9515,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9516,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9517,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"#!/bin/sh'; \
"
9518,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9519,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9520,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
9521,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9522,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9523,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9524,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9525,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9526,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9527,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
9528,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
9529,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
9530,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9531,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9532,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9533,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9534,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
9535,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9536,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9537,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9538,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9539,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
9540,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9541,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
9542,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9543,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9544,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9545,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9546,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9547,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9548,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9549,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
9550,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9551,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
9552,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
9553,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9554,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9555,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9556,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9557,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
9558,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9559,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9560,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9561,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
9562,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9563,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9564,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
9565,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
9566,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
9567,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9568,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9569,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
9570,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
9571,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9572,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9573,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9574,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9575,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9576,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# backwards compatibility shim
"
9577,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9578,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9579,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9580,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9581,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9582,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9583,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# basic smoke test
"
9584,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9585,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9586,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
9587,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9588,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9589,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"#!/bin/sh'; \
"
9590,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9591,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9592,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9593,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9594,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9595,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9596,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9597,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9598,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9599,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9600,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"#!/bin/bash'; \
"
9601,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9602,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9603,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9604,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9605,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9606,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9607,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9608,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
9609,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
9610,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9611,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9612,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# arm64v8
"
9613,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# amd64
"
9614,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# fallback
"
9615,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9616,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
9617,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9618,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9619,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9620,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# basic smoke test
"
9621,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9622,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9623,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
9624,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9625,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9626,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
9627,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9628,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9629,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9630,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9631,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9632,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9633,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9634,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9635,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9636,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9637,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9638,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
9639,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9640,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9641,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
9642,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9643,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
9644,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9645,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9646,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
9647,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9648,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9649,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
9650,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9651,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9652,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9653,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9654,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9655,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9656,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9657,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9658,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9659,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9660,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9661,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
9662,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9663,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
9664,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9665,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9666,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9667,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# backwards compatibility shim
"
9668,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
9669,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
9670,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
9671,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
9672,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
9673,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9674,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9675,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9676,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9677,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# basic smoke test
"
9678,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9679,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9680,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9681,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
9682,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9683,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9684,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9685,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9686,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9687,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9688,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9689,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
9690,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9691,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9692,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9693,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
9694,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
9695,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9696,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
9697,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
9698,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
9699,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9700,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
9701,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9702,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9703,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# basic smoke test
"
9704,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9705,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9706,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9707,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# backwards compatibility shim
"
9708,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
9709,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9710,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
9711,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
9712,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
9713,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9714,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9715,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9716,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# basic smoke test
"
9717,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9718,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9719,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9720,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9721,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
9722,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9723,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9724,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9725,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
9726,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9727,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
9728,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
9729,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9730,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9731,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9732,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9733,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9734,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
9735,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9736,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9737,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9738,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
9739,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9740,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
9741,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9742,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9743,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
9744,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
9745,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9746,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9747,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9748,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9749,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9750,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9751,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9752,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
9753,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9754,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9755,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
9756,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9757,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9758,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9759,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9760,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9761,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9762,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9763,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9764,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9765,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
9766,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9767,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
9768,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9769,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9770,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
9771,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9772,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
9773,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# basic smoke test
"
9774,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9775,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
9776,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
9777,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9778,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
9779,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9780,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9781,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9782,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9783,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9784,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9785,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9786,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9787,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
9788,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
9789,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
9790,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
9791,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9792,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9793,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9794,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
9795,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9796,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9797,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9798,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# backwards compatibility shim
"
9799,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
9800,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
9801,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
9802,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
9803,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
9804,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9805,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
9806,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9807,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9808,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# basic smoke test
"
9809,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9810,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9811,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9812,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9813,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# backwards compatibility shim
"
9814,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9815,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9816,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
9817,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9818,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9819,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9820,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# basic smoke test
"
9821,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9822,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
9823,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9824,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9825,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9826,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9827,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9828,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
9829,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9830,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9831,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9832,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9833,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
9834,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9835,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9836,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9837,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
9838,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9839,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9840,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
9841,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9842,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9843,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9844,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9845,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9846,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9847,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9848,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9849,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
9850,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9851,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9852,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9853,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
9854,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9855,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9856,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9857,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
9858,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9859,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
9860,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9861,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
9862,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9863,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9864,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# arm64v8
"
9865,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# amd64
"
9866,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# fallback
"
9867,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9868,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9869,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
9870,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9871,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9872,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9873,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
9874,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9875,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9876,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
9877,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9878,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9879,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
9880,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9881,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9882,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9883,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9884,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9885,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9886,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9887,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9888,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
9889,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9890,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9891,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
9892,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9893,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9894,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9895,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9896,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9897,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9898,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9899,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
9900,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9901,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9902,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
9903,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
9904,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
9905,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
9906,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
9907,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9908,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9909,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9910,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9911,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
9912,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9913,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9914,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9915,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
9916,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9917,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9918,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
9919,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9920,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
9921,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9922,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9923,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9924,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9925,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9926,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"#!/bin/sh'; \
"
9927,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9928,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
9929,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9930,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
9931,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
9932,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
9933,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
9934,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
9935,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
9936,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9937,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
9938,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
9939,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
9940,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
9941,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
9942,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
9943,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9944,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
9945,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
9946,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9947,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9948,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
9949,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
9950,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9951,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
9952,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
9953,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
9954,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9955,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
9956,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9957,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9958,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9959,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# basic smoke test
"
9960,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9961,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
9962,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9963,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9964,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9965,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
9966,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9967,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
9968,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
9969,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# backwards compatibility shim
"
9970,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
9971,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
9972,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
9973,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# amd64
"
9974,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# fallback
"
9975,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
9976,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
9977,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
9978,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
9979,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
9980,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
9981,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
9982,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# basic smoke test
"
9983,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9984,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9985,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9986,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
9987,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
9988,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
9989,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
9990,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
9991,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
9992,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
9993,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
9994,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
9995,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
9996,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
9997,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
9998,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
9999,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10000,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10001,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10002,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10003,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10004,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
10005,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
10006,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10007,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
10008,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
10009,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10010,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10011,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10012,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10013,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10014,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10015,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10016,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10017,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10018,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10019,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10020,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10021,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10022,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10023,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10024,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# basic smoke test
"
10025,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10026,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10027,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10028,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10029,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10030,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10031,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
10032,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10033,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10034,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10035,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10036,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10037,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10038,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10039,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10040,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10041,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
10042,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
10043,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10044,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10045,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
10046,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10047,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10048,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
10049,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10050,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10051,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
10052,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10053,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10054,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10055,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10056,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10057,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10058,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10059,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10060,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10061,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10062,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10063,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10064,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10065,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10066,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10067,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10068,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"#!/bin/sh'; \
"
10069,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10070,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10071,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10072,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
10073,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# backwards compatibility shim
"
10074,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10075,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10076,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
10077,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# amd64
"
10078,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# fallback
"
10079,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
10080,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
10081,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10082,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10083,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
10084,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10085,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10086,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# basic smoke test
"
10087,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10088,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
10089,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
10090,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10091,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10092,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
10093,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10094,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10095,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
10096,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10097,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10098,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
10099,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10100,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10101,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10102,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10103,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10104,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10105,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10106,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10107,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10108,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10109,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
10110,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10111,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10112,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10113,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10114,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10115,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10116,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10117,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10118,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10119,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10120,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10121,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10122,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10123,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10124,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10125,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
10126,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10127,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10128,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"#!/bin/sh'; \
"
10129,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10130,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10131,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10132,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10133,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10134,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10135,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10136,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
10137,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10138,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10139,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
10140,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10141,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10142,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10143,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10144,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10145,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10146,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10147,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10148,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10149,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
10150,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10151,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
10152,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# arm64v8
"
10153,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# amd64
"
10154,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# fallback
"
10155,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10156,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10157,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
10158,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
10159,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10160,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10161,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10162,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10163,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10164,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
10165,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10166,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10167,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10168,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10169,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10170,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
10171,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10172,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10173,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10174,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
10175,17f7f8dc7e673127812e5c31b83937283beb7b12,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10176,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10177,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10178,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10179,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
10180,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10181,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10182,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
10183,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
10184,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10185,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10186,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# basic smoke test
"
10187,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10188,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10189,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10190,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10191,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10192,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
10193,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10194,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10195,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10196,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10197,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10198,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10199,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10200,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
10201,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10202,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10203,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10204,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10205,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# backwards compatibility shim
"
10206,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
10207,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10208,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
10209,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10210,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# basic smoke test
"
10211,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10212,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10213,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10214,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
10215,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10216,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
10217,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
10218,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10219,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10220,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10221,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10222,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10223,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# basic smoke test
"
10224,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10225,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
10226,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10227,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10228,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
10229,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10230,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10231,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10232,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10233,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10234,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10235,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10236,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10237,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10238,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10239,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10240,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10241,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10242,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10243,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10244,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10245,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
10246,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10247,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
10248,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
10249,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10250,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10251,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10252,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10253,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10254,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# basic smoke test
"
10255,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10256,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10257,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10258,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10259,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10260,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10261,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10262,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10263,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10264,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
10265,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10266,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10267,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10268,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10269,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
10270,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10271,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10272,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10273,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10274,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
10275,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10276,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10277,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10278,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10279,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10280,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
10281,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10282,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10283,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10284,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10285,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10286,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10287,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10288,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10289,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10290,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10291,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
10292,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
10293,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
10294,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
10295,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# amd64
"
10296,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# fallback
"
10297,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10298,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10299,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
10300,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
10301,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10302,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10303,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10304,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10305,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10306,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"#!/bin/bash'; \
"
10307,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10308,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10309,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10310,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10311,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10312,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10313,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10314,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
10315,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10316,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10317,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10318,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10319,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10320,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10321,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10322,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10323,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10324,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
10325,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10326,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
10327,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
10328,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10329,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10330,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10331,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10332,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10333,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10334,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10335,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10336,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
10337,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10338,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10339,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10340,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10341,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10342,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
10343,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10344,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10345,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10346,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10347,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10348,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10349,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10350,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10351,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10352,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# backwards compatibility shim
"
10353,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10354,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
10355,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# arm64v8
"
10356,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# amd64
"
10357,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# fallback
"
10358,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10359,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
10360,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10361,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10362,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10363,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# basic smoke test
"
10364,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10365,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10366,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10367,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10368,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# backwards compatibility shim
"
10369,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10370,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10371,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
10372,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
10373,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10374,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10375,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
10376,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10377,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10378,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# basic smoke test
"
10379,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10380,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10381,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10382,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10383,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"#!/bin/sh'; \
"
10384,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10385,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10386,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10387,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10388,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10389,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10390,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10391,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10392,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10393,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10394,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10395,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"#!/bin/sh'; \
"
10396,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10397,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10398,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10399,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10400,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10401,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10402,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10403,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10404,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10405,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
10406,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10407,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10408,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10409,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10410,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10411,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10412,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10413,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10414,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
10415,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
10416,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
10417,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
10418,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# amd64
"
10419,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# fallback
"
10420,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10421,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10422,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
10423,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
10424,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10425,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10426,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10427,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10428,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10429,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10430,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10431,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10432,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10433,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10434,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10435,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10436,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10437,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
10438,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10439,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10440,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10441,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10442,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10443,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"#!/bin/sh'; \
"
10444,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10445,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10446,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10447,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10448,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10449,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10450,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10451,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10452,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10453,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
10454,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
10455,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10456,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
10457,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
10458,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10459,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10460,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10461,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10462,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10463,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# basic smoke test
"
10464,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10465,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
10466,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10467,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10468,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"#!/bin/sh'; \
"
10469,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10470,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10471,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10472,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10473,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10474,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10475,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10476,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10477,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10478,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10479,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
10480,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10481,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10482,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
10483,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10484,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10485,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"#!/bin/sh'; \
"
10486,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10487,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10488,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10489,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10490,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10491,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10492,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10493,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10494,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10495,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10496,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
10497,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10498,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
10499,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10500,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10501,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10502,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10503,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
10504,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10505,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10506,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10507,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10508,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
10509,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
10510,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10511,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
10512,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
10513,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10514,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10515,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10516,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10517,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10518,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# backwards compatibility shim
"
10519,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10520,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10521,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
10522,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10523,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10524,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10525,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# basic smoke test
"
10526,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10527,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10528,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
10529,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10530,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10531,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
10532,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10533,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10534,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10535,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10536,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10537,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10538,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10539,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10540,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10541,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10542,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
10543,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10544,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10545,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10546,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10547,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10548,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10549,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10550,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10551,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
10552,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10553,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10554,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
10555,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10556,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10557,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
10558,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10559,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10560,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10561,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10562,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10563,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10564,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10565,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
10566,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10567,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10568,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10569,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
10570,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10571,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10572,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
10573,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
10574,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10575,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10576,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10577,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10578,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10579,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# basic smoke test
"
10580,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10581,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10582,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10583,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
10584,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10585,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10586,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
10587,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10588,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10589,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"#!/bin/sh'; \
"
10590,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10591,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10592,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10593,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10594,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10595,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10596,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10597,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10598,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10599,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
10600,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10601,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10602,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10603,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10604,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
10605,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10606,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10607,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10608,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10609,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10610,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"#!/bin/bash'; \
"
10611,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10612,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10613,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10614,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10615,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10616,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
10617,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10618,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
10619,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
10620,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
10621,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# amd64
"
10622,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# fallback
"
10623,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10624,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10625,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
10626,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
10627,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10628,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10629,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10630,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10631,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
10632,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10633,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10634,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10635,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10636,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10637,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
10638,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10639,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
10640,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10641,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10642,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
10643,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10644,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10645,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"#!/bin/sh'; \
"
10646,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10647,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10648,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10649,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10650,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10651,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10652,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10653,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10654,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10655,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
10656,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10657,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10658,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
10659,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10660,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10661,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"#!/bin/sh'; \
"
10662,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10663,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10664,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10665,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10666,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10667,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10668,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10669,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10670,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10671,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10672,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10673,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10674,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10675,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10676,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10677,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# basic smoke test
"
10678,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10679,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10680,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10681,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10682,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10683,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10684,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"#!/bin/sh'; \
"
10685,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10686,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10687,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10688,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10689,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10690,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10691,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10692,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10693,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10694,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10695,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10696,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10697,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10698,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10699,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10700,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10701,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10702,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10703,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10704,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10705,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10706,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
10707,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10708,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10709,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
10710,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10711,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10712,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
10713,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10714,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10715,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10716,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10717,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10718,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10719,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10720,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10721,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10722,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
10723,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10724,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
"
10725,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
10726,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10727,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# basic smoke test
"
10728,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10729,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10730,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
10731,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10732,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10733,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
10734,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10735,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10736,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"#!/bin/sh'; \
"
10737,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10738,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10739,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10740,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10741,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10742,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10743,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10744,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
10745,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
10746,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
10747,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
10748,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
10749,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
10750,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10751,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
10752,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10753,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10754,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
10755,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10756,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10757,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10758,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10759,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10760,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10761,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10762,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
10763,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10764,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10765,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10766,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10767,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10768,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10769,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10770,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10771,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10772,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10773,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# basic smoke test
"
10774,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10775,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10776,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10777,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10778,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10779,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10780,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10781,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10782,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10783,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10784,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10785,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"#!/bin/sh'; \
"
10786,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10787,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10788,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10789,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10790,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10791,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
10792,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10793,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
10794,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10795,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10796,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
10797,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10798,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10799,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
10800,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10801,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10802,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10803,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10804,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10805,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10806,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10807,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10808,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10809,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10810,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10811,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# backwards compatibility shim
"
10812,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
10813,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10814,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
10815,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
10816,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10817,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10818,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
10819,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10820,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10821,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# basic smoke test
"
10822,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10823,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
10824,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10825,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10826,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
10827,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
10828,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# backwards compatibility shim
"
10829,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
10830,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10831,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
10832,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
10833,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10834,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# basic smoke test
"
10835,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10836,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10837,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10838,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10839,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10840,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10841,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
10842,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
10843,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
10844,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10845,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10846,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10847,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10848,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# basic smoke test
"
10849,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10850,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10851,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10852,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10853,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10854,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"#!/bin/sh'; \
"
10855,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10856,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10857,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10858,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10859,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10860,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10861,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10862,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10863,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10864,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10865,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10866,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
10867,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10868,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10869,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10870,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10871,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10872,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10873,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10874,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10875,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10876,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
10877,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10878,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10879,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"#!/bin/sh'; \
"
10880,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10881,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10882,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
10883,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10884,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10885,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10886,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10887,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10888,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
10889,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10890,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10891,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
10892,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10893,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10894,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10895,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10896,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10897,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10898,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10899,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10900,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10901,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
10902,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
10903,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
10904,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10905,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10906,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10907,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
10908,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10909,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
10910,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10911,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
10912,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
10913,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
10914,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
10915,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
10916,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# basic smoke test
"
10917,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10918,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10919,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10920,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10921,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10922,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10923,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10924,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10925,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
10926,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10927,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10928,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10929,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
10930,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10931,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10932,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10933,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
10934,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10935,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10936,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
10937,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
10938,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10939,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
10940,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10941,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
10942,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10943,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10944,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10945,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10946,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
10947,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10948,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10949,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10950,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
10951,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10952,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10953,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10954,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
10955,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10956,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10957,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10958,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10959,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10960,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
10961,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10962,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10963,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10964,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10965,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10966,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"#!/bin/sh'; \
"
10967,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10968,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10969,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10970,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10971,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10972,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10973,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
10974,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10975,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10976,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10977,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
10978,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
10979,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
10980,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
10981,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
10982,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
10983,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
10984,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
10985,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
10986,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
10987,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10988,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
10989,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
10990,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"#!/bin/sh'; \
"
10991,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
10992,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
10993,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
10994,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
10995,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
10996,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
10997,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
10998,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
10999,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11000,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11001,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11002,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11003,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11004,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
11005,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11006,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11007,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11008,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
11009,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11010,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11011,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
11012,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11013,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11014,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11015,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# basic smoke test
"
11016,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11017,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11018,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11019,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11020,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
11021,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11022,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11023,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
11024,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11025,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11026,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
11027,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11028,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11029,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11030,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11031,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11032,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11033,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11034,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11035,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11036,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11037,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11038,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11039,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11040,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11041,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# backwards compatibility shim
"
11042,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11043,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11044,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# arm64v8
"
11045,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# amd64
"
11046,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# fallback
"
11047,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11048,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
11049,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11050,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11051,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11052,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# basic smoke test
"
11053,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11054,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11055,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
11056,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11057,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11058,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"#!/bin/sh'; \
"
11059,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11060,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11061,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11062,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11063,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11064,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11065,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11066,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
11067,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11068,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11069,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"#!/bin/sh'; \
"
11070,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11071,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11072,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11073,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11074,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11075,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11076,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11077,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
11078,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11079,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11080,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
11081,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11082,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11083,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11084,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11085,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11086,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11087,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11088,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11089,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11090,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11091,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11092,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11093,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11094,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
11095,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11096,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
11097,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11098,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11099,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
11100,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11101,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11102,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
11103,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11104,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11105,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11106,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11107,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11108,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11109,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11110,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11111,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11112,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11113,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11114,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11115,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11116,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11117,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
11118,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11119,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11120,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11121,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11122,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
11123,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11124,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11125,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11126,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11127,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11128,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
11129,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11130,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11131,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
11132,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11133,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11134,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"#!/bin/sh'; \
"
11135,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11136,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11137,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11138,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11139,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11140,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11141,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11142,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11143,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11144,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
11145,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11146,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11147,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11148,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11149,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11150,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"#!/bin/sh'; \
"
11151,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11152,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11153,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11154,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11155,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11156,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
11157,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11158,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11159,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11160,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11161,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
11162,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11163,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11164,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11165,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11166,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
11167,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11168,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11169,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
11170,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11171,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11172,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"#!/bin/sh'; \
"
11173,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11174,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11175,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11176,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11177,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11178,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11179,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11180,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11181,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11182,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
11183,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11184,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11185,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
11186,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
11187,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11188,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11189,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11190,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# arm64v8
"
11191,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# amd64
"
11192,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# fallback
"
11193,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
11194,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
11195,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
11196,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11197,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
11198,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11199,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11200,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# basic smoke test
"
11201,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11202,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11203,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11204,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11205,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11206,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11207,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11208,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
11209,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11210,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
11211,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
11212,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11213,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11214,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11215,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11216,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
11217,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11218,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11219,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
11220,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11221,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
11222,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11223,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11224,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
11225,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11226,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11227,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
11228,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11229,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11230,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11231,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11232,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11233,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11234,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11235,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11236,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11237,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
11238,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11239,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11240,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"#!/bin/sh'; \
"
11241,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11242,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11243,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11244,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11245,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11246,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11247,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11248,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
11249,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11250,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11251,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11252,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11253,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11254,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11255,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11256,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11257,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11258,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11259,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11260,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11261,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11262,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11263,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11264,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11265,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
11266,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11267,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11268,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
11269,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11270,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11271,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"#!/bin/sh'; \
"
11272,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11273,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11274,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11275,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11276,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11277,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11278,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11279,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11280,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
11281,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11282,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11283,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
11284,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
11285,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
11286,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11287,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
11288,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11289,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11290,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# basic smoke test
"
11291,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11292,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11293,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11294,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
11295,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11296,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11297,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
11298,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11299,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11300,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
11301,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11302,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11303,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
11304,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11305,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11306,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11307,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11308,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11309,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11310,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11311,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11312,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11313,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
11314,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11315,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11316,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11317,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11318,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11319,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"#!/bin/sh'; \
"
11320,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11321,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11322,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11323,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11324,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11325,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
11326,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11327,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11328,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
11329,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11330,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11331,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11332,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11333,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11334,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11335,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11336,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11337,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11338,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11339,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11340,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11341,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11342,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11343,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
11344,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11345,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11346,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
11347,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11348,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11349,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11350,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11351,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# backwards compatibility shim
"
11352,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11353,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11354,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
11355,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
11356,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
11357,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11358,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
11359,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11360,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11361,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# basic smoke test
"
11362,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11363,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11364,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11365,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11366,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11367,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11368,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11369,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11370,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11371,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11372,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# backwards compatibility shim
"
11373,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11374,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11375,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# arm64v8
"
11376,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# amd64
"
11377,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# fallback
"
11378,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11379,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
11380,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11381,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11382,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11383,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# basic smoke test
"
11384,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11385,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11386,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
11387,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11388,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11389,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
11390,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11391,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11392,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11393,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11394,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11395,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11396,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11397,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11398,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
11399,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11400,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11401,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11402,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11403,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11404,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"#!/bin/sh'; \
"
11405,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11406,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11407,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
11408,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
11409,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11410,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11411,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
11412,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11413,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11414,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
11415,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11416,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11417,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11418,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11419,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11420,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11421,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11422,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11423,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# backwards compatibility shim
"
11424,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
11425,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
11426,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
11427,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
11428,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
11429,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# basic smoke test
"
11430,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11431,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11432,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11433,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11434,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
11435,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11436,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11437,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"#!/bin/sh'; \
"
11438,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11439,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11440,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11441,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11442,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11443,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11444,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11445,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11446,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
11447,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
11448,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11449,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
11450,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
11451,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
11452,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11453,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11454,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
11455,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
11456,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11457,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11458,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
11459,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11460,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11461,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11462,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
11463,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11464,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11465,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11466,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11467,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11468,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
11469,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11470,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11471,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11472,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11473,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
11474,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
11475,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
11476,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11477,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# arm64v8
"
11478,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# amd64
"
11479,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# fallback
"
11480,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11481,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
11482,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11483,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11484,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11485,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# basic smoke test
"
11486,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11487,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11488,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11489,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11490,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11491,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11492,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11493,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11494,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11495,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11496,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11497,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11498,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
11499,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11500,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11501,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11502,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11503,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11504,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11505,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11506,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
11507,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11508,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
11509,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
11510,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11511,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
11512,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# basic smoke test
"
11513,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11514,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11515,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
11516,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
11517,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
11518,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11519,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
11520,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# amd64
"
11521,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# fallback
"
11522,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11523,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
11524,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11525,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11526,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11527,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
11528,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11529,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11530,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
11531,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11532,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
11533,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11534,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11535,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11536,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11537,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11538,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"#!/bin/bash'; \
"
11539,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11540,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11541,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11542,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
11543,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
11544,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11545,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
11546,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# amd64
"
11547,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# fallback
"
11548,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11549,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11550,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
11551,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
11552,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11553,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11554,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11555,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11556,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11557,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# backwards compatibility shim
"
11558,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11559,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11560,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# arm64v8
"
11561,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# amd64
"
11562,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# fallback
"
11563,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11564,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
11565,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11566,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11567,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11568,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# basic smoke test
"
11569,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11570,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11571,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11572,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11573,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
11574,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11575,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11576,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
11577,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11578,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11579,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11580,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11581,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11582,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11583,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11584,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11585,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11586,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11587,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11588,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11589,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11590,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11591,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# arm64v8
"
11592,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# amd64
"
11593,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# fallback
"
11594,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11595,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11596,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
11597,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
11598,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11599,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11600,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
11601,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11602,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11603,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"#!/bin/sh'; \
"
11604,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11605,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11606,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
11607,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11608,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11609,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11610,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11611,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11612,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11613,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11614,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11615,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
11616,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11617,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11618,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
11619,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11620,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11621,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11622,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11623,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11624,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11625,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11626,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11627,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11628,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11629,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11630,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11631,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11632,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11633,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11634,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11635,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11636,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11637,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
11638,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11639,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11640,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
11641,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11642,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11643,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"#!/bin/sh'; \
"
11644,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11645,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11646,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
11647,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11648,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11649,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11650,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11651,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11652,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
11653,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11654,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11655,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11656,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11657,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11658,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11659,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11660,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11661,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11662,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11663,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11664,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11665,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11666,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11667,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11668,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11669,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11670,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11671,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# backwards compatibility shim
"
11672,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11673,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11674,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
11675,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
11676,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
11677,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11678,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
11679,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11680,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11681,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# basic smoke test
"
11682,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11683,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11684,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11685,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11686,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11687,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11688,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11689,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
11690,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11691,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11692,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11693,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11694,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11695,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11696,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11697,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11698,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11699,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
11700,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11701,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11702,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11703,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11704,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11705,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
11706,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
11707,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
11708,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11709,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
11710,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11711,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11712,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11713,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11714,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
11715,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11716,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11717,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11718,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
11719,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
11720,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
11721,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11722,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11723,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
11724,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11725,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11726,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"#!/bin/sh'; \
"
11727,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11728,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11729,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11730,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11731,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11732,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11733,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11734,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11735,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11736,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11737,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11738,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11739,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11740,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11741,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11742,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11743,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# arm64v8
"
11744,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# amd64
"
11745,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# fallback
"
11746,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11747,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11748,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
11749,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
11750,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11751,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
11752,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
11753,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
11754,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
11755,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11756,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11757,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11758,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
11759,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
11760,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
11761,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11762,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11763,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11764,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
11765,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11766,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11767,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
11768,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11769,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11770,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"#!/bin/sh'; \
"
11771,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11772,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11773,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11774,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11775,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11776,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11777,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11778,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11779,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11780,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11781,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11782,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11783,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11784,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11785,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
11786,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11787,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11788,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11789,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11790,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11791,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11792,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11793,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11794,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11795,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11796,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11797,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
11798,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
11799,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11800,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
11801,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11802,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11803,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11804,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# basic smoke test
"
11805,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11806,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11807,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11808,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11809,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11810,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11811,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
11812,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11813,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11814,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11815,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
11816,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11817,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11818,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11819,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11820,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
11821,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11822,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11823,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11824,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11825,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11826,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
11827,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11828,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11829,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
11830,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11831,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
11832,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11833,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11834,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11835,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11836,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
11837,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
11838,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11839,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"#!/bin/sh'; \
"
11840,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11841,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11842,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11843,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11844,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11845,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11846,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11847,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11848,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11849,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11850,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11851,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11852,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
11853,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11854,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11855,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
11856,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11857,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11858,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
11859,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
11860,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11861,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11862,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11863,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11864,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11865,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
11866,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11867,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11868,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
11869,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11870,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
11871,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11872,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11873,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11874,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11875,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11876,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11877,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11878,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
11879,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11880,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11881,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# arm64v8
"
11882,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# amd64
"
11883,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# fallback
"
11884,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11885,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
11886,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11887,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11888,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11889,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# basic smoke test
"
11890,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11891,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11892,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
11893,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11894,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
11895,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
11896,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11897,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11898,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11899,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11900,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
11901,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
11902,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
11903,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
11904,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
11905,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11906,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11907,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
11908,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# backwards compatibility shim
"
11909,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11910,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11911,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11912,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# amd64
"
11913,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# fallback
"
11914,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
11915,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
11916,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
11917,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11918,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
11919,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11920,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11921,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# basic smoke test
"
11922,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11923,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11924,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11925,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11926,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
11927,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
11928,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
11929,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11930,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11931,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
11932,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
11933,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
11934,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11935,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
11936,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
11937,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
11938,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
11939,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
11940,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
11941,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
11942,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11943,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
11944,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11945,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11946,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11947,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11948,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11949,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# backwards compatibility shim
"
11950,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11951,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11952,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# arm64v8
"
11953,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# amd64
"
11954,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# fallback
"
11955,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11956,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
11957,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11958,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11959,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11960,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# basic smoke test
"
11961,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11962,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11963,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
11964,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
11965,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
11966,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
"
11967,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
11968,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
11969,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# basic smoke test
"
11970,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11971,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
11972,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
11973,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11974,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
11975,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
11976,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
11977,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
11978,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
11979,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
11980,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11981,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
11982,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
11983,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
11984,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# backwards compatibility shim
"
11985,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11986,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
11987,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
11988,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
11989,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
11990,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
11991,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# basic smoke test
"
11992,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
11993,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
11994,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
11995,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
11996,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
11997,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
11998,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# amd64
"
11999,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# fallback
"
12000,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12001,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12002,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12003,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12004,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12005,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# basic smoke test
"
12006,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12007,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12008,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12009,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
12010,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12011,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
12012,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12013,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12014,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
12015,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12016,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12017,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
12018,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12019,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12020,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12021,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12022,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12023,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12024,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12025,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# backwards compatibility shim
"
12026,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12027,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12028,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
12029,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
12030,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12031,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12032,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
12033,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12034,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12035,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# basic smoke test
"
12036,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12037,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12038,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12039,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12040,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12041,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"#!/bin/sh'; \
"
12042,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12043,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12044,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
12045,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12046,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
12047,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12048,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12049,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12050,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12051,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12052,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
12053,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12054,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12055,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12056,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12057,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
12058,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12059,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12060,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12061,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12062,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12063,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# backwards compatibility shim
"
12064,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
12065,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12066,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
12067,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12068,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12069,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12070,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# basic smoke test
"
12071,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12072,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12073,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12074,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12075,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12076,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12077,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12078,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12079,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12080,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12081,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# basic smoke test
"
12082,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12083,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12084,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12085,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12086,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
12087,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12088,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12089,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12090,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12091,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12092,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
12093,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
12094,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12095,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12096,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12097,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12098,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# basic smoke test
"
12099,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12100,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12101,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12102,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12103,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"#!/bin/bash'; \
"
12104,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12105,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12106,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12107,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12108,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
12109,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12110,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12111,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
12112,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12113,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12114,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12115,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12116,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12117,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12118,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12119,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
12120,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12121,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12122,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
12123,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12124,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12125,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12126,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12127,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12128,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12129,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12130,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12131,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12132,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
12133,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# backwards compatibility shim
"
12134,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12135,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12136,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12137,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# amd64
"
12138,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# fallback
"
12139,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
12140,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
12141,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12142,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12143,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
12144,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12145,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12146,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# basic smoke test
"
12147,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12148,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
12149,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12150,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12151,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
12152,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12153,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12154,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12155,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12156,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12157,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12158,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12159,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
12160,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12161,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12162,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"#!/bin/sh'; \
"
12163,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12164,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12165,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12166,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12167,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12168,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12169,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12170,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12171,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12172,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12173,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
12174,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12175,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12176,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12177,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
12178,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12179,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12180,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
12181,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
12182,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
12183,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12184,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
12185,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# amd64
"
12186,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# fallback
"
12187,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12188,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
12189,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12190,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12191,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12192,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
12193,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12194,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12195,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12196,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12197,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12198,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# backwards compatibility shim
"
12199,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
12200,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12201,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
12202,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12203,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12204,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12205,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# basic smoke test
"
12206,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12207,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
12208,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
12209,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12210,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12211,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
12212,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12213,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12214,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"#!/bin/sh'; \
"
12215,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12216,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12217,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
12218,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12219,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12220,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12221,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12222,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12223,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
12224,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12225,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12226,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"#!/bin/sh'; \
"
12227,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12228,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12229,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12230,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12231,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12232,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12233,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12234,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12235,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12236,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12237,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12238,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
12239,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12240,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12241,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12242,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12243,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12244,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12245,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
12246,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
12247,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12248,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12249,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12250,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12251,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12252,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# basic smoke test
"
12253,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12254,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
12255,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12256,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
12257,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12258,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
12259,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12260,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12261,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
12262,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12263,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12264,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12265,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12266,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12267,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12268,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12269,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
12270,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12271,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12272,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"#!/bin/sh'; \
"
12273,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12274,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12275,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12276,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12277,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12278,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12279,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12280,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12281,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12282,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
12283,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12284,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12285,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12286,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12287,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12288,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# basic smoke test
"
12289,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12290,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12291,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12292,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
12293,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12294,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
12295,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12296,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12297,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12298,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
12299,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12300,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12301,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12302,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12303,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12304,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12305,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12306,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12307,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12308,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12309,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# basic smoke test
"
12310,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12311,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12312,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12313,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12314,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12315,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
12316,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12317,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
12318,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12319,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12320,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12321,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12322,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12323,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
12324,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
12325,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12326,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12327,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12328,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12329,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# basic smoke test
"
12330,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12331,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12332,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12333,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12334,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
12335,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12336,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12337,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12338,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12339,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# backwards compatibility shim
"
12340,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12341,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12342,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
12343,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
12344,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12345,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12346,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
12347,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12348,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# basic smoke test
"
12349,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12350,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12351,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12352,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12353,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
12354,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12355,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12356,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12357,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
12358,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12359,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12360,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12361,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12362,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12363,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
12364,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12365,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12366,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12367,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
12368,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12369,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
12370,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
12371,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12372,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12373,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12374,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12375,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
12376,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12377,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
12378,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12379,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12380,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
12381,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12382,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12383,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
12384,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12385,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12386,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12387,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12388,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12389,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12390,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12391,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12392,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
12393,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
12394,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12395,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# amd64
"
12396,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# fallback
"
12397,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12398,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12399,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
12400,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
12401,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12402,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12403,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
12404,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12405,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12406,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
12407,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12408,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12409,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12410,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12411,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12412,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12413,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12414,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12415,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12416,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12417,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12418,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12419,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"#!/bin/sh'; \
"
12420,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12421,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
12422,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12423,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12424,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12425,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12426,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12427,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12428,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"#!/bin/sh'; \
"
12429,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12430,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12431,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12432,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12433,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12434,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12435,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12436,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12437,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12438,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12439,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
12440,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
12441,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12442,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12443,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12444,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12445,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12446,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# basic smoke test
"
12447,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12448,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12449,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12450,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12451,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12452,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12453,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
12454,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12455,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
12456,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
12457,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12458,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
12459,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12460,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12461,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12462,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12463,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
12464,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
12465,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
12466,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12467,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# arm64v8
"
12468,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# amd64
"
12469,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# fallback
"
12470,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12471,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
12472,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12473,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12474,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12475,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# basic smoke test
"
12476,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12477,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12478,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12479,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
12480,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12481,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12482,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# arm64v8
"
12483,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# amd64
"
12484,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# fallback
"
12485,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12486,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12487,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
12488,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
12489,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12490,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12491,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12492,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12493,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12494,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12495,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12496,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12497,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12498,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12499,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# basic smoke test
"
12500,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12501,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12502,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12503,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12504,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
12505,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12506,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12507,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12508,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
12509,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12510,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12511,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12512,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
12513,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12514,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12515,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12516,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12517,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
12518,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12519,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12520,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12521,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12522,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
12523,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12524,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12525,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12526,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12527,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
12528,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12529,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12530,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12531,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12532,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12533,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# backwards compatibility shim
"
12534,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12535,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12536,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
12537,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12538,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12539,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12540,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# basic smoke test
"
12541,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12542,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12543,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12544,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12545,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12546,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12547,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12548,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12549,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12550,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12551,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# basic smoke test
"
12552,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12553,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12554,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12555,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12556,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12557,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12558,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"#!/bin/sh'; \
"
12559,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12560,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12561,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
12562,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
12563,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12564,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12565,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12566,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# arm64v8
"
12567,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# amd64
"
12568,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# fallback
"
12569,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
12570,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
12571,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12572,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12573,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
12574,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12575,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12576,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# basic smoke test
"
12577,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12578,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12579,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12580,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12581,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12582,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
12583,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12584,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
12585,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12586,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12587,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12588,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12589,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12590,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12591,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
12592,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12593,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12594,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12595,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12596,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
12597,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12598,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12599,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12600,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12601,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# backwards compatibility shim
"
12602,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12603,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12604,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
12605,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
12606,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12607,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12608,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
12609,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12610,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12611,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# basic smoke test
"
12612,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12613,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12614,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
12615,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12616,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12617,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
12618,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12619,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12620,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12621,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12622,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12623,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12624,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12625,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
12626,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12627,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12628,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"#!/bin/sh'; \
"
12629,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12630,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12631,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12632,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12633,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12634,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12635,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12636,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12637,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12638,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12639,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
12640,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12641,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12642,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12643,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12644,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12645,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"#!/bin/bash'; \
"
12646,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12647,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12648,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12649,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12650,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12651,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
12652,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12653,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
12654,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12655,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12656,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
12657,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12658,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
12659,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12660,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12661,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12662,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12663,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12664,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
12665,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12666,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
12667,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12668,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
12669,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12670,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12671,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
12672,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12673,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12674,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
12675,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12676,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12677,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12678,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12679,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12680,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12681,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12682,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
12683,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
12684,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12685,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
12686,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# amd64
"
12687,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# fallback
"
12688,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12689,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12690,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
12691,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
12692,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12693,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12694,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
12695,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12696,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
12697,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12698,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12699,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12700,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12701,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12702,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12703,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12704,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12705,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
12706,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
12707,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12708,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12709,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
12710,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12711,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12712,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12713,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
12714,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12715,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12716,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
12717,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12718,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
12719,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12720,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12721,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12722,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12723,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
12724,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12725,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12726,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
12727,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12728,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12729,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
12730,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
12731,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12732,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12733,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12734,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12735,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12736,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12737,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12738,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12739,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
12740,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12741,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12742,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12743,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12744,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12745,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
12746,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12747,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12748,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12749,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
12750,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12751,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12752,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12753,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12754,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12755,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12756,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
12757,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12758,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12759,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
12760,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12761,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12762,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12763,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12764,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12765,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12766,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12767,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12768,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
12769,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12770,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
12771,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12772,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
12773,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12774,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
12775,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12776,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12777,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12778,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12779,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
12780,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12781,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12782,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12783,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12784,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
12785,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12786,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12787,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
12788,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12789,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12790,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
12791,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12792,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12793,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
12794,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
12795,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12796,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12797,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12798,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12799,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12800,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12801,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12802,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12803,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
12804,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12805,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12806,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12807,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
12808,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
12809,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12810,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
12811,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
12812,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
12813,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12814,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12815,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
12816,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
12817,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12818,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12819,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
12820,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12821,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12822,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
12823,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12824,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12825,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12826,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12827,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12828,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12829,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12830,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
12831,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12832,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12833,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"#!/bin/sh'; \
"
12834,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12835,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12836,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12837,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12838,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12839,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12840,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12841,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12842,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12843,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12844,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12845,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12846,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
12847,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12848,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12849,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12850,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12851,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
12852,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12853,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
12854,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
12855,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
12856,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
12857,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12858,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12859,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12860,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
12861,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
12862,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
12863,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
12864,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
12865,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# basic smoke test
"
12866,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
12867,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12868,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12869,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12870,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12871,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
12872,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12873,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
12874,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12875,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12876,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12877,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12878,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12879,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12880,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12881,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12882,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12883,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12884,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12885,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
12886,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12887,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12888,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
12889,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
12890,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12891,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12892,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
12893,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12894,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12895,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12896,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
12897,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12898,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12899,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
12900,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12901,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12902,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12903,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# basic smoke test
"
12904,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12905,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12906,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12907,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
12908,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12909,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
12910,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12911,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12912,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12913,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12914,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
12915,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12916,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
12917,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
12918,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
12919,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12920,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12921,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# amd64
"
12922,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# fallback
"
12923,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
12924,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12925,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
12926,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
12927,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
12928,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12929,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12930,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12931,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
12932,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12933,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12934,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
12935,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12936,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
12937,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12938,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12939,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
12940,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12941,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12942,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
12943,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12944,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12945,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12946,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12947,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12948,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12949,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
12950,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12951,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12952,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12953,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12954,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12955,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"#!/bin/sh'; \
"
12956,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12957,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12958,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12959,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
12960,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
12961,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
12962,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
12963,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
12964,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
12965,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
12966,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
12967,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
12968,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
12969,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
12970,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# amd64
"
12971,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# fallback
"
12972,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
12973,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
12974,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
12975,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
12976,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
12977,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# basic smoke test
"
12978,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
12979,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12980,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
12981,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12982,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
12983,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
12984,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
12985,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
12986,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
12987,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
12988,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
12989,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
12990,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
12991,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
12992,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
12993,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
12994,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
12995,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
12996,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
12997,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
12998,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
12999,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13000,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13001,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13002,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13003,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# backwards compatibility shim
"
13004,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
13005,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13006,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
13007,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13008,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# basic smoke test
"
13009,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13010,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13011,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13012,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
13013,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13014,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
13015,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# arm64v8
"
13016,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# amd64
"
13017,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# fallback
"
13018,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13019,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13020,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
13021,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13022,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13023,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13024,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13025,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13026,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13027,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13028,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13029,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13030,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13031,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13032,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13033,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13034,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13035,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
13036,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13037,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13038,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13039,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13040,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13041,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13042,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13043,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
13044,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13045,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13046,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
13047,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13048,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13049,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"#!/bin/sh'; \
"
13050,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13051,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13052,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13053,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13054,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13055,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13056,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13057,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13058,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13059,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13060,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13061,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13062,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13063,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
13064,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13065,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13066,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13067,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13068,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13069,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13070,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13071,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
13072,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13073,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13074,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
13075,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13076,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13077,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13078,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13079,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13080,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13081,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13082,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
13083,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13084,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13085,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13086,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13087,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13088,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
13089,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13090,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13091,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13092,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# backwards compatibility shim
"
13093,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13094,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
13095,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# arm64v8
"
13096,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# amd64
"
13097,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# fallback
"
13098,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13099,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
13100,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13101,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13102,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13103,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# basic smoke test
"
13104,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13105,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13106,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13107,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13108,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
13109,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13110,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13111,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13112,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
13113,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13114,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13115,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13116,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
13117,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13118,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13119,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
13120,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13121,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13122,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"#!/bin/sh'; \
"
13123,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13124,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13125,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13126,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13127,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13128,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13129,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13130,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13131,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13132,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13133,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
13134,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13135,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13136,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13137,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13138,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13139,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13140,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13141,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13142,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
13143,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13144,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13145,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13146,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13147,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13148,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
13149,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13150,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13151,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13152,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
13153,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13154,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13155,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
13156,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13157,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13158,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
13159,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13160,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13161,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13162,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13163,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13164,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13165,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13166,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13167,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
13168,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13169,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13170,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13171,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13172,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13173,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13174,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13175,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13176,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13177,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13178,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"#!/bin/sh'; \
"
13179,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13180,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13181,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13182,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13183,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13184,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13185,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13186,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
13187,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13188,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
13189,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13190,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
13191,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
13192,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13193,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
13194,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13195,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13196,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13197,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13198,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13199,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"#!/bin/bash'; \
"
13200,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13201,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13202,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13203,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13204,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13205,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
13206,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13207,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13208,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13209,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# backwards compatibility shim
"
13210,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
13211,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13212,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
13213,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
13214,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13215,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13216,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
13217,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13218,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13219,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# basic smoke test
"
13220,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13221,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13222,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13223,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
13224,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13225,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13226,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
13227,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13228,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13229,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
13230,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13231,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13232,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13233,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13234,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13235,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13236,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13237,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13238,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13239,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
13240,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13241,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13242,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13243,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
13244,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13245,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13246,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13247,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13248,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13249,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
13250,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13251,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13252,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13253,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13254,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13255,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13256,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13257,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13258,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
13259,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13260,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13261,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13262,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13263,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13264,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
13265,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13266,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13267,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13268,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13269,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
13270,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13271,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13272,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
13273,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
13274,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13275,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13276,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13277,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13278,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13279,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13280,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13281,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13282,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
13283,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13284,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
13285,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13286,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
13287,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13288,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
13289,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13290,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13291,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13292,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
13293,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13294,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
13295,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# backwards compatibility shim
"
13296,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13297,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13298,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
13299,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# arm64v8
"
13300,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# amd64
"
13301,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# fallback
"
13302,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
13303,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
13304,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13305,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13306,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
13307,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13308,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13309,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# basic smoke test
"
13310,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13311,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13312,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13313,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# backwards compatibility shim
"
13314,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
13315,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13316,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
13317,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
13318,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13319,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13320,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
13321,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13322,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13323,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# basic smoke test
"
13324,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13325,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13326,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
13327,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# backwards compatibility shim
"
13328,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13329,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13330,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
13331,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# arm64v8
"
13332,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# amd64
"
13333,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# fallback
"
13334,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
13335,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
13336,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13337,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13338,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
13339,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13340,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13341,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# basic smoke test
"
13342,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13343,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13344,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13345,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13346,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13347,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13348,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"#!/bin/sh'; \
"
13349,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13350,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13351,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13352,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13353,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
13354,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
13355,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
13356,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
13357,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# arm64v8
"
13358,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# amd64
"
13359,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# fallback
"
13360,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13361,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
13362,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13363,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13364,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13365,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# basic smoke test
"
13366,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13367,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13368,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13369,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13370,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13371,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13372,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13373,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13374,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13375,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13376,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"#!/bin/sh'; \
"
13377,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13378,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13379,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13380,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13381,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13382,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13383,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13384,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13385,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13386,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13387,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13388,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
13389,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13390,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
13391,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13392,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
13393,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13394,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13395,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13396,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
13397,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13398,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13399,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13400,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
13401,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13402,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13403,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13404,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13405,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13406,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
13407,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13408,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13409,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13410,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13411,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13412,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13413,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13414,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13415,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13416,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
13417,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13418,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13419,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
13420,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
13421,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13422,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13423,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
13424,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13425,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13426,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# basic smoke test
"
13427,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13428,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13429,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
13430,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
13431,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13432,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
13433,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
13434,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13435,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13436,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
13437,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13438,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13439,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# basic smoke test
"
13440,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13441,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13442,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13443,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13444,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13445,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13446,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13447,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13448,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
13449,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13450,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13451,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13452,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
13453,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13454,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13455,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13456,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
13457,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
13458,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13459,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
13460,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
13461,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13462,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13463,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
13464,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13465,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13466,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# basic smoke test
"
13467,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13468,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13469,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13470,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13471,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13472,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13473,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13474,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
13475,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13476,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13477,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"#!/bin/sh'; \
"
13478,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13479,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13480,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13481,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13482,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13483,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13484,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13485,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13486,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13487,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13488,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13489,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13490,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13491,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13492,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13493,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13494,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13495,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
13496,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13497,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13498,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
13499,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
13500,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13501,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13502,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
13503,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13504,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13505,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13506,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13507,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13508,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13509,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13510,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13511,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"#!/bin/sh'; \
"
13512,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13513,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13514,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13515,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13516,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13517,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13518,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13519,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13520,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13521,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
13522,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13523,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
13524,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13525,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13526,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13527,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13528,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13529,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13530,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13531,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13532,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13533,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13534,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"#!/bin/bash'; \
"
13535,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13536,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13537,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13538,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13539,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13540,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13541,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13542,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
13543,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13544,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13545,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13546,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13547,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
13548,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13549,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
13550,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13551,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13552,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
13553,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13554,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13555,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
13556,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13557,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13558,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13559,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13560,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13561,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13562,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13563,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13564,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13565,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13566,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13567,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13568,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
13569,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13570,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13571,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13572,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13573,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13574,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13575,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13576,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13577,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13578,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13579,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"#!/bin/sh'; \
"
13580,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13581,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13582,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13583,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13584,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
13585,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13586,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13587,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13588,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13589,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
13590,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13591,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13592,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
13593,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13594,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13595,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"#!/bin/sh'; \
"
13596,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13597,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13598,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13599,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13600,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13601,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13602,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13603,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13604,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13605,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13606,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13607,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13608,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
13609,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13610,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13611,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"#!/bin/sh'; \
"
13612,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13613,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13614,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13615,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13616,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13617,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13618,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13619,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13620,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13621,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13622,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13623,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13624,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13625,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13626,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
13627,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13628,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13629,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13630,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13631,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
13632,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13633,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13634,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13635,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
13636,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13637,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
13638,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13639,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"#!/bin/sh -e'; \
"
13640,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13641,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
13642,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
13643,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13644,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
13645,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13646,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# basic smoke test
"
13647,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13648,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13649,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13650,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
13651,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
13652,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13653,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13654,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
13655,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13656,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13657,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# backwards compatibility shim
"
13658,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
13659,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13660,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
13661,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13662,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# basic smoke test
"
13663,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13664,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13665,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13666,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13667,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13668,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
13669,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13670,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13671,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13672,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13673,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13674,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
13675,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13676,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13677,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13678,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13679,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13680,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"#!/bin/sh'; \
"
13681,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13682,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13683,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
13684,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
13685,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13686,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13687,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13688,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13689,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13690,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13691,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13692,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13693,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
13694,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13695,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13696,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13697,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13698,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13699,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13700,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13701,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13702,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13703,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13704,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13705,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
13706,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13707,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13708,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13709,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13710,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13711,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13712,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13713,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13714,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# backwards compatibility shim
"
13715,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13716,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13717,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
13718,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
13719,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13720,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13721,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
13722,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13723,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13724,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# basic smoke test
"
13725,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13726,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
13727,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13728,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13729,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"#!/bin/sh'; \
"
13730,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13731,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
13732,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13733,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13734,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13735,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13736,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
13737,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13738,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13739,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13740,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13741,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13742,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"#!/bin/sh'; \
"
13743,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13744,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13745,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13746,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13747,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13748,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13749,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13750,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
13751,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13752,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
13753,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13754,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
13755,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13756,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13757,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
13758,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13759,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13760,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
13761,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13762,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13763,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13764,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13765,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13766,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13767,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
13768,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13769,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13770,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
13771,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13772,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13773,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13774,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13775,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13776,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13777,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13778,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13779,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13780,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13781,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
13782,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13783,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13784,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13785,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13786,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
13787,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13788,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13789,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
13790,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13791,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
13792,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13793,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13794,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13795,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13796,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"#!/bin/sh'; \
"
13797,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13798,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13799,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13800,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13801,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13802,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# backwards compatibility shim
"
13803,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13804,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
13805,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# arm64v8
"
13806,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# amd64
"
13807,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# fallback
"
13808,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13809,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
13810,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13811,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13812,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13813,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# basic smoke test
"
13814,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13815,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13816,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13817,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13818,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
13819,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13820,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
13821,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13822,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"#!/bin/sh -e'; \
"
13823,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
13824,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
13825,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13826,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
13827,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13828,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13829,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13830,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13831,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
13832,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13833,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13834,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
13835,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13836,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13837,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
13838,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13839,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13840,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13841,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13842,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13843,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13844,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13845,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13846,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13847,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13848,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13849,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13850,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13851,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
13852,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
13853,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13854,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13855,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
13856,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13857,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13858,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13859,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13860,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13861,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# backwards compatibility shim
"
13862,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13863,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13864,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
13865,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13866,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13867,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13868,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# basic smoke test
"
13869,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13870,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13871,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13872,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13873,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13874,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
13875,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13876,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13877,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13878,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13879,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13880,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13881,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13882,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
13883,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
13884,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13885,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13886,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
13887,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13888,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13889,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13890,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13891,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
13892,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
13893,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
13894,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
13895,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# arm64v8
"
13896,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# amd64
"
13897,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# fallback
"
13898,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13899,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
13900,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13901,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13902,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13903,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# basic smoke test
"
13904,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13905,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
13906,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13907,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
13908,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
13909,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13910,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
13911,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
13912,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13913,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
13914,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13915,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
13916,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# backwards compatibility shim
"
13917,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
13918,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
13919,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
13920,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
13921,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
13922,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
13923,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
13924,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
13925,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
13926,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# basic smoke test
"
13927,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13928,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13929,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13930,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13931,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
13932,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13933,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13934,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13935,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13936,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
13937,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13938,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
13939,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
13940,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13941,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
13942,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13943,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13944,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13945,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13946,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13947,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13948,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13949,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13950,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
13951,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13952,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13953,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13954,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
13955,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13956,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13957,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13958,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13959,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13960,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
13961,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13962,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
13963,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
13964,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
13965,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
13966,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
13967,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
13968,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
13969,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
13970,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
13971,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
13972,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
13973,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13974,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13975,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
13976,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13977,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
13978,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13979,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
13980,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
13981,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
13982,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
13983,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
13984,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
13985,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
13986,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
13987,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
13988,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
13989,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
13990,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
13991,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
13992,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
13993,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
13994,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
13995,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
13996,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13997,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
13998,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
13999,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14000,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14001,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14002,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14003,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
14004,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
14005,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
14006,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
14007,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14008,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14009,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14010,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14011,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14012,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# basic smoke test
"
14013,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14014,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
14015,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14016,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14017,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
14018,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14019,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14020,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14021,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14022,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14023,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14024,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14025,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14026,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14027,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
14028,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14029,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14030,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
14031,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14032,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14033,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14034,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14035,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
14036,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14037,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14038,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14039,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14040,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
14041,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14042,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14043,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14044,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14045,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14046,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# backwards compatibility shim
"
14047,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14048,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14049,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
14050,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14051,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14052,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14053,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# basic smoke test
"
14054,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14055,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
14056,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14057,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"#!/bin/sh -e'; \
"
14058,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14059,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14060,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14061,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
14062,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14063,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14064,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14065,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
14066,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14067,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14068,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14069,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# Default to UTF-8 file.encoding
"
14070,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
14071,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
14072,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# arm64v8
"
14073,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# amd64
"
14074,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# fallback
"
14075,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14076,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14077,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
14078,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# basic smoke test
"
14079,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14080,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14081,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14082,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14083,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14084,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14085,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14086,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14087,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14088,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
14089,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14090,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14091,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
14092,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14093,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14094,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14095,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14096,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14097,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
14098,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14099,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14100,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14101,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14102,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14103,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14104,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14105,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14106,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14107,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14108,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"#!/bin/bash'; \
"
14109,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14110,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14111,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14112,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14113,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14114,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
14115,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# arm64v8
"
14116,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# amd64
"
14117,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# fallback
"
14118,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14119,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14120,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
14121,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
14122,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14123,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14124,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
14125,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14126,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
14127,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14128,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
14129,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14130,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14131,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
14132,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14133,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14134,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14135,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14136,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14137,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14138,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14139,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14140,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14141,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14142,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14143,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
14144,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14145,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14146,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14147,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14148,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14149,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"#!/bin/sh'; \
"
14150,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14151,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14152,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14153,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14154,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14155,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14156,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14157,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14158,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
14159,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14160,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14161,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14162,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14163,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
14164,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14165,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14166,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14167,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14168,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14169,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14170,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14171,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14172,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14173,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14174,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
14175,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14176,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14177,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14178,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14179,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14180,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14181,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14182,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14183,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14184,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14185,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
14186,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14187,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14188,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14189,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14190,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
14191,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14192,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14193,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14194,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14195,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
14196,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14197,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14198,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14199,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
14200,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14201,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14202,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
14203,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14204,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14205,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
14206,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14207,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
14208,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14209,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14210,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14211,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14212,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14213,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14214,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
14215,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14216,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14217,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
14218,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14219,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14220,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14221,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14222,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14223,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14224,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14225,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14226,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14227,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14228,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14229,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14230,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14231,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
14232,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14233,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14234,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
14235,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14236,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14237,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14238,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14239,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14240,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14241,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14242,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14243,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
14244,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14245,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14246,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14247,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14248,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14249,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14250,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14251,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14252,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14253,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14254,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
14255,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14256,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14257,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14258,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14259,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14260,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"#!/bin/sh'; \
"
14261,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14262,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14263,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14264,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14265,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
14266,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14267,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
14268,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
14269,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14270,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14271,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14272,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14273,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14274,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# basic smoke test
"
14275,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14276,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14277,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14278,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14279,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14280,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14281,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14282,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
14283,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14284,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
14285,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14286,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
14287,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14288,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14289,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14290,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14291,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14292,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
14293,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14294,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
14295,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
14296,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14297,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14298,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14299,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14300,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14301,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# basic smoke test
"
14302,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14303,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14304,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14305,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14306,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14307,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
14308,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14309,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14310,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14311,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14312,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14313,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14314,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14315,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14316,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14317,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
14318,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14319,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14320,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14321,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14322,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14323,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
14324,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14325,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14326,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14327,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14328,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14329,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14330,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
14331,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14332,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"#!/bin/sh -e'; \
"
14333,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14334,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
14335,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14336,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14337,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
14338,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14339,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14340,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
14341,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14342,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14343,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14344,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14345,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14346,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
14347,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14348,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14349,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14350,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14351,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14352,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
14353,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14354,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
14355,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
14356,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14357,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
14358,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14359,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
14360,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
14361,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14362,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
14363,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14364,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14365,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14366,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14367,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
14368,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14369,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14370,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14371,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14372,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14373,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
14374,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14375,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14376,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14377,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14378,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14379,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14380,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14381,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14382,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14383,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14384,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14385,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14386,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14387,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14388,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14389,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# basic smoke test
"
14390,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14391,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14392,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14393,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14394,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14395,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14396,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"#!/bin/sh'; \
"
14397,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14398,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14399,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14400,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14401,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14402,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14403,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14404,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
14405,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14406,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
14407,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14408,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
14409,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14410,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14411,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14412,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14413,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14414,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
14415,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14416,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14417,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14418,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14419,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14420,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
14421,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# amd64
"
14422,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# fallback
"
14423,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14424,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14425,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
14426,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14427,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14428,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14429,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14430,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14431,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
14432,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# arm64v8
"
14433,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# amd64
"
14434,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# fallback
"
14435,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14436,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14437,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14438,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14439,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14440,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# basic smoke test
"
14441,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14442,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14443,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14444,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14445,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14446,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"#!/bin/bash'; \
"
14447,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14448,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14449,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14450,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14451,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
14452,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# backwards compatibility shim
"
14453,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
14454,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
14455,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# arm64v8
"
14456,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# amd64
"
14457,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# fallback
"
14458,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14459,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
14460,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14461,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14462,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14463,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# basic smoke test
"
14464,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14465,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14466,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14467,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
14468,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14469,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14470,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14471,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14472,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14473,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14474,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14475,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14476,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
14477,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14478,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
14479,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
14480,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14481,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
14482,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14483,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14484,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14485,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14486,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14487,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
14488,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14489,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14490,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14491,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14492,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14493,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14494,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14495,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14496,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14497,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14498,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14499,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14500,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14501,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14502,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14503,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14504,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# basic smoke test
"
14505,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14506,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14507,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14508,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14509,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14510,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14511,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"#!/bin/sh'; \
"
14512,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14513,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14514,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14515,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14516,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14517,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14518,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14519,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14520,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# backwards compatibility shim
"
14521,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
14522,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14523,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
14524,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
14525,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14526,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14527,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
14528,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14529,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# basic smoke test
"
14530,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14531,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14532,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14533,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
14534,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14535,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14536,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14537,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14538,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
14539,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14540,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14541,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14542,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
14543,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14544,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14545,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
14546,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14547,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
14548,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14549,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
14550,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14551,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14552,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"#!/bin/sh'; \
"
14553,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14554,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14555,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14556,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14557,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14558,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14559,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14560,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14561,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14562,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
14563,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14564,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14565,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
14566,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14567,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
14568,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14569,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14570,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14571,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14572,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14573,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"#!/bin/bash'; \
"
14574,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14575,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14576,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14577,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
14578,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14579,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14580,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
14581,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14582,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14583,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"#!/bin/sh'; \
"
14584,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14585,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14586,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14587,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14588,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14589,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14590,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14591,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14592,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14593,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14594,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
14595,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14596,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14597,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
14598,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
14599,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14600,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14601,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14602,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14603,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14604,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
14605,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14606,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14607,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"#!/bin/sh'; \
"
14608,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14609,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14610,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14611,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14612,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14613,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14614,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14615,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
14616,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14617,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14618,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"#!/bin/sh'; \
"
14619,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14620,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14621,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14622,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14623,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14624,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14625,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14626,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14627,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14628,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
14629,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14630,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
14631,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14632,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14633,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
14634,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14635,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14636,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
14637,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14638,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14639,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
14640,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
14641,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14642,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14643,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14644,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14645,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14646,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14647,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14648,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14649,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14650,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14651,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14652,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14653,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
14654,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14655,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14656,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14657,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14658,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14659,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
14660,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# arm64v8
"
14661,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# amd64
"
14662,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# fallback
"
14663,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14664,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14665,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
14666,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
14667,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14668,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14669,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14670,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14671,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14672,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
14673,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14674,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14675,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14676,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14677,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
14678,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14679,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14680,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
14681,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14682,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14683,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14684,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14685,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14686,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14687,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14688,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14689,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14690,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14691,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# basic smoke test
"
14692,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14693,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14694,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14695,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
14696,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14697,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14698,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
14699,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14700,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14701,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14702,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14703,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14704,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14705,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14706,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14707,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14708,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14709,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14710,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14711,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14712,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14713,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
14714,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14715,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14716,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14717,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
14718,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
14719,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
14720,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14721,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14722,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14723,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14724,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# backwards compatibility shim
"
14725,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
14726,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14727,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
14728,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14729,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14730,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14731,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# basic smoke test
"
14732,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14733,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14734,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14735,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14736,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14737,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14738,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14739,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14740,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14741,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14742,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14743,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14744,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# backwards compatibility shim
"
14745,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
14746,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14747,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
14748,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14749,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14750,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14751,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# basic smoke test
"
14752,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14753,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14754,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
14755,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
14756,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14757,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
14758,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
14759,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14760,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14761,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14762,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
14763,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14764,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14765,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
14766,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14767,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14768,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"#!/bin/sh'; \
"
14769,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14770,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14771,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14772,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14773,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14774,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14775,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14776,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14777,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
14778,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14779,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
14780,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
14781,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
14782,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
14783,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
14784,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# arm64v8
"
14785,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# amd64
"
14786,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# fallback
"
14787,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
14788,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
14789,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14790,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14791,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
14792,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14793,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14794,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# basic smoke test
"
14795,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14796,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14797,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14798,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14799,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14800,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14801,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14802,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14803,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14804,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14805,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# basic smoke test
"
14806,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14807,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14808,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
14809,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
14810,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
14811,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14812,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
14813,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14814,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
14815,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14816,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14817,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
14818,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14819,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14820,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"#!/bin/sh'; \
"
14821,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14822,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14823,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14824,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14825,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14826,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14827,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14828,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14829,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14830,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
14831,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14832,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14833,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14834,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14835,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14836,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"#!/bin/sh'; \
"
14837,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14838,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14839,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14840,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14841,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14842,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14843,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
14844,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14845,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14846,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14847,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14848,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14849,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
14850,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14851,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
14852,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
14853,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
14854,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14855,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14856,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14857,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14858,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"#!/bin/sh'; \
"
14859,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14860,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14861,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14862,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14863,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14864,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14865,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
14866,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14867,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
14868,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14869,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14870,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14871,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
14872,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
14873,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14874,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
14875,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
14876,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14877,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14878,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14879,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14880,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14881,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# basic smoke test
"
14882,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14883,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14884,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14885,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
14886,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14887,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14888,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14889,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14890,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14891,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"#!/bin/sh'; \
"
14892,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14893,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14894,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
14895,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14896,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
14897,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14898,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14899,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14900,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
14901,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
14902,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14903,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
14904,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
14905,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14906,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14907,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14908,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14909,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14910,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# basic smoke test
"
14911,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14912,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
14913,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14914,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14915,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
14916,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14917,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14918,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14919,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14920,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14921,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14922,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14923,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14924,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14925,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14926,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
14927,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
14928,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
14929,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
14930,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
14931,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
14932,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14933,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14934,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14935,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14936,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# basic smoke test
"
14937,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14938,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14939,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14940,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14941,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14942,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14943,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14944,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14945,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
14946,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14947,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14948,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14949,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14950,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
14951,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14952,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14953,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
14954,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14955,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# basic smoke test
"
14956,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
14957,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14958,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14959,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14960,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
14961,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14962,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14963,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
14964,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
14965,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14966,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
14967,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
14968,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
14969,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
14970,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
14971,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
14972,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# backwards compatibility shim
"
14973,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
14974,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
14975,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
14976,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
14977,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
14978,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
14979,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# basic smoke test
"
14980,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
14981,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
14982,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
14983,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
14984,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
14985,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
14986,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"#!/bin/sh'; \
"
14987,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
14988,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
14989,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
14990,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
14991,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
14992,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
14993,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14994,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
14995,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
14996,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
14997,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
14998,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
14999,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15000,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
15001,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15002,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15003,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15004,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
15005,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# backwards compatibility shim
"
15006,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15007,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15008,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
15009,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# arm64v8
"
15010,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# amd64
"
15011,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# fallback
"
15012,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
15013,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
15014,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15015,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15016,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
15017,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15018,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15019,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# basic smoke test
"
15020,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15021,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
15022,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15023,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15024,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"#!/bin/sh'; \
"
15025,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15026,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15027,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15028,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15029,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15030,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15031,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15032,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
15033,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
15034,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
15035,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
15036,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
15037,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
15038,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15039,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15040,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15041,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15042,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15043,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15044,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
15045,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15046,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
15047,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15048,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15049,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15050,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15051,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15052,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15053,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15054,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15055,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15056,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15057,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15058,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15059,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15060,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15061,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
15062,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15063,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
15064,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15065,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15066,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15067,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15068,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15069,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"#!/bin/bash'; \
"
15070,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15071,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15072,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15073,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15074,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
15075,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15076,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15077,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
15078,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15079,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15080,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15081,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15082,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15083,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15084,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15085,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15086,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15087,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
15088,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15089,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15090,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15091,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15092,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15093,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15094,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
15095,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15096,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15097,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
15098,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15099,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15100,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"#!/bin/sh'; \
"
15101,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15102,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15103,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15104,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15105,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15106,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15107,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15108,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
15109,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
15110,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
15111,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
15112,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
15113,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# amd64
"
15114,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# fallback
"
15115,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15116,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
15117,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15118,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15119,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15120,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
15121,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15122,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15123,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
15124,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
15125,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
15126,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
15127,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
15128,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15129,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# basic smoke test
"
15130,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15131,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15132,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15133,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15134,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
15135,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15136,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15137,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15138,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15139,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15140,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15141,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15142,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15143,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15144,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15145,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"#!/bin/sh'; \
"
15146,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15147,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15148,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15149,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
15150,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
15151,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15152,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
15153,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
15154,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15155,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15156,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15157,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15158,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15159,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15160,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15161,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15162,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15163,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15164,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
15165,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15166,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15167,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15168,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15169,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15170,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15171,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# basic smoke test
"
15172,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15173,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15174,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15175,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15176,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15177,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15178,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15179,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15180,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
15181,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15182,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15183,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15184,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15185,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15186,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
15187,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15188,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15189,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15190,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15191,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15192,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15193,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15194,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15195,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15196,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15197,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15198,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15199,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
15200,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15201,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15202,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
15203,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
15204,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15205,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15206,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15207,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15208,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15209,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# basic smoke test
"
15210,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15211,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15212,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15213,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15214,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
15215,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15216,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15217,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15218,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15219,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15220,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15221,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15222,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15223,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15224,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15225,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15226,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
15227,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15228,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15229,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15230,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15231,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
15232,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15233,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15234,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15235,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15236,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15237,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15238,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15239,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
15240,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15241,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15242,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15243,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15244,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15245,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15246,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15247,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15248,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15249,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15250,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15251,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15252,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15253,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15254,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"#!/bin/sh'; \
"
15255,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15256,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15257,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15258,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15259,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15260,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15261,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15262,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15263,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
15264,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15265,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15266,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15267,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15268,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15269,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15270,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15271,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15272,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15273,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15274,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15275,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15276,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15277,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15278,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15279,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15280,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
15281,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15282,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15283,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
15284,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15285,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
15286,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15287,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15288,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15289,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15290,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
15291,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15292,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15293,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
15294,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15295,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15296,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"#!/bin/sh'; \
"
15297,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15298,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15299,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15300,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15301,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15302,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15303,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15304,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15305,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
15306,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15307,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15308,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
15309,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15310,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15311,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"#!/bin/sh'; \
"
15312,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15313,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15314,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15315,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15316,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15317,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15318,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15319,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15320,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15321,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15322,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15323,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15324,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
15325,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15326,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15327,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
15328,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15329,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15330,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# backwards compatibility shim
"
15331,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15332,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
15333,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# arm64v8
"
15334,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# amd64
"
15335,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# fallback
"
15336,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15337,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
15338,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15339,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15340,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15341,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# basic smoke test
"
15342,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15343,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15344,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15345,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15346,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15347,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
15348,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15349,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15350,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15351,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15352,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15353,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15354,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15355,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15356,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15357,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15358,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15359,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15360,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15361,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15362,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15363,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15364,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15365,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
15366,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15367,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15368,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15369,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15370,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15371,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
15372,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15373,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15374,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15375,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15376,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15377,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15378,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15379,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15380,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15381,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15382,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15383,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
15384,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15385,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15386,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15387,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15388,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
15389,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15390,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15391,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15392,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15393,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15394,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
15395,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15396,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15397,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15398,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15399,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15400,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15401,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15402,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15403,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15404,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
15405,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15406,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15407,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
15408,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15409,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15410,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
15411,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15412,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15413,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15414,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15415,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15416,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15417,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15418,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15419,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
15420,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15421,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
15422,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
15423,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
15424,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15425,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
15426,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
15427,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15428,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
15429,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15430,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15431,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
15432,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15433,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15434,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15435,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15436,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15437,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15438,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15439,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15440,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15441,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15442,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15443,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
15444,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15445,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15446,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
15447,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15448,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
15449,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# backwards compatibility shim
"
15450,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
15451,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
15452,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# arm64v8
"
15453,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# amd64
"
15454,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# fallback
"
15455,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15456,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
15457,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15458,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15459,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15460,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# basic smoke test
"
15461,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15462,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15463,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15464,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15465,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
15466,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15467,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15468,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15469,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15470,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15471,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
15472,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15473,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15474,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15475,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15476,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15477,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15478,6294b7d4b299639ec519dfd92782632f498eb1d2,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15479,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15480,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15481,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15482,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15483,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15484,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15485,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15486,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
15487,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15488,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15489,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
15490,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
15491,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15492,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15493,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15494,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15495,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15496,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# basic smoke test
"
15497,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15498,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15499,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15500,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15501,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15502,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15503,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15504,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15505,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15506,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15507,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15508,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15509,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15510,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15511,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15512,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15513,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# backwards compatibility shim
"
15514,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
15515,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
15516,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
15517,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
15518,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15519,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15520,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
15521,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15522,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15523,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# basic smoke test
"
15524,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15525,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15526,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15527,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15528,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
15529,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15530,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15531,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15532,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15533,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15534,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
15535,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15536,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15537,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
15538,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15539,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15540,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15541,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15542,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15543,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15544,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15545,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15546,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15547,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
15548,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15549,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15550,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"#!/bin/sh'; \
"
15551,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15552,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15553,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15554,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15555,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15556,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15557,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15558,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15559,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15560,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# backwards compatibility shim
"
15561,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
15562,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
15563,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
15564,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
15565,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15566,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15567,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
15568,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15569,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15570,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# basic smoke test
"
15571,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15572,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15573,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15574,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15575,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15576,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
15577,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15578,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15579,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# backwards compatibility shim
"
15580,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
15581,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15582,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15583,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15584,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15585,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15586,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# basic smoke test
"
15587,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15588,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15589,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15590,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15591,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
15592,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15593,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15594,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15595,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15596,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15597,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15598,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# basic smoke test
"
15599,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15600,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15601,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15602,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15603,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15604,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15605,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
15606,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15607,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15608,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15609,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15610,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15611,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
15612,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15613,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
15614,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
15615,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
15616,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
"
15617,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
15618,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15619,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# basic smoke test
"
15620,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15621,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
15622,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15623,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15624,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15625,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15626,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15627,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15628,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15629,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15630,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15631,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15632,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
15633,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15634,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15635,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"#!/bin/sh'; \
"
15636,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15637,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15638,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15639,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15640,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15641,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15642,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15643,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15644,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15645,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15646,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15647,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
15648,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15649,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
15650,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15651,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
15652,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15653,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15654,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
15655,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15656,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15657,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15658,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15659,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15660,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15661,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15662,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15663,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15664,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15665,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15666,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15667,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
15668,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15669,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15670,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15671,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
15672,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15673,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15674,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
15675,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
15676,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
15677,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15678,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
15679,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
15680,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15681,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
15682,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15683,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15684,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15685,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
15686,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15687,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15688,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15689,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15690,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15691,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
15692,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15693,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15694,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
15695,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15696,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15697,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15698,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15699,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15700,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15701,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15702,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15703,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15704,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15705,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15706,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15707,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15708,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15709,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15710,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
15711,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15712,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15713,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"#!/bin/sh'; \
"
15714,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15715,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15716,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15717,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15718,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15719,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15720,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15721,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
15722,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
15723,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15724,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15725,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15726,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15727,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15728,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
15729,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15730,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15731,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15732,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15733,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15734,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15735,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15736,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15737,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15738,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15739,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15740,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
15741,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15742,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15743,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15744,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15745,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15746,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15747,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15748,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15749,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15750,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
15751,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15752,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15753,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15754,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
15755,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15756,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15757,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15758,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15759,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15760,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
15761,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15762,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15763,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15764,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15765,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"#!/bin/sh'; \
"
15766,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15767,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15768,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15769,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
15770,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15771,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15772,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15773,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
15774,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15775,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15776,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15777,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15778,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15779,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15780,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15781,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
15782,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
15783,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
15784,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
15785,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
15786,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15787,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
15788,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
15789,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15790,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
15791,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15792,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15793,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15794,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15795,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15796,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15797,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15798,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15799,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15800,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15801,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15802,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15803,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
15804,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15805,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15806,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
15807,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15808,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15809,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15810,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15811,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15812,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15813,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15814,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15815,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
15816,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15817,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15818,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
15819,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
15820,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
15821,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15822,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15823,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15824,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15825,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# basic smoke test
"
15826,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15827,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15828,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15829,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15830,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15831,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15832,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15833,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
15834,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15835,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15836,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15837,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15838,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15839,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15840,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15841,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15842,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15843,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15844,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15845,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# backwards compatibility shim
"
15846,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15847,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
15848,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# arm64v8
"
15849,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# amd64
"
15850,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# fallback
"
15851,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15852,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15853,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15854,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15855,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15856,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# basic smoke test
"
15857,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15858,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15859,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15860,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
15861,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15862,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15863,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15864,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15865,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15866,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
15867,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15868,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15869,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
15870,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15871,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
15872,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15873,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15874,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
15875,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
15876,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
15877,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15878,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15879,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15880,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15881,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
15882,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15883,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15884,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15885,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15886,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
15887,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15888,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15889,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15890,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15891,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15892,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
15893,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15894,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15895,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15896,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15897,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15898,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15899,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
15900,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15901,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15902,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
15903,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15904,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15905,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
15906,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15907,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15908,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15909,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15910,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15911,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15912,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15913,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15914,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15915,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
15916,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15917,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15918,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"#!/bin/sh'; \
"
15919,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15920,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15921,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15922,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15923,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15924,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15925,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15926,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15927,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15928,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
15929,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15930,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15931,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
15932,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15933,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15934,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
15935,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15936,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15937,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15938,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15939,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15940,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15941,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15942,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15943,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15944,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
15945,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15946,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15947,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
15948,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
15949,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15950,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
15951,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15952,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15953,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
15954,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15955,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15956,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15957,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15958,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15959,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
15960,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
15961,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
15962,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
15963,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"#!/bin/sh'; \
"
15964,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
15965,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
15966,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
15967,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
15968,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
15969,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
15970,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
15971,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
15972,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15973,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15974,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
15975,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15976,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
15977,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
15978,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
15979,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
15980,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
15981,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
15982,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
15983,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
15984,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
15985,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# basic smoke test
"
15986,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
15987,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15988,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15989,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15990,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
15991,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15992,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15993,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15994,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
15995,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
15996,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
15997,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
15998,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
15999,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
16000,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16001,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16002,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16003,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16004,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16005,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
16006,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16007,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16008,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16009,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16010,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16011,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16012,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16013,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16014,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16015,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16016,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16017,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16018,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
16019,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16020,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
16021,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16022,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16023,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16024,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16025,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16026,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# backwards compatibility shim
"
16027,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
16028,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16029,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16030,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16031,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16032,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16033,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# basic smoke test
"
16034,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16035,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16036,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
16037,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16038,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16039,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16040,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16041,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16042,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16043,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16044,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16045,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16046,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16047,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16048,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
16049,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16050,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16051,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
16052,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16053,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
16054,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16055,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16056,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16057,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16058,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
16059,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16060,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16061,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16062,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16063,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16064,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16065,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16066,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16067,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16068,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
16069,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16070,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
16071,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16072,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
16073,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16074,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16075,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
16076,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16077,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16078,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"#!/bin/sh'; \
"
16079,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16080,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16081,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
16082,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16083,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16084,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16085,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16086,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16087,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16088,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16089,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16090,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
16091,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16092,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16093,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16094,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16095,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
16096,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16097,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16098,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16099,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16100,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16101,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
16102,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16103,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16104,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16105,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16106,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
16107,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16108,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16109,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16110,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16111,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16112,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
16113,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16114,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16115,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16116,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16117,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16118,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16119,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16120,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16121,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16122,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16123,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16124,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
16125,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16126,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16127,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16128,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16129,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16130,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16131,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16132,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
16133,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16134,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16135,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16136,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16137,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16138,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"#!/bin/sh'; \
"
16139,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16140,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16141,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16142,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16143,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16144,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16145,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16146,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
16147,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16148,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16149,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
16150,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16151,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16152,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16153,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16154,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16155,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16156,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16157,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16158,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16159,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16160,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
16161,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16162,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16163,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16164,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
16165,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16166,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16167,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16168,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
16169,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16170,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16171,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
16172,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
16173,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
16174,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16175,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
16176,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16177,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16178,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16179,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
16180,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16181,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16182,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16183,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
16184,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
16185,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16186,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
16187,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
16188,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
16189,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
16190,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16191,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
16192,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
16193,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16194,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16195,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16196,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16197,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16198,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
16199,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16200,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16201,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
16202,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16203,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
16204,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16205,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
16206,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16207,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16208,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16209,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
16210,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16211,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16212,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16213,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16214,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
16215,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# backwards compatibility shim
"
16216,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
16217,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16218,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# arm64v8
"
16219,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# amd64
"
16220,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# fallback
"
16221,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16222,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
16223,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16224,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16225,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16226,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# basic smoke test
"
16227,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16228,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16229,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16230,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16231,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
16232,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16233,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16234,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16235,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
16236,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16237,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16238,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16239,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
16240,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16241,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16242,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16243,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16244,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16245,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16246,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16247,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
16248,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16249,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
16250,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16251,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16252,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"#!/bin/sh'; \
"
16253,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16254,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16255,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16256,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16257,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16258,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16259,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16260,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16261,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16262,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16263,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16264,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16265,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16266,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16267,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16268,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16269,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16270,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16271,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16272,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16273,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16274,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# backwards compatibility shim
"
16275,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16276,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16277,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
16278,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
16279,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
16280,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16281,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
16282,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16283,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16284,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# basic smoke test
"
16285,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16286,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16287,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16288,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16289,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16290,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
16291,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16292,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16293,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16294,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16295,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
16296,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16297,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16298,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16299,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16300,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
16301,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16302,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16303,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16304,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16305,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16306,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
16307,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16308,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16309,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16310,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16311,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16312,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"#!/bin/sh'; \
"
16313,5dba2054c6821e38a6d3fad32239369818289228,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16314,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16315,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16316,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16317,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16318,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16319,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16320,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16321,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16322,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16323,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
16324,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16325,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16326,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
16327,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16328,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16329,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16330,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16331,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16332,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16333,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16334,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16335,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
16336,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16337,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16338,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16339,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16340,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16341,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
16342,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16343,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16344,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16345,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16346,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16347,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16348,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16349,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16350,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16351,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16352,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16353,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16354,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# backwards compatibility shim
"
16355,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16356,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16357,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16358,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16359,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16360,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16361,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# basic smoke test
"
16362,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16363,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16364,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16365,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16366,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
16367,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16368,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16369,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16370,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16371,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
16372,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16373,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16374,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16375,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16376,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16377,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16378,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16379,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16380,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16381,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
16382,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16383,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16384,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
16385,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16386,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
16387,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
16388,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16389,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16390,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16391,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
16392,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16393,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16394,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16395,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16396,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16397,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16398,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
16399,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16400,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16401,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16402,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16403,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16404,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16405,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16406,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16407,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
16408,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
16409,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16410,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16411,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16412,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16413,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16414,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16415,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16416,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16417,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16418,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"#!/bin/sh'; \
"
16419,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16420,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16421,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16422,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16423,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16424,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16425,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16426,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16427,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16428,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16429,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16430,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
16431,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16432,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16433,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
16434,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16435,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16436,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16437,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# basic smoke test
"
16438,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16439,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16440,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16441,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
16442,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
16443,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
16444,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16445,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# arm64v8
"
16446,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# amd64
"
16447,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# fallback
"
16448,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16449,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
16450,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16451,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16452,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16453,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# basic smoke test
"
16454,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16455,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
16456,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
16457,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
16458,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
16459,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16460,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16461,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
16462,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16463,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16464,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
16465,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16466,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16467,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16468,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16469,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16470,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16471,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16472,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16473,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
16474,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16475,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16476,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# amd64
"
16477,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# fallback
"
16478,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
16479,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16480,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
16481,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16482,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16483,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16484,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16485,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
16486,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16487,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16488,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
16489,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16490,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16491,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"#!/bin/sh'; \
"
16492,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16493,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16494,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16495,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16496,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16497,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16498,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16499,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16500,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16501,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16502,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# backwards compatibility shim
"
16503,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16504,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16505,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16506,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16507,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16508,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16509,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# basic smoke test
"
16510,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16511,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16512,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
16513,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16514,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16515,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16516,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16517,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16518,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16519,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16520,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16521,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16522,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16523,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16524,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
16525,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
16526,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
16527,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
16528,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16529,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16530,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16531,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# backwards compatibility shim
"
16532,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16533,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16534,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# arm64v8
"
16535,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# amd64
"
16536,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# fallback
"
16537,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16538,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
16539,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16540,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16541,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16542,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# basic smoke test
"
16543,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16544,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16545,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16546,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16547,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# backwards compatibility shim
"
16548,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16549,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16550,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
16551,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
16552,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
16553,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16554,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16555,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16556,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16557,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# basic smoke test
"
16558,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16559,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16560,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16561,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
16562,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16563,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16564,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# arm64v8
"
16565,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# amd64
"
16566,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# fallback
"
16567,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
16568,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16569,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
16570,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
16571,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16572,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16573,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16574,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16575,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# backwards compatibility shim
"
16576,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
16577,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
16578,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
16579,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
16580,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
16581,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16582,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
16583,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16584,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16585,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# basic smoke test
"
16586,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16587,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16588,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16589,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16590,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16591,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
16592,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16593,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16594,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
16595,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16596,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16597,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16598,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16599,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16600,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16601,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16602,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
16603,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16604,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
16605,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16606,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16607,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16608,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16609,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"#!/bin/sh'; \
"
16610,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16611,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16612,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16613,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16614,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16615,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16616,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16617,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16618,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16619,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
16620,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16621,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16622,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16623,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
16624,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
16625,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16626,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
16627,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# amd64
"
16628,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# fallback
"
16629,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
16630,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16631,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
16632,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
16633,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16634,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16635,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16636,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16637,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16638,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16639,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16640,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16641,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16642,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
16643,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16644,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16645,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
16646,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16647,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
16648,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
16649,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16650,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16651,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16652,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16653,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16654,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"#!/bin/sh'; \
"
16655,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16656,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16657,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16658,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16659,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16660,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16661,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16662,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
16663,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16664,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16665,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16666,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16667,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16668,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16669,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16670,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16671,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16672,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16673,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16674,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16675,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
16676,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16677,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16678,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
16679,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16680,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16681,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"#!/bin/sh'; \
"
16682,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16683,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16684,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16685,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16686,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16687,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16688,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16689,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16690,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16691,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
16692,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
16693,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
16694,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16695,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
16696,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# amd64
"
16697,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# fallback
"
16698,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16699,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
16700,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16701,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16702,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16703,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
16704,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16705,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16706,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16707,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16708,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16709,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16710,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16711,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16712,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16713,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16714,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# backwards compatibility shim
"
16715,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16716,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16717,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# arm64v8
"
16718,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# amd64
"
16719,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# fallback
"
16720,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16721,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16722,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16723,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16724,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16725,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# basic smoke test
"
16726,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16727,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16728,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
16729,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16730,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16731,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
16732,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16733,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16734,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16735,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16736,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16737,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16738,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16739,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
16740,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
16741,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16742,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16743,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
16744,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
16745,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
16746,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16747,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16748,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16749,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
16750,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
16751,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
16752,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16753,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16754,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16755,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16756,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"#!/bin/sh'; \
"
16757,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16758,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16759,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16760,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16761,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16762,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16763,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16764,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# backwards compatibility shim
"
16765,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16766,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
16767,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# arm64v8
"
16768,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# amd64
"
16769,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# fallback
"
16770,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16771,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16772,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16773,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16774,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16775,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# basic smoke test
"
16776,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16777,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16778,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16779,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16780,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16781,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# backwards compatibility shim
"
16782,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16783,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16784,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16785,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16786,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16787,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16788,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# basic smoke test
"
16789,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16790,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16791,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16792,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16793,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16794,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"#!/bin/sh'; \
"
16795,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16796,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16797,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16798,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16799,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16800,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16801,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16802,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
16803,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16804,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16805,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16806,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16807,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16808,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16809,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# backwards compatibility shim
"
16810,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16811,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16812,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
16813,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
16814,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
16815,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16816,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16817,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16818,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16819,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# basic smoke test
"
16820,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16821,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16822,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16823,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16824,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16825,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16826,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16827,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16828,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
16829,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16830,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16831,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16832,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
16833,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16834,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16835,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16836,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16837,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16838,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# backwards compatibility shim
"
16839,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
16840,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
16841,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
16842,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
16843,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
16844,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16845,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16846,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16847,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16848,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# basic smoke test
"
16849,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16850,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
16851,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16852,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16853,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16854,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16855,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16856,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16857,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16858,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16859,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16860,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16861,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
16862,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
16863,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16864,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16865,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
16866,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16867,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16868,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16869,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16870,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# backwards compatibility shim
"
16871,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
16872,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
16873,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
16874,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
16875,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
16876,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16877,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
16878,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16879,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16880,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# basic smoke test
"
16881,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16882,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16883,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16884,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16885,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"#!/bin/bash'; \
"
16886,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16887,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16888,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16889,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16890,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16891,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
16892,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16893,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
16894,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16895,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16896,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16897,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16898,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16899,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16900,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16901,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16902,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
16903,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16904,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16905,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# backwards compatibility shim
"
16906,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
16907,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16908,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16909,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16910,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16911,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16912,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# basic smoke test
"
16913,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
16914,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16915,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
16916,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16917,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16918,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"#!/bin/sh'; \
"
16919,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16920,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16921,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16922,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16923,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16924,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16925,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16926,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
16927,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16928,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
16929,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# https://bugs.alpinelinux.org/issues/10126
"
16930,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16931,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
16932,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
16933,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
16934,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
16935,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
16936,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16937,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16938,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16939,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16940,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"#!/bin/sh'; \
"
16941,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16942,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
16943,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16944,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16945,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16946,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
16947,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16948,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16949,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16950,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16951,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16952,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"#!/bin/sh'; \
"
16953,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16954,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16955,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16956,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16957,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16958,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16959,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16960,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16961,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
16962,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16963,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"#!/bin/sh'; \
"
16964,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16965,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16966,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16967,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16968,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16969,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16970,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
16971,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
16972,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16973,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
16974,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16975,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# backwards compatibility shim
"
16976,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
16977,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
16978,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
16979,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
16980,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
16981,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
16982,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
16983,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
16984,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
16985,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# basic smoke test
"
16986,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
16987,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
16988,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
16989,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
16990,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
16991,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
16992,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
16993,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
16994,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
16995,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
16996,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
16997,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
16998,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
16999,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17000,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
17001,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17002,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17003,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17004,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17005,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17006,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17007,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# basic smoke test
"
17008,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17009,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17010,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17011,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17012,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17013,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17014,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
17015,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
17016,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17017,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17018,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17019,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17020,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17021,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# basic smoke test
"
17022,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17023,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17024,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17025,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17026,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17027,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
17028,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# backwards compatibility shim
"
17029,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
17030,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17031,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# arm64v8
"
17032,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# amd64
"
17033,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# fallback
"
17034,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17035,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
17036,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17037,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17038,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17039,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# basic smoke test
"
17040,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17041,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17042,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17043,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17044,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# backwards compatibility shim
"
17045,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
17046,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
17047,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
17048,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
17049,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17050,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17051,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
17052,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17053,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17054,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# basic smoke test
"
17055,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17056,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17057,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17058,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
17059,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17060,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17061,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17062,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17063,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
17064,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17065,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17066,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17067,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17068,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
17069,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17070,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17071,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17072,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17073,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
17074,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17075,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17076,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17077,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
17078,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
17079,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17080,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
17081,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
17082,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17083,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17084,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17085,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17086,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# basic smoke test
"
17087,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17088,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17089,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
17090,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17091,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17092,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
17093,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17094,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17095,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
17096,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17097,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17098,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
17099,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17100,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17101,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17102,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17103,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17104,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17105,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17106,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# backwards compatibility shim
"
17107,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17108,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17109,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# arm64v8
"
17110,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# amd64
"
17111,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# fallback
"
17112,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17113,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17114,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17115,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17116,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17117,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# basic smoke test
"
17118,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17119,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17120,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
17121,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17122,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17123,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
17124,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17125,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17126,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17127,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17128,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17129,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17130,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17131,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
17132,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17133,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
17134,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17135,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17136,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17137,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17138,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17139,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"#!/bin/sh'; \
"
17140,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17141,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17142,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
17143,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17144,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17145,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17146,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17147,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17148,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17149,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
17150,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17151,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17152,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17153,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17154,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17155,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17156,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17157,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17158,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
17159,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17160,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17161,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
17162,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17163,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17164,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
17165,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17166,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17167,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
17168,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17169,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17170,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17171,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17172,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17173,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17174,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17175,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17176,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17177,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17178,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17179,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
17180,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17181,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17182,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
17183,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17184,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
17185,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17186,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17187,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17188,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
17189,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
17190,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17191,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# amd64
"
17192,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# fallback
"
17193,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17194,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17195,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
17196,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
17197,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17198,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17199,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17200,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17201,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17202,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17203,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17204,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17205,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17206,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17207,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17208,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17209,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
17210,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17211,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17212,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17213,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17214,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17215,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17216,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17217,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
17218,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17219,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
17220,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17221,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17222,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17223,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17224,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17225,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17226,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17227,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17228,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17229,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17230,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"#!/bin/sh'; \
"
17231,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17232,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17233,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17234,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17235,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17236,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17237,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17238,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17239,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# backwards compatibility shim
"
17240,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17241,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17242,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
17243,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17244,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17245,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17246,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# basic smoke test
"
17247,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17248,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17249,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
17250,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17251,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17252,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
17253,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17254,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
17255,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17256,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17257,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17258,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17259,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
17260,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17261,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17262,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
17263,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17264,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17265,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"#!/bin/sh'; \
"
17266,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17267,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17268,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17269,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17270,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17271,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17272,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17273,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17274,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17275,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17276,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"#!/bin/sh'; \
"
17277,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17278,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17279,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
17280,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17281,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17282,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17283,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17284,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17285,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17286,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17287,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17288,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17289,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17290,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17291,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17292,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
17293,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17294,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17295,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
17296,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17297,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17298,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"#!/bin/sh'; \
"
17299,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17300,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17301,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17302,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17303,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17304,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17305,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17306,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17307,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17308,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
17309,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17310,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17311,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17312,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# backwards compatibility shim
"
17313,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
17314,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17315,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
17316,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17317,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# basic smoke test
"
17318,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17319,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17320,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17321,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17322,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
17323,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17324,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17325,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17326,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# backwards compatibility shim
"
17327,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
17328,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17329,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
17330,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17331,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# basic smoke test
"
17332,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17333,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17334,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17335,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
17336,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17337,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17338,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
17339,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
17340,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17341,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
17342,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
17343,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17344,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17345,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17346,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
17347,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17348,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17349,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# arm64v8
"
17350,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# amd64
"
17351,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# fallback
"
17352,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17353,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17354,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17355,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17356,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17357,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# basic smoke test
"
17358,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17359,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17360,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17361,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
17362,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17363,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17364,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17365,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17366,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17367,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17368,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# arm64v8
"
17369,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# amd64
"
17370,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# fallback
"
17371,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17372,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17373,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
17374,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
17375,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17376,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17377,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17378,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17379,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17380,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"#!/bin/sh'; \
"
17381,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17382,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17383,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17384,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17385,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17386,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17387,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17388,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17389,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
17390,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
17391,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17392,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17393,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17394,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17395,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17396,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# basic smoke test
"
17397,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17398,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17399,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17400,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17401,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17402,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17403,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17404,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17405,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17406,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17407,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17408,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
17409,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17410,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
17411,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17412,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
17413,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17414,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
17415,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17416,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
17417,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# backwards compatibility shim
"
17418,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
17419,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17420,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# arm64v8
"
17421,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# amd64
"
17422,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# fallback
"
17423,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17424,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
17425,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17426,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17427,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17428,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# basic smoke test
"
17429,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17430,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17431,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17432,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
17433,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17434,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
17435,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17436,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17437,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17438,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17439,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17440,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17441,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17442,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17443,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17444,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
17445,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
17446,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17447,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
17448,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
17449,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17450,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17451,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17452,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17453,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17454,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# basic smoke test
"
17455,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17456,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17457,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17458,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17459,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17460,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17461,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
17462,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17463,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17464,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17465,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17466,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17467,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17468,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17469,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"#!/bin/sh'; \
"
17470,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17471,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17472,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
"
17473,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17474,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17475,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
17476,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17477,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17478,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"#!/bin/sh'; \
"
17479,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17480,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17481,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
17482,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17483,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17484,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17485,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17486,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17487,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17488,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17489,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17490,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
17491,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17492,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17493,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17494,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17495,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17496,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17497,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17498,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17499,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17500,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17501,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17502,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"#!/bin/sh'; \
"
17503,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17504,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17505,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17506,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17507,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17508,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17509,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17510,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17511,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17512,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
17513,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17514,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17515,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17516,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17517,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
17518,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17519,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17520,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17521,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17522,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"#!/bin/sh'; \
"
17523,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17524,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17525,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17526,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17527,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17528,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17529,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17530,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
17531,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17532,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
17533,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17534,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17535,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17536,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17537,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17538,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
17539,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17540,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17541,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17542,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17543,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# backwards compatibility shim
"
17544,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
17545,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17546,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
17547,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
17548,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17549,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17550,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
17551,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17552,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17553,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# basic smoke test
"
17554,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17555,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
17556,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17557,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17558,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17559,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17560,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
17561,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17562,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17563,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17564,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17565,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17566,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
17567,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17568,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17569,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
17570,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17571,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17572,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17573,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17574,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17575,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17576,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17577,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17578,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17579,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
17580,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17581,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17582,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17583,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17584,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17585,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17586,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17587,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
17588,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17589,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17590,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
17591,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# backwards compatibility shim
"
17592,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
17593,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
17594,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17595,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# amd64
"
17596,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# fallback
"
17597,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
17598,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
17599,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17600,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17601,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
17602,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17603,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17604,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# basic smoke test
"
17605,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17606,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17607,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17608,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
17609,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17610,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17611,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17612,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17613,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17614,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
17615,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
17616,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17617,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17618,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17619,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17620,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
17621,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17622,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17623,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17624,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17625,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17626,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17627,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17628,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17629,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17630,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17631,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17632,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# amd64
"
17633,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# fallback
"
17634,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17635,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17636,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
17637,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
17638,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17639,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17640,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
17641,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17642,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17643,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"#!/bin/sh'; \
"
17644,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17645,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17646,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17647,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17648,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17649,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17650,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
17651,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
17652,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
17653,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# basic smoke test
"
17654,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17655,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17656,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
17657,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# backwards compatibility shim
"
17658,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
17659,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
17660,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17661,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# amd64
"
17662,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# fallback
"
17663,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
17664,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
17665,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
17666,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17667,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
17668,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17669,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17670,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# basic smoke test
"
17671,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17672,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17673,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17674,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17675,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17676,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# arm64v8
"
17677,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# amd64
"
17678,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# fallback
"
17679,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17680,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17681,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
17682,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# basic smoke test
"
17683,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17684,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17685,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
17686,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17687,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17688,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
17689,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17690,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
17691,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17692,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17693,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17694,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17695,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
17696,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17697,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17698,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17699,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17700,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
17701,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17702,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17703,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17704,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17705,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17706,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17707,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17708,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
17709,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17710,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17711,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17712,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17713,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17714,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17715,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
17716,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
17717,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17718,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17719,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
17720,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17721,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17722,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
17723,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17724,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17725,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
17726,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17727,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17728,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17729,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17730,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17731,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
17732,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17733,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17734,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
17735,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
17736,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17737,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17738,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
17739,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17740,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17741,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17742,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
17743,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17744,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17745,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# arm64v8
"
17746,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# amd64
"
17747,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# fallback
"
17748,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17749,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17750,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
17751,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
17752,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17753,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17754,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17755,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17756,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://jdk.java.net/
"
17757,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17758,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17759,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17760,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
17761,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
17762,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17763,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
17764,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# amd64
"
17765,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# fallback
"
17766,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17767,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17768,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
17769,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
17770,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17771,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17772,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17773,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17774,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17775,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17776,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17777,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
17778,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17779,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17780,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"#!/bin/sh'; \
"
17781,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17782,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17783,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17784,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17785,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17786,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17787,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17788,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17789,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
17790,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17791,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
17792,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17793,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17794,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17795,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17796,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17797,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
17798,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17799,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17800,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
17801,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
17802,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17803,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17804,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# basic smoke test
"
17805,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17806,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17807,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17808,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17809,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17810,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"#!/bin/bash'; \
"
17811,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
17812,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
17813,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17814,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17815,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17816,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17817,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
17818,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17819,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17820,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
17821,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17822,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# basic smoke test
"
17823,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17824,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17825,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17826,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17827,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17828,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
17829,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17830,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17831,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17832,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17833,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17834,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17835,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17836,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17837,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17838,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
17839,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17840,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17841,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17842,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
17843,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
17844,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17845,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17846,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17847,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17848,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
17849,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17850,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17851,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17852,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17853,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17854,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17855,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17856,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17857,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
17858,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17859,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
17860,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17861,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17862,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
17863,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17864,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
17865,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17866,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17867,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17868,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17869,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"#!/bin/bash'; \
"
17870,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17871,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17872,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17873,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
17874,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17875,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17876,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17877,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
17878,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17879,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17880,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
17881,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
17882,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17883,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
17884,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# basic smoke test
"
17885,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17886,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17887,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
17888,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
17889,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17890,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17891,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
17892,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17893,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17894,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17895,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# basic smoke test
"
17896,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17897,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17898,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17899,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17900,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
17901,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
17902,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
17903,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17904,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17905,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17906,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17907,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
17908,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17909,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
17910,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17911,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17912,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17913,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17914,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17915,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"#!/bin/sh'; \
"
17916,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17917,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17918,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
17919,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
17920,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17921,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"#!/bin/sh'; \
"
17922,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17923,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17924,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17925,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17926,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
17927,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17928,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17929,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17930,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17931,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# backwards compatibility shim
"
17932,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
17933,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17934,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
17935,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17936,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17937,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17938,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# basic smoke test
"
17939,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17940,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17941,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17942,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17943,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
17944,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17945,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17946,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
17947,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
17948,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
17949,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
17950,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
17951,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
17952,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17953,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17954,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17955,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
17956,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17957,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17958,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17959,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
17960,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
17961,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
17962,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17963,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
17964,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
17965,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
17966,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
17967,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17968,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17969,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
17970,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
17971,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
17972,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
17973,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
17974,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
17975,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
17976,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
17977,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
17978,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
17979,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
17980,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
17981,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
17982,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
17983,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
17984,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
17985,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# backwards compatibility shim
"
17986,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
17987,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
17988,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# arm64v8
"
17989,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# amd64
"
17990,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# fallback
"
17991,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
17992,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
17993,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
17994,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
17995,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
17996,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# basic smoke test
"
17997,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
17998,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
17999,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
18000,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18001,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18002,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18003,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18004,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18005,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18006,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18007,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18008,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18009,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18010,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18011,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18012,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18013,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
18014,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
18015,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18016,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18017,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18018,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18019,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18020,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# basic smoke test
"
18021,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18022,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18023,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18024,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18025,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18026,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18027,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
18028,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18029,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18030,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18031,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18032,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18033,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18034,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18035,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18036,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18037,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18038,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18039,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"#!/bin/bash'; \
"
18040,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18041,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18042,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18043,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18044,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18045,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
18046,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18047,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18048,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# arm64v8
"
18049,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# amd64
"
18050,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# fallback
"
18051,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18052,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18053,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18054,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18055,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18056,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# basic smoke test
"
18057,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18058,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18059,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18060,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18061,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
18062,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18063,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18064,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
18065,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18066,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18067,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18068,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18069,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18070,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18071,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18072,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18073,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18074,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18075,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18076,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18077,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18078,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18079,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
18080,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18081,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18082,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18083,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18084,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
18085,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18086,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18087,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
18088,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
18089,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18090,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18091,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
18092,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18093,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18094,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18095,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18096,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18097,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
18098,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18099,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18100,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18101,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
18102,58ba04f37a289057ac53b4376773b03227dceb77,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18103,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18104,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18105,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
18106,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18107,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18108,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18109,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
18110,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18111,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
18112,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18113,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18114,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18115,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
18116,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18117,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18118,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
18119,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18120,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18121,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18122,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18123,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18124,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18125,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18126,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18127,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# backwards compatibility shim
"
18128,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
18129,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18130,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
18131,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
18132,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18133,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18134,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18135,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18136,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18137,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# basic smoke test
"
18138,f11f75767926eb1e650b448690e15cbacc2d1b9f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18139,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18140,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
18141,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18142,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
18143,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# basic smoke test
"
18144,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18145,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18146,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
18147,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
18148,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18149,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
18150,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
18151,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18152,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# basic smoke test
"
18153,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18154,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18155,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
18156,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18157,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18158,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
18159,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18160,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18161,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"#!/bin/sh'; \
"
18162,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18163,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18164,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
18165,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18166,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18167,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18168,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18169,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18170,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
18171,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18172,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
18173,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18174,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18175,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
18176,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18177,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18178,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18179,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
18180,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18181,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18182,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18183,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18184,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
18185,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# backwards compatibility shim
"
18186,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
18187,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18188,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# amd64
"
18189,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# fallback
"
18190,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18191,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
18192,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18193,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18194,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18195,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# basic smoke test
"
18196,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18197,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18198,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18199,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18200,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18201,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18202,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18203,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18204,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18205,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18206,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18207,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18208,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
18209,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
18210,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18211,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18212,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18213,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18214,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18215,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# basic smoke test
"
18216,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18217,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18218,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18219,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18220,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18221,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18222,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18223,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18224,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18225,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18226,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18227,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18228,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
18229,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18230,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18231,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
18232,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
18233,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18234,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18235,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
18236,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18237,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18238,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18239,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18240,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18241,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18242,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18243,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"#!/bin/bash'; \
"
18244,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18245,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18246,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
18247,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18248,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
18249,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18250,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18251,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18252,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18253,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
18254,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18255,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
18256,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18257,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18258,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
18259,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18260,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18261,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
18262,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18263,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18264,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18265,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18266,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18267,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
18268,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18269,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18270,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
18271,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18272,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18273,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18274,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18275,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18276,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18277,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18278,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18279,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18280,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18281,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"#!/bin/sh'; \
"
18282,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18283,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18284,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18285,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18286,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18287,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18288,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18289,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18290,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
18291,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
18292,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18293,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18294,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18295,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18296,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18297,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18298,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18299,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18300,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18301,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
18302,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18303,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18304,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18305,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18306,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
18307,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18308,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18309,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18310,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18311,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18312,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18313,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18314,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18315,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# backwards compatibility shim
"
18316,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18317,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18318,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
18319,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18320,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18321,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18322,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# basic smoke test
"
18323,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18324,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18325,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18326,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18327,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18328,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"#!/bin/bash'; \
"
18329,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18330,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18331,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18332,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18333,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18334,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18335,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18336,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18337,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18338,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18339,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18340,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18341,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18342,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18343,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18344,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18345,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18346,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
18347,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18348,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18349,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
18350,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
18351,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18352,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# amd64
"
18353,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# fallback
"
18354,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
18355,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18356,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# basic smoke test
"
18357,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18358,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18359,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18360,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18361,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
18362,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18363,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18364,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18365,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18366,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
18367,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18368,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18369,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
18370,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18371,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
18372,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18373,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18374,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18375,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18376,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18377,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# backwards compatibility shim
"
18378,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
18379,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18380,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
18381,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
18382,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18383,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# basic smoke test
"
18384,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18385,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18386,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18387,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18388,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"#!/bin/sh'; \
"
18389,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18390,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18391,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18392,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18393,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18394,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# backwards compatibility shim
"
18395,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18396,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18397,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
18398,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18399,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18400,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18401,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# basic smoke test
"
18402,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18403,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18404,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18405,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
18406,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18407,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18408,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18409,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
18410,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18411,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18412,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18413,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# backwards compatibility shim
"
18414,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
18415,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18416,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
18417,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18418,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# basic smoke test
"
18419,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18420,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18421,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
18422,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18423,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18424,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18425,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18426,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18427,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18428,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18429,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18430,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18431,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18432,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18433,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18434,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18435,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18436,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18437,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18438,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18439,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"#!/bin/sh'; \
"
18440,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18441,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18442,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18443,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18444,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18445,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18446,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
18447,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18448,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18449,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"#!/bin/sh'; \
"
18450,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18451,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18452,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18453,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18454,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18455,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18456,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18457,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
18458,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18459,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
18460,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18461,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
18462,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18463,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
18464,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18465,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18466,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
18467,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18468,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"#!/bin/sh'; \
"
18469,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18470,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18471,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18472,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
18473,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18474,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18475,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18476,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18477,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18478,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18479,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18480,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18481,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18482,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18483,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18484,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18485,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"#!/bin/sh'; \
"
18486,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18487,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18488,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18489,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18490,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18491,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18492,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18493,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
18494,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
18495,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
18496,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18497,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18498,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18499,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
18500,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18501,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18502,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
18503,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18504,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)
"
18505,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# basic smoke test
"
18506,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18507,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18508,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18509,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
18510,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
18511,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
18512,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18513,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18514,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18515,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
"
18516,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18517,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18518,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18519,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18520,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18521,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18522,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# backwards compatibility shim
"
18523,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
18524,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18525,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
18526,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18527,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# basic smoke test
"
18528,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18529,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18530,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18531,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18532,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
18533,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18534,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18535,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18536,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18537,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18538,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18539,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6

"
18540,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18541,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18542,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"#!/bin/sh'; \
"
18543,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18544,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18545,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18546,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18547,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18548,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18549,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18550,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18551,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
18552,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18553,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18554,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# arm64v8
"
18555,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# amd64
"
18556,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# fallback
"
18557,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18558,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18559,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18560,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18561,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18562,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# basic smoke test
"
18563,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18564,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18565,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18566,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18567,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18568,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"#!/bin/bash'; \
"
18569,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18570,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18571,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18572,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
18573,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
18574,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18575,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
18576,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18577,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://jdk.java.net/
"
18578,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
18579,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18580,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
18581,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18582,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18583,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
18584,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18585,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18586,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
18587,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18588,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18589,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
18590,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18591,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18592,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18593,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18594,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18595,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18596,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18597,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
18598,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18599,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18600,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# arm64v8
"
18601,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# amd64
"
18602,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# fallback
"
18603,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18604,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18605,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
18606,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18607,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18608,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18609,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18610,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
18611,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18612,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18613,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18614,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18615,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18616,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18617,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18618,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18619,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18620,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18621,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18622,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
18623,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18624,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18625,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18626,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
18627,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18628,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18629,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18630,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18631,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18632,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18633,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
18634,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18635,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18636,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18637,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18638,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18639,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18640,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18641,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18642,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18643,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18644,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18645,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18646,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18647,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18648,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18649,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18650,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
18651,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18652,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
18653,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18654,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18655,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18656,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18657,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
18658,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
18659,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18660,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
18661,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
18662,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18663,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18664,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18665,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18666,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18667,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# basic smoke test
"
18668,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18669,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
18670,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
18671,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18672,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18673,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
18674,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18675,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18676,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
18677,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18678,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18679,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18680,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18681,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18682,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18683,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18684,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18685,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18686,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18687,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
18688,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18689,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18690,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
18691,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18692,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18693,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18694,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18695,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18696,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18697,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18698,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18699,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18700,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18701,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"#!/bin/sh'; \
"
18702,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18703,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18704,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18705,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18706,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18707,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18708,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18709,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18710,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
18711,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18712,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18713,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
18714,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18715,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18716,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"#!/bin/sh'; \
"
18717,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18718,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18719,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
18720,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18721,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18722,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18723,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18724,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18725,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18726,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
18727,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18728,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
18729,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18730,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18731,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18732,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
18733,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18734,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18735,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18736,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18737,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18738,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# backwards compatibility shim
"
18739,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18740,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18741,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
18742,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18743,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18744,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18745,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# basic smoke test
"
18746,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18747,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18748,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18749,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
18750,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
18751,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
18752,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
18753,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
18754,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18755,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18756,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18757,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18758,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18759,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# basic smoke test
"
18760,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18761,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18762,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
18763,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
18764,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18765,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
18766,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
18767,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18768,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18769,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18770,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18771,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18772,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# basic smoke test
"
18773,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18774,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18775,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18776,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18777,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18778,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
18779,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18780,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18781,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18782,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18783,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18784,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18785,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18786,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18787,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18788,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
18789,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18790,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18791,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18792,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
18793,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18794,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18795,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18796,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18797,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18798,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18799,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18800,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
18801,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
18802,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18803,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
18804,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
18805,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18806,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18807,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
18808,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18809,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18810,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"#!/bin/sh'; \
"
18811,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18812,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18813,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found
"
18814,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)
"
18815,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18816,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18817,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18818,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18819,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18820,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18821,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18822,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18823,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18824,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18825,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
18826,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18827,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18828,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18829,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://jdk.java.net/
"
18830,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18831,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18832,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18833,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
18834,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
18835,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18836,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
18837,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
18838,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
18839,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18840,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18841,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
18842,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
18843,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18844,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
18845,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18846,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18847,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18848,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18849,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
18850,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
18851,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18852,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18853,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
18854,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18855,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18856,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
18857,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18858,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
18859,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# backwards compatibility shim
"
18860,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
18861,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18862,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
18863,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18864,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18865,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18866,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# basic smoke test
"
18867,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18868,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18869,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18870,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18871,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18872,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"#!/bin/sh'; \
"
18873,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18874,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18875,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18876,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18877,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18878,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18879,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18880,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18881,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18882,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
18883,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
18884,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
18885,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18886,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18887,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18888,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18889,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18890,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
18891,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
18892,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586
"
18893,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18894,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
18895,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18896,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18897,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18898,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18899,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18900,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18901,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
18902,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18903,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18904,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"#!/bin/sh'; \
"
18905,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18906,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18907,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18908,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18909,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18910,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18911,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18912,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18913,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18914,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18915,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"#!/bin/sh'; \
"
18916,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18917,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18918,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18919,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
18920,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18921,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18922,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# arm64v8
"
18923,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# amd64
"
18924,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# fallback
"
18925,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18926,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
18927,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18928,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18929,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18930,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# basic smoke test
"
18931,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
18932,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
18933,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# Default to UTF-8 file.encoding
"
18934,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# backwards compatibility shim
"
18935,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
18936,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
18937,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
18938,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# arm64v8
"
18939,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# amd64
"
18940,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# fallback
"
18941,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
18942,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
18943,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
18944,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
18945,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"#!/usr/bin/env bash'; \
"
18946,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
18947,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
18948,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# basic smoke test
"
18949,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18950,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
18951,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18952,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
18953,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
18954,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
18955,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
18956,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
18957,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
18958,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
18959,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
18960,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
18961,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
18962,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
18963,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18964,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
18965,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
18966,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18967,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"#!/bin/sh'; \
"
18968,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18969,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18970,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18971,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18972,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18973,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18974,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18975,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
18976,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
18977,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18978,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"#!/bin/sh'; \
"
18979,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
18980,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
18981,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
18982,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
18983,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
18984,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18985,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18986,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
18987,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
18988,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
18989,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
18990,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18991,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18992,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
18993,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
18994,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# TODO signature? checksum?
"
18995,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
18996,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
18997,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
18998,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
18999,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19000,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19001,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19002,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
19003,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19004,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
19005,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
"
19006,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19007,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19008,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
19009,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
19010,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19011,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"#!/bin/sh'; \
"
19012,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19013,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19014,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19015,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19016,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19017,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19018,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19019,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
19020,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19021,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19022,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"#!/bin/sh'; \
"
19023,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19024,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19025,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
19026,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19027,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19028,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19029,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19030,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19031,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19032,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# backwards compatibility shim
"
19033,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19034,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19035,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19036,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19037,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19038,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19039,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# basic smoke test
"
19040,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19041,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19042,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19043,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19044,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19045,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
19046,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19047,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19048,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
19049,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19050,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19051,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
19052,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19053,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19054,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19055,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19056,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19057,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19058,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19059,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19060,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
19061,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19062,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
19063,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19064,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19065,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19066,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# backwards compatibility shim
"
19067,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19068,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19069,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19070,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19071,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19072,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19073,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# basic smoke test
"
19074,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19075,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19076,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19077,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19078,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19079,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
"
19080,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19081,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19082,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
19083,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
19084,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19085,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19086,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
19087,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19088,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
19089,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19090,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
19091,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19092,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19093,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19094,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
19095,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19096,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19097,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19098,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
19099,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19100,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19101,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19102,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19103,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19104,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19105,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
19106,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19107,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
19108,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
19109,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19110,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
19111,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19112,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19113,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19114,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# basic smoke test
"
19115,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19116,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19117,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
19118,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
19119,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19120,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"#!/bin/sh'; \
"
19121,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19122,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19123,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19124,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19125,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19126,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19127,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19128,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
19129,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19130,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
19131,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19132,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19133,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
19134,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19135,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19136,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
19137,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19138,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19139,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19140,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19141,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19142,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19143,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19144,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19145,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19146,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# http://jdk.java.net/
"
19147,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19148,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19149,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19150,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
19151,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# backwards compatibility shim
"
19152,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19153,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19154,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
19155,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# arm64v8
"
19156,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# amd64
"
19157,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# fallback
"
19158,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19159,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19160,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19161,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19162,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
19163,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19164,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19165,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# basic smoke test
"
19166,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19167,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19168,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19169,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
19170,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19171,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19172,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19173,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
19174,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19175,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"#!/bin/sh'; \
"
19176,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19177,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19178,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

"
19179,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19180,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19181,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"#!/bin/sh'; \
"
19182,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19183,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19184,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19185,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19186,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19187,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19188,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19189,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19190,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19191,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
19192,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19193,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19194,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"#!/bin/sh'; \
"
19195,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19196,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19197,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
19198,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19199,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19200,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19201,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19202,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19203,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19204,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19205,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19206,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
19207,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19208,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19209,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19210,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19211,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
19212,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19213,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19214,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
19215,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19216,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19217,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# backwards compatibility shim
"
19218,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
"
19219,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19220,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
19221,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19222,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19223,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19224,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# basic smoke test
"
19225,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19226,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19227,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
19228,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
19229,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19230,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19231,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19232,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19233,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# http://jdk.java.net/
"
19234,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19235,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19236,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19237,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
19238,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19239,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19240,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19241,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
19242,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19243,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
19244,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19245,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
19246,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
19247,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19248,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19249,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19250,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
19251,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
19252,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19253,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19254,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# basic smoke test
"
19255,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19256,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19257,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
19258,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
19259,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19260,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19261,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
19262,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19263,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
19264,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19265,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
19266,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19267,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19268,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"#!/bin/sh'; \
"
19269,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19270,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19271,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19272,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19273,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19274,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19275,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19276,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19277,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19278,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19279,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
19280,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19281,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19282,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19283,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
19284,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19285,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19286,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
19287,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19288,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19289,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"#!/bin/sh'; \
"
19290,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19291,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19292,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19293,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19294,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19295,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19296,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19297,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19298,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19299,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19300,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19301,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19302,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19303,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# Default to UTF-8 file.encoding
"
19304,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# backwards compatibility shim
"
19305,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19306,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19307,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
19308,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# amd64
"
19309,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# fallback
"
19310,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19311,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19312,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19313,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19314,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"#!/usr/bin/env bash'; \
"
19315,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19316,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19317,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# basic smoke test
"
19318,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19319,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19320,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
19321,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19322,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19323,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19324,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
19325,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19326,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19327,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19328,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19329,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19330,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19331,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19332,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19333,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19334,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# basic smoke test
"
19335,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
19336,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
19337,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19338,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19339,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19340,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19341,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19342,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"#!/bin/bash'; \
"
19343,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19344,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19345,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19346,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
19347,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19348,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
19349,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19350,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19351,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
19352,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19353,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19354,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19355,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19356,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19357,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19358,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19359,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19360,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19361,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19362,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19363,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
19364,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19365,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19366,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19367,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19368,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9

"
19369,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19370,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19371,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"#!/bin/sh'; \
"
19372,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19373,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19374,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19375,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19376,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19377,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19378,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19379,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

# Default to UTF-8 file.encoding
"
19380,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19381,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
19382,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19383,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19384,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19385,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# http://jdk.java.net/
"
19386,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19387,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19388,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19389,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
19390,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19391,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19392,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19393,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19394,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19395,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
19396,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19397,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19398,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19399,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19400,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
19401,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory
"
19402,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19403,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# Default to UTF-8 file.encoding
"
19404,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >
"
19405,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
19406,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# arm64v8
"
19407,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# amd64
"
19408,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# fallback
"
19409,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19410,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19411,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle
"
19412,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# basic smoke test
"
19413,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19414,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19415,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19416,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# Default to UTF-8 file.encoding
"
19417,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# backwards compatibility shim
"
19418,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19419,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19420,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19421,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19422,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19423,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19424,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"#!/usr/bin/env bash'; \
"
19425,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19426,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19427,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# basic smoke test
"
19428,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19429,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??

"
19430,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# http://jdk.java.net/
"
19431,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19432,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
19433,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
19434,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19435,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19436,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19437,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19438,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# backwards compatibility shim
"
19439,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19440,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19441,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19442,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19443,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19444,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19445,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
19446,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19447,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19448,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# basic smoke test
"
19449,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19450,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7

# Default to UTF-8 file.encoding
"
19451,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19452,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"#!/bin/sh'; \
"
19453,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19454,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
19455,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19456,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19457,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19458,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19459,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19460,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19461,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
19462,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19463,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
19464,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
19465,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19466,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19467,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# basic smoke test
"
19468,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19469,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19470,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
19471,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19472,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19473,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
19474,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19475,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# TODO signature? checksum?
"
19476,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19477,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19478,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19479,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
19480,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19481,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19482,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19483,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19484,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19485,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19486,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# basic smoke test
"
19487,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19488,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19489,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19490,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
19491,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
19492,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19493,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"#!/bin/sh'; \
"
19494,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19495,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
19496,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19497,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19498,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19499,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19500,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
19501,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19502,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# http://jdk.java.net/
"
19503,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms.""

"
19504,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341
"
19505,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# basic smoke test
"
19506,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19507,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19508,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
19509,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19510,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19511,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"#!/bin/sh'; \
"
19512,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19513,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872
"
19514,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19515,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19516,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19517,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19518,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# see CA_CERTIFICATES_JAVA_VERSION notes above
"
19519,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19520,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19521,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19522,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
19523,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
19524,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19525,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19526,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19527,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19528,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19529,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19530,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19531,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19532,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# basic smoke test
"
19533,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19534,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

# Default to UTF-8 file.encoding
"
19535,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19536,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"#!/bin/sh'; \
"
19537,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# https://bugs.alpinelinux.org/issues/10126
"
19538,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19539,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19540,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19541,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19542,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
19543,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19544,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19545,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19546,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
"
19547,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19548,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# TODO signature? checksum?
"
19549,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19550,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19551,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8

"
19552,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19553,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19554,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"#!/bin/sh'; \
"
19555,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19556,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19557,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19558,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19559,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19560,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19561,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19562,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19563,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
19564,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19565,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh""
"
19566,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# arm64v8
"
19567,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# amd64
"
19568,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# fallback
"
19569,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19570,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19571,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19572,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19573,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19574,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# basic smoke test
"
19575,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19576,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19577,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19578,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
19579,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19580,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19581,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19582,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19583,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19584,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19585,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# basic smoke test
"
19586,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19587,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19588,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19589,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19590,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# backwards compatibility shim
"
19591,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19592,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19593,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19594,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19595,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19596,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19597,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# basic smoke test
"
19598,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19599,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19600,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19601,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10

"
19602,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# Default to UTF-8 file.encoding
"
19603,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19604,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"#!/bin/sh'; \
"
19605,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19606,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19607,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found
"
19608,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19609,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19610,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19611,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19612,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19613,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
19614,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19615,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19616,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"#!/bin/sh'; \
"
19617,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19618,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19619,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19620,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19621,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19622,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19623,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19624,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19625,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19626,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19627,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle
"
19628,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19629,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19630,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19631,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19632,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
"
19633,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19634,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19635,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19636,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# backwards compatibility shim
"
19637,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
19638,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19639,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
"
19640,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
"
19641,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19642,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19643,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19644,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19645,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19646,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# basic smoke test
"
19647,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19648,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19649,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
19650,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19651,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19652,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19653,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# http://jdk.java.net/
"
19654,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19655,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19656,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
19657,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19658,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19659,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
19660,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19661,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19662,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19663,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19664,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19665,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19666,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19667,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19668,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12
"
19669,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19670,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# http://jdk.java.net/
"
19671,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19672,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19673,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19674,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19675,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# backwards compatibility shim
"
19676,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
19677,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19678,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19679,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19680,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19681,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19682,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"#!/usr/bin/env bash'; \
"
19683,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19684,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19685,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# basic smoke test
"
19686,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077
"
19687,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
"
19688,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://jdk.java.net/
"
19689,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
"
19690,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341
"
19691,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# basic smoke test
"
19692,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell
"
19693,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19694,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11

"
19695,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19696,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19697,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"#!/bin/sh'; \
"
19698,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19699,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)
"
19700,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19701,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19702,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19703,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell
"
19704,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues
"
19705,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
"
19706,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()""
"
19707,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/ojdkbuild/ojdkbuild/releases
"
19708,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied.""
"
19709,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >
"
19710,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >

"
19711,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19712,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# utilities for keeping Debian and OpenJDK CA certificates in sync
"
19713,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# Default to UTF-8 file.encoding
"
19714,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# backwards compatibility shim
"
19715,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]

# https://adoptopenjdk.net/upstream.html
"
19716,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246

"
19717,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07
"
19718,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)
"
19719,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?
"
19720,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29
"
19721,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"#!/usr/bin/env bash'; \
"
19722,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)
"
19723,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
"
19724,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# basic smoke test
"
19725,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)
"
19726,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

"
19727,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy.

"
19728,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# Default to UTF-8 file.encoding
"
19729,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed
"
19730,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"#!/bin/sh'; \
"
19731,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
"
19732,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect
"
19733,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
"
19734,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# ... and verify that it actually worked for one of the alternatives we care about
"
19735,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!
"
