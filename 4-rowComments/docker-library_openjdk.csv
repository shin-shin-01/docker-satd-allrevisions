,CommitID,Dockerfile,Comment
0,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,# Default to UTF-8 file.encoding
3,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,"# this ""case"" statement is generated via ""update.sh"""
5,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,# basic smoke test
9,566a953c64f0d40b247eea76872d04d4b84f5481,/Dockerfile-oracle-oraclelinux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
20,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
21,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
22,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
23,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
24,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
25,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
26,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
27,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
28,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
29,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
30,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
31,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
32,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# arm64v8
33,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# amd64
34,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# fallback
35,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
36,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
37,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
38,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
39,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
40,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,# basic smoke test
41,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
42,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
43,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
44,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
45,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
46,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
47,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
48,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
49,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
50,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
51,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
52,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
53,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
54,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
55,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
56,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
57,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
58,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
59,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
60,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
61,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
62,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
63,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
64,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
65,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
66,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
67,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
68,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
69,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
70,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
71,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# backwards compatibility shim
72,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
73,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
74,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
75,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
76,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
77,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
78,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
79,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
80,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
81,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
82,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,# basic smoke test
83,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
84,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
85,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
86,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
87,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
88,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
89,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
90,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
91,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
92,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
93,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
94,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
95,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
96,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
97,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
98,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
99,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
100,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
101,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
102,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
103,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
104,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
105,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,# basic smoke test
106,aed2d23dbcc88926f8aaab61b3ea4f68506702af,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
107,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
108,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
109,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
110,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,# basic smoke test
111,5f603d0b657d0a87212ad16d304a1ce5e2533d82,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
112,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
113,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
114,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
115,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
116,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
117,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
118,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
119,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
120,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
121,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
122,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
123,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
124,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
125,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
126,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
127,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
128,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
129,c394ed4d70c8c1d6962955aa23be0555671ce4c9,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
130,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
131,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
132,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
133,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
134,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
135,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
136,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
137,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
138,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
139,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,#!/bin/sh'; \
140,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
141,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
142,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
143,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
144,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
145,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
146,4365c863956250d758341b86035862b111269ed9,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
147,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
148,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
149,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
150,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
151,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
152,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
153,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
154,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
155,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
156,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
157,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
158,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
159,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
160,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
161,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
162,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
163,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
164,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,# basic smoke test
165,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
166,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
167,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
168,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
169,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
170,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,#!/bin/sh'; \
171,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
172,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
173,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
174,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
175,c34391ea981c804c097981bad8403ec4bd934285,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
176,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
177,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
178,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
179,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
180,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
181,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
182,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
183,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
184,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
185,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,# basic smoke test
186,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
187,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
188,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
189,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
190,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
191,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
192,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
193,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# amd64
194,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# fallback
195,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
196,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
197,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
198,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
199,754d834164985ed1852aad4bb6c86ae199683ff8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
200,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
201,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
202,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
203,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
204,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
205,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
206,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
207,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
208,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
209,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
210,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
211,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
212,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
213,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
214,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,#!/bin/sh'; \
215,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
216,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
217,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
218,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
219,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
220,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
221,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
222,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
223,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
224,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,# basic smoke test
225,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
226,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
227,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
228,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
229,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
230,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# backwards compatibility shim
231,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
232,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
233,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
234,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# arm64v8
235,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# amd64
236,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# fallback
237,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
238,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
239,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
240,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
241,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
242,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,# basic smoke test
243,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
244,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
245,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
246,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# backwards compatibility shim
247,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
248,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
249,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
250,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
251,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
252,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
253,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
254,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,# basic smoke test
255,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
256,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
257,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
258,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
259,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
260,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
261,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,#!/bin/sh'; \
262,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
263,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
264,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
265,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
266,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
267,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
268,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
269,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
270,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
271,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
272,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
273,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
274,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,#!/bin/sh'; \
275,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
276,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
277,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
278,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
279,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
280,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
281,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
282,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
283,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
284,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
285,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
286,54c64cf47d2b705418feb68b811419a223c5a040,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
287,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
288,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
289,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
290,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
291,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
292,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
293,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
294,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
295,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,#!/bin/sh'; \
296,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
297,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
298,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
299,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
300,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
301,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
302,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
303,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
304,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
305,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
306,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
307,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
308,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,# basic smoke test
309,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
310,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
311,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
312,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
313,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
314,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
315,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
316,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
317,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
318,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
319,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
320,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
321,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
322,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# backwards compatibility shim
323,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
324,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
325,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
326,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
327,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
328,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
329,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
330,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,# basic smoke test
331,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
332,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
333,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
334,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
335,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
336,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
337,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
338,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
339,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
340,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
341,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# backwards compatibility shim
342,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
343,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
344,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
345,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
346,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
347,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
348,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
349,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,# basic smoke test
350,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
351,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
352,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
353,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
354,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
355,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
356,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
357,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
358,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
359,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
360,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
361,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
362,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
363,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
364,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
365,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,#!/bin/sh'; \
366,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
367,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
368,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
369,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
370,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
371,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
372,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
373,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
374,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
375,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
376,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
377,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
378,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
379,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
380,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
381,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
382,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# arm64v8
383,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# amd64
384,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# fallback
385,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
386,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
387,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
388,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,# basic smoke test
389,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
390,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
391,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
392,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
393,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# backwards compatibility shim
394,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
395,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
396,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
397,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
398,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# arm64v8
399,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# amd64
400,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# fallback
401,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
402,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
403,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
404,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
405,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
406,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
407,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
408,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,# basic smoke test
409,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
410,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
411,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
412,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# backwards compatibility shim
413,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
414,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
415,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
416,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# amd64
417,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# fallback
418,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
419,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
420,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
421,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
422,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
423,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,# basic smoke test
424,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
425,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
426,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
427,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
428,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
429,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
430,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
431,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
432,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
433,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
434,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
435,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
436,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
437,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
438,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
439,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
440,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# arm64v8
441,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# amd64
442,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# fallback
443,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
444,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
445,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,# basic smoke test
446,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
447,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
448,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
449,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
450,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
451,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,#!/bin/sh'; \
452,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
453,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
454,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
455,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
456,0467df283134a79840c25808093c00f7c94b9a88,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
457,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
458,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
459,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
460,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
461,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
462,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
463,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
464,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
465,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,#!/bin/sh'; \
466,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
467,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
468,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
469,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
470,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
471,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
472,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
473,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
474,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
475,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
476,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
477,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
478,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
479,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
480,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
481,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
482,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
483,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
484,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
485,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
486,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
487,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
488,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
489,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
490,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
491,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
492,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
493,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
494,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
495,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
496,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
497,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
498,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
499,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
500,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
501,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
502,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
503,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# arm64v8
504,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# amd64
505,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# fallback
506,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
507,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
508,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,# basic smoke test
509,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
510,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
511,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
512,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,# Default to UTF-8 file.encoding
513,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,# backwards compatibility shim
514,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
515,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
516,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
517,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# this ""case"" statement is generated via ""update.sh"""
518,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
519,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
520,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# TODO strip ""demo"" and ""man"" folders?"
521,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
522,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,#!/usr/bin/env bash'; \
523,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
524,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
525,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,# basic smoke test
526,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
527,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
528,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
529,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
530,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
531,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
532,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# arm64v8
533,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# amd64
534,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# fallback
535,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
536,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
537,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,# basic smoke test
538,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
539,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
540,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
541,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
542,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
543,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
544,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
545,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
546,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
547,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
548,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
549,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
550,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
551,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
552,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
553,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
554,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,# basic smoke test
555,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
556,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
557,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
558,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
559,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
560,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
561,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# amd64
562,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# fallback
563,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
564,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
565,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
566,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,# basic smoke test
567,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
568,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
569,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
570,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,# backwards compatibility shim
571,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
572,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
573,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
574,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
575,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
576,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,# basic smoke test
577,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
578,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
579,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-servercore.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
580,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
581,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-servercore.template,# https://jdk.java.net/
582,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-servercore.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
583,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
584,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
585,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
586,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
587,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
588,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
589,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
590,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
591,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
592,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
593,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
594,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
595,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
596,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
597,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
598,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
599,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
600,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
601,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
602,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
603,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
604,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
605,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
606,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
607,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
608,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
609,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
610,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,#!/bin/sh'; \
611,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
612,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
613,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
614,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
615,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
616,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
617,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
618,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
619,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
620,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
621,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
622,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
623,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
624,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
625,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
626,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
627,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
628,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
629,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
630,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
631,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
632,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
633,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
634,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
635,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
636,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
637,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
638,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
639,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
640,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
641,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# amd64
642,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# fallback
643,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
644,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
645,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
646,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
647,754d834164985ed1852aad4bb6c86ae199683ff8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
648,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
649,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
650,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
651,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
652,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,#!/bin/sh'; \
653,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
654,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
655,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
656,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
657,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
658,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
659,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
660,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
661,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
662,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
663,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
664,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
665,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
666,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
667,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
668,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
669,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
670,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
671,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# arm64v8
672,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# amd64
673,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# fallback
674,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
675,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
676,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
677,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,# basic smoke test
678,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
679,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
680,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
681,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
682,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
683,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
684,2b59d89bfa05b13f397b7e30562d6ab6ca177da0,/openjdk-8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
685,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
686,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
687,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
688,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
689,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
690,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
691,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
692,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
693,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
694,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
695,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
696,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
697,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
698,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
699,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
700,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
701,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
702,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
703,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
704,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
705,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
706,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
707,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
708,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
709,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
710,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
711,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# backwards compatibility shim
712,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
713,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
714,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
715,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
716,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# amd64
717,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# fallback
718,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
719,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
720,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
721,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
722,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
723,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
724,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
725,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/buster/Dockerfile,# basic smoke test
726,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
727,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
728,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
729,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
730,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
731,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
732,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# arm64v8
733,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# amd64
734,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# fallback
735,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
736,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
737,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
738,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
739,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
740,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,# basic smoke test
741,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
742,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
743,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-windows.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
744,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
745,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-windows.template,# https://jdk.java.net/
746,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-windows.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
747,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
748,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
749,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
750,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
751,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
752,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
753,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
754,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
755,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
756,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
757,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
758,8f86e66f070a110b2648004cc732683fb5224ed3,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
759,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
760,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
761,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
762,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
763,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
764,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
765,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
766,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
767,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
768,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
769,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
770,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
771,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
772,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
773,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
774,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
775,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# backwards compatibility shim
776,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
777,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
778,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
779,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# amd64
780,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# fallback
781,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
782,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
783,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
784,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
785,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
786,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,# basic smoke test
787,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
788,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
789,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
790,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
791,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
792,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
793,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
794,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
795,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
796,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
797,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
798,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
799,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
800,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
801,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
802,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
803,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
804,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
805,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
806,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
807,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
808,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
809,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
810,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
811,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
812,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,#!/bin/sh'; \
813,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
814,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
815,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
816,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
817,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
818,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
819,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
820,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
821,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
822,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
823,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
824,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# backwards compatibility shim
825,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
826,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
827,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
828,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# arm64v8
829,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# amd64
830,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# fallback
831,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
832,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
833,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
834,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
835,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
836,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,# basic smoke test
837,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
838,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
839,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
840,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
841,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
842,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
843,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
844,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
845,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
846,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
847,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
848,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
849,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
850,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
851,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
852,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
853,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# backwards compatibility shim
854,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
855,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
856,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
857,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# amd64
858,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# fallback
859,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
860,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
861,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
862,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
863,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
864,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,# basic smoke test
865,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
866,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
867,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
868,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
869,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
870,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,#!/bin/sh'; \
871,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
872,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
873,504b1cde5b2a8649731b3a0b73e1280cc790c61e,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
874,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
875,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
876,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
877,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
878,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
879,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
880,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
881,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
882,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
883,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
884,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
885,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
886,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
887,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
888,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
889,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
890,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
891,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
892,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
893,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
894,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
895,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
896,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
897,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
898,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
899,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
900,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,#!/bin/sh'; \
901,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
902,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
903,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
904,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
905,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
906,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
907,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
908,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
909,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
910,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
911,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
912,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
913,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
914,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
915,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
916,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,#!/bin/sh'; \
917,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
918,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
919,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
920,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
921,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
922,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
923,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
924,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
925,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
926,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
927,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
928,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
929,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
930,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
931,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
932,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
933,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
934,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
935,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
936,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
937,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
938,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
939,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
940,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,#!/bin/sh'; \
941,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
942,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
943,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
944,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
945,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
946,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
947,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
948,554ff38a160f896ddd7f0fdca1cd34817e253a56,/Dockerfile-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
949,554ff38a160f896ddd7f0fdca1cd34817e253a56,/Dockerfile-oracle.template,# Default to UTF-8 file.encoding
950,554ff38a160f896ddd7f0fdca1cd34817e253a56,/Dockerfile-oracle.template,# https://jdk.java.net/
951,554ff38a160f896ddd7f0fdca1cd34817e253a56,/Dockerfile-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
952,554ff38a160f896ddd7f0fdca1cd34817e253a56,/Dockerfile-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
953,554ff38a160f896ddd7f0fdca1cd34817e253a56,/Dockerfile-oracle.template,# basic smoke test
954,554ff38a160f896ddd7f0fdca1cd34817e253a56,/Dockerfile-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
955,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
956,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
957,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
958,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
959,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,"# this ""case"" statement is generated via ""update.sh"""
960,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
961,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
962,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
963,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,# basic smoke test
964,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
965,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
966,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
967,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# backwards compatibility shim
968,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
969,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
970,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
971,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
972,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
973,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
974,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
975,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,# basic smoke test
976,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
977,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
978,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
979,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
980,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
981,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
982,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,#!/bin/sh'; \
983,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
984,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
985,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
986,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
987,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
988,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
989,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
990,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
991,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
992,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
993,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
994,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
995,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
996,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
997,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
998,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
999,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1000,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1001,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1002,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1003,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1004,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1005,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
1006,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1007,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,#!/bin/sh'; \
1008,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1009,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1010,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1011,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1012,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1013,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1014,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1015,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1016,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
1017,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# backwards compatibility shim
1018,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1019,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1020,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1021,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1022,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1023,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1024,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1025,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
1026,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1027,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1028,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,# basic smoke test
1029,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1030,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1031,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1032,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
1033,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1034,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,#!/bin/sh'; \
1035,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1036,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1037,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1038,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1039,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1040,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1041,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1042,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1043,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1044,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1045,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
1046,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1047,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,#!/bin/sh'; \
1048,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1049,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1050,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1051,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1052,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1053,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1054,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1055,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1056,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1057,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1058,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1059,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1060,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1061,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1062,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1063,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1064,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1065,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1066,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1067,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1068,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1069,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1070,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# backwards compatibility shim
1071,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1072,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1073,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1074,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1075,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1076,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1077,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1078,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
1079,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1080,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1081,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/slim/Dockerfile,# basic smoke test
1082,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1083,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1084,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
1085,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1086,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1087,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
1088,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# amd64
1089,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# fallback
1090,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1091,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1092,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
1093,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
1094,754d834164985ed1852aad4bb6c86ae199683ff8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1095,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1096,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1097,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# backwards compatibility shim
1098,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1099,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1100,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1101,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1102,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1103,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1104,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1105,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,# basic smoke test
1106,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1107,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1108,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1109,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1110,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
1111,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1112,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,#!/bin/sh'; \
1113,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1114,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1115,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1116,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
1117,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1118,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1119,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1120,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1121,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1122,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1123,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1124,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1125,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1126,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,#!/bin/sh'; \
1127,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1128,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1129,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1130,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1131,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1132,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1133,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1134,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1135,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1136,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1137,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1138,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1139,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# backwards compatibility shim
1140,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1141,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1142,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1143,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
1144,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
1145,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1146,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1147,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
1148,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1149,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1150,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/Dockerfile,# basic smoke test
1151,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1152,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-oracle.template,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1153,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-oracle.template,# https://jdk.java.net/
1154,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1155,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1156,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-oracle.template,# basic smoke test
1157,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1158,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1159,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1160,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
1161,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1162,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,#!/bin/sh'; \
1163,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1164,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1165,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1166,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1167,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1168,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1169,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1170,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1171,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1172,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
1173,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1174,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1175,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1176,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1177,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1178,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
1179,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1180,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1181,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1182,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1183,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1184,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1185,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1186,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1187,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1188,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1189,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1190,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1191,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1192,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1193,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1194,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1195,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1196,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1197,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1198,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
1199,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1200,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1201,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1202,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1203,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1204,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1205,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1206,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1207,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1208,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1209,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1210,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1211,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1212,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1213,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1214,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1215,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1216,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1217,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1218,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,# basic smoke test
1219,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1220,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1221,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1222,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1223,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1224,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1225,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1226,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1227,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1228,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1229,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
1230,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# backwards compatibility shim
1231,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1232,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1233,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1234,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# arm64v8
1235,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# amd64
1236,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# fallback
1237,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1238,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
1239,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1240,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1241,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1242,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,# basic smoke test
1243,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1244,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1245,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1246,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1247,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1248,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1249,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1250,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1251,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1252,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1253,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,#!/bin/sh'; \
1254,3110fbc370293c071cc995c4a89e4b1814553ad5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1255,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1256,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1257,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1258,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1259,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1260,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1261,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1262,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
1263,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
1264,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
1265,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1266,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1267,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1268,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1269,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1270,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1271,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1272,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1273,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1274,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1275,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,# basic smoke test
1276,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1277,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1278,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1279,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1280,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
1281,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1282,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1283,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,# basic smoke test
1284,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1285,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1286,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1287,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1288,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1289,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,#!/bin/sh'; \
1290,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1291,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1292,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1293,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1294,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1295,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1296,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1297,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1298,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1299,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1300,54c64cf47d2b705418feb68b811419a223c5a040,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1301,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1302,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1303,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1304,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1305,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,#!/bin/sh'; \
1306,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1307,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1308,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
1309,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1310,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1311,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1312,42abb498353aae46a5766659faf3853edc441bde,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1313,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1314,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1315,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
1316,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1317,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,#!/bin/sh'; \
1318,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1319,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1320,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1321,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1322,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1323,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1324,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1325,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
1326,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,# Default to UTF-8 file.encoding
1327,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,# backwards compatibility shim
1328,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1329,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1330,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
1331,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1332,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,#!/usr/bin/env bash'; \
1333,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1334,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1335,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1336,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,# basic smoke test
1337,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1338,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1339,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1340,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1341,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1342,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1343,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1344,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1345,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
1346,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1347,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,#!/bin/sh'; \
1348,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1349,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1350,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1351,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
1352,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1353,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1354,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1355,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1356,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1357,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1358,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1359,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1360,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1361,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1362,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1363,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1364,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1365,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,#!/bin/sh'; \
1366,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1367,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1368,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1369,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1370,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1371,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1372,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1373,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1374,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1375,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1376,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1377,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1378,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1379,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1380,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1381,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1382,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1383,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1384,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,# basic smoke test
1385,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1386,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1387,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1388,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1389,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1390,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,#!/bin/sh'; \
1391,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1392,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1393,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1394,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1395,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1396,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1397,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1398,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1399,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1400,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
1401,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# backwards compatibility shim
1402,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1403,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1404,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1405,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# amd64
1406,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# fallback
1407,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1408,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
1409,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1410,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1411,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1412,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,# basic smoke test
1413,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1414,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1415,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1416,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1417,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1418,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# backwards compatibility shim
1419,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1420,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1421,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1422,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# amd64
1423,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# fallback
1424,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1425,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1426,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1427,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1428,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1429,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,# basic smoke test
1430,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1431,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1432,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1433,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1434,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1435,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,#!/bin/sh'; \
1436,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1437,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1438,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1439,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1440,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1441,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1442,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1443,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1444,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1445,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# backwards compatibility shim
1446,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1447,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
1448,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1449,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1450,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1451,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1452,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1453,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,# basic smoke test
1454,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1455,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
1456,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1457,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1458,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1459,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1460,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1461,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1462,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1463,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1464,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1465,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1466,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1467,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1468,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
1469,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1470,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
1471,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1472,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1473,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1474,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1475,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1476,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1477,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1478,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1479,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
1480,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1481,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1482,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1483,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1484,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1485,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1486,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1487,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1488,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1489,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1490,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1491,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1492,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1493,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1494,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,#!/bin/sh'; \
1495,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1496,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1497,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1498,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1499,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1500,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1501,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1502,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1503,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1504,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# amd64
1505,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# fallback
1506,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
1507,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1508,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,# basic smoke test
1509,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1510,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1511,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
1512,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1513,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1514,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1515,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1516,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1517,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,#!/bin/sh'; \
1518,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1519,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1520,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1521,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
1522,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
1523,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1524,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
1525,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# amd64
1526,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# fallback
1527,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1528,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1529,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
1530,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
1531,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1532,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
1533,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-nanoserver.template,# https://jdk.java.net/
1534,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-oracle-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1535,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1536,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1537,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1538,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1539,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# backwards compatibility shim
1540,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1541,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1542,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1543,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1544,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1545,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1546,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1547,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,# basic smoke test
1548,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1549,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
1550,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1551,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1552,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,# basic smoke test
1553,25c0a52bf0c70eafc6341bdb621580f4f282e1a1,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1554,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1555,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1556,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
1557,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1558,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
1559,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1560,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1561,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1562,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1563,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1564,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1565,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1566,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1567,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
1568,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
1569,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1570,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,# basic smoke test
1571,45c21bc4b2492f962d726eb31b1535ca15c4a726,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1572,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1573,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1574,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
1575,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1576,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,#!/bin/sh'; \
1577,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1578,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1579,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1580,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1581,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1582,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1583,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1584,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1585,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1586,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1587,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1588,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1589,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1590,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1591,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1592,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,# basic smoke test
1593,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1594,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1595,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1596,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
1597,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1598,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,#!/bin/sh'; \
1599,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1600,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1601,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1602,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1603,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1604,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1605,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1606,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1607,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1608,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# backwards compatibility shim
1609,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1610,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1611,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1612,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# arm64v8
1613,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# amd64
1614,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# fallback
1615,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1616,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1617,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1618,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1619,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1620,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,# basic smoke test
1621,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1622,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1623,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1624,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1625,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
1626,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1627,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1628,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1629,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1630,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1631,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1632,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,# basic smoke test
1633,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1634,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
1635,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
1636,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# backwards compatibility shim
1637,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1638,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
1639,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1640,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1641,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1642,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
1643,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1644,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
1645,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1646,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,# basic smoke test
1647,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1648,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1649,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1650,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# backwards compatibility shim
1651,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1652,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
1653,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1654,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1655,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1656,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1657,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1658,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
1659,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1660,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1661,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/slim/Dockerfile,# basic smoke test
1662,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1663,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1664,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1665,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1666,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1667,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1668,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1669,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# Default to UTF-8 file.encoding
1670,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1671,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,#!/bin/sh'; \
1672,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1673,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1674,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1675,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1676,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1677,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1678,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1679,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1680,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1681,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1682,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1683,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,#!/bin/sh'; \
1684,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1685,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1686,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1687,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1688,906bdc14f53c6eff33c007511701ef0444705993,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1689,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1690,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1691,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1692,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1693,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1694,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1695,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1696,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1697,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1698,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1699,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1700,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1701,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1702,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1703,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# backwards compatibility shim
1704,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1705,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1706,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1707,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1708,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1709,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1710,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1711,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,# basic smoke test
1712,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1713,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1714,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1715,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1716,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
1717,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1718,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1719,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1720,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1721,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1722,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1723,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
1724,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1725,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1726,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1727,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1728,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
1729,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1730,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,#!/bin/sh'; \
1731,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1732,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1733,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1734,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1735,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1736,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
1737,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# backwards compatibility shim
1738,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1739,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
1740,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1741,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
1742,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
1743,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
1744,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1745,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
1746,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1747,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1748,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jdk/Dockerfile,# basic smoke test
1749,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1750,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1751,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1752,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1753,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
1754,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1755,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1756,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1757,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1758,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
1759,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# backwards compatibility shim
1760,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1761,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1762,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
1763,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# arm64v8
1764,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# amd64
1765,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# fallback
1766,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1767,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
1768,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1769,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1770,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1771,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,# basic smoke test
1772,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1773,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1774,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1775,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1776,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1777,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
1778,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1779,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1780,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
1781,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1782,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,#!/bin/sh'; \
1783,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1784,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1785,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1786,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1787,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1788,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1789,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1790,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1791,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1792,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1793,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1794,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# backwards compatibility shim
1795,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1796,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1797,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1798,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1799,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1800,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1801,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1802,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,# basic smoke test
1803,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1804,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1805,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1806,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1807,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1808,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1809,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1810,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1811,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1812,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1813,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1814,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1815,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1816,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1817,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1818,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
1819,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1820,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
1821,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1822,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1823,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1824,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1825,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1826,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1827,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1828,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
1829,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1830,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1831,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,# basic smoke test
1832,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1833,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
1834,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1835,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1836,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
1837,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,# backwards compatibility shim
1838,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1839,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1840,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# this ""case"" statement is generated via ""update.sh"""
1841,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1842,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
1843,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1844,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1845,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1846,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,# basic smoke test
1847,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1848,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1849,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1850,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
1851,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
1852,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1853,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1854,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,# basic smoke test
1855,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1856,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
1857,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
1858,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1859,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
1860,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# backwards compatibility shim
1861,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
1862,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# https://jdk.java.net/
1863,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
1864,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
1865,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
1866,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
1867,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1868,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,# basic smoke test
1869,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
1870,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1871,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
1872,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
1873,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1874,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,#!/bin/sh'; \
1875,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1876,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1877,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
1878,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1879,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1880,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1881,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1882,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1883,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1884,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1885,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1886,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
1887,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1888,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1889,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
1890,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1891,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1892,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
1893,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1894,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1895,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
1896,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1897,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1898,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1899,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1900,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1901,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1902,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1903,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1904,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
1905,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1906,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1907,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1908,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1909,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1910,2544422915ae09bf77b02f0afaadaad5ba204cef,/Dockerfile-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1911,2544422915ae09bf77b02f0afaadaad5ba204cef,/Dockerfile-oracle.template,# Default to UTF-8 file.encoding
1912,2544422915ae09bf77b02f0afaadaad5ba204cef,/Dockerfile-oracle.template,# https://jdk.java.net/
1913,2544422915ae09bf77b02f0afaadaad5ba204cef,/Dockerfile-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1914,2544422915ae09bf77b02f0afaadaad5ba204cef,/Dockerfile-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
1915,2544422915ae09bf77b02f0afaadaad5ba204cef,/Dockerfile-oracle.template,# basic smoke test
1916,2544422915ae09bf77b02f0afaadaad5ba204cef,/Dockerfile-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1917,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1918,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
1919,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
1920,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1921,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
1922,c7846edc14a25304288c85e2e7bebe4609626512,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1923,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1924,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1925,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1926,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1927,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1928,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
1929,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
1930,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
1931,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
1932,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
1933,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,# basic smoke test
1934,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
1935,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1936,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
1937,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
1938,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1939,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,#!/bin/sh'; \
1940,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
1941,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1942,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
1943,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
1944,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1945,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
1946,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1947,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1948,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1949,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1950,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1951,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1952,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1953,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1954,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1955,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
1956,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1957,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1958,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1959,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1960,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
1961,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1962,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1963,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1964,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
1965,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1966,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1967,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1968,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
1969,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1970,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,#!/bin/sh'; \
1971,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1972,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1973,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1974,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1975,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1976,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
1977,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1978,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1979,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
1980,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
1981,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
1982,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
1983,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
1984,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
1985,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
1986,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
1987,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
1988,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
1989,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
1990,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
1991,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,#!/bin/sh'; \
1992,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
1993,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
1994,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
1995,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
1996,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
1997,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
1998,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
1999,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2000,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2001,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2002,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
2003,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2004,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,#!/bin/sh'; \
2005,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2006,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2007,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2008,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2009,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2010,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2011,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2012,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2013,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2014,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2015,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
2016,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2017,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2018,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2019,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2020,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
2021,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2022,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2023,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2024,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
2025,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2026,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2027,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,# basic smoke test
2028,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2029,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2030,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2031,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2032,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
2033,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2034,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2035,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2036,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2037,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2038,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2039,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2040,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2041,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
2042,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2043,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,#!/bin/sh'; \
2044,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2045,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2046,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2047,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2048,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2049,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2050,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2051,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2052,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2053,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2054,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2055,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2056,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2057,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2058,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2059,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2060,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2061,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2062,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2063,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2064,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2065,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2066,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2067,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2068,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,#!/bin/sh'; \
2069,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2070,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2071,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2072,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2073,0467df283134a79840c25808093c00f7c94b9a88,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2074,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2075,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2076,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2077,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2078,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2079,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,# basic smoke test
2080,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2081,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2082,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2083,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2084,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2085,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2086,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2087,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2088,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2089,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2090,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,#!/bin/sh'; \
2091,50c491c7c2378182866d89e857eb1f0c77985507,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2092,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2093,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2094,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
2095,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2096,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2097,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2098,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2099,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# arm64v8
2100,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# amd64
2101,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# fallback
2102,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2103,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2104,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2105,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2106,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2107,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2108,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2109,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/slim-buster/Dockerfile,# basic smoke test
2110,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2111,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2112,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2113,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2114,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2115,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2116,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2117,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2118,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2119,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2120,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
2121,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2122,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
2123,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,# backwards compatibility shim
2124,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2125,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2126,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2127,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2128,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2129,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
2130,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2131,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
2132,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2133,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2134,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,# basic smoke test
2135,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2136,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2137,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2138,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2139,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2140,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2141,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2142,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2143,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2144,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2145,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2146,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
2147,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2148,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2149,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2150,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2151,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2152,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2153,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2154,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2155,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2156,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2157,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2158,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2159,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
2160,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# backwards compatibility shim
2161,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2162,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
2163,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2164,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
2165,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
2166,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2167,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2168,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
2169,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2170,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/Dockerfile,# basic smoke test
2171,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-alpine.template,# http://jdk.java.net/
2172,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2173,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2174,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-alpine.template,# basic smoke test
2175,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2176,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2177,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2178,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2179,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2180,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2181,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,# basic smoke test
2182,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2183,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2184,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2185,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2186,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2187,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2188,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2189,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2190,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2191,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2192,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2193,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2194,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2195,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2196,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# arm64v8
2197,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# amd64
2198,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# fallback
2199,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2200,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2201,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,# basic smoke test
2202,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2203,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2204,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2205,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2206,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2207,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,#!/bin/sh'; \
2208,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2209,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2210,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2211,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2212,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2213,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
2214,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2215,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2216,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2217,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2218,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2219,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2220,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2221,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2222,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2223,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2224,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2225,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2226,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2227,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2228,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2229,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2230,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2231,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2232,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2233,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2234,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2235,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
2236,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2237,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2238,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2239,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# backwards compatibility shim
2240,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2241,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2242,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2243,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2244,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2245,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2246,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2247,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2248,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2249,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2250,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,# basic smoke test
2251,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2252,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2253,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2254,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2255,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2256,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2257,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2258,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
2259,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2260,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2261,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2262,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
2263,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# backwards compatibility shim
2264,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2265,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2266,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2267,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2268,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# arm64v8
2269,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# amd64
2270,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# fallback
2271,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2272,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2273,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2274,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2275,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
2276,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2277,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2278,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,# basic smoke test
2279,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2280,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2281,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2282,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2283,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2284,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
2285,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2286,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2287,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
2288,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2289,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2290,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2291,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2292,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2293,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,#!/bin/sh'; \
2294,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2295,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2296,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
2297,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
2298,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2299,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2300,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2301,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2302,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2303,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
2304,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2305,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2306,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2307,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2308,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2309,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2310,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2311,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# arm64v8
2312,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# amd64
2313,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# fallback
2314,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2315,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2316,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2317,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2318,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2319,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,# basic smoke test
2320,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2321,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2322,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
2323,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2324,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2325,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2326,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2327,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2328,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
2329,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2330,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2331,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2332,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2333,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2334,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2335,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2336,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
2337,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2338,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2339,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2340,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2341,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2342,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2343,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2344,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2345,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2346,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2347,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2348,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2349,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2350,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2351,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2352,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
2353,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2354,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,#!/bin/sh'; \
2355,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2356,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2357,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2358,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2359,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2360,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2361,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2362,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2363,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2364,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# backwards compatibility shim
2365,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2366,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2367,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2368,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2369,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2370,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2371,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2372,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2373,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2374,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2375,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,# basic smoke test
2376,451e66427f3c53fada288aaff950617c5864745f,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2377,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2378,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2379,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2380,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2381,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
2382,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2383,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2384,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
2385,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2386,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
2387,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2388,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2389,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2390,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2391,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2392,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2393,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2394,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2395,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2396,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2397,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2398,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
2399,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# backwards compatibility shim
2400,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2401,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# https://jdk.java.net/
2402,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2403,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
2404,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2405,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2406,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2407,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,# basic smoke test
2408,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2409,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2410,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2411,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2412,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
2413,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2414,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2415,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2416,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2417,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2418,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2419,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
2420,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2421,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2422,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,# basic smoke test
2423,d368a4f37bed4dc5d0b61ec889c8e7bad438eacf,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2424,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2425,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2426,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2427,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2428,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2429,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2430,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2431,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2432,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2433,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2434,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2435,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
2436,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# backwards compatibility shim
2437,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2438,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2439,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2440,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2441,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2442,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2443,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2444,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
2445,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2446,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2447,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/Dockerfile,# basic smoke test
2448,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2449,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
2450,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2451,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2452,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2453,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
2454,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2455,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,#!/bin/sh'; \
2456,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2457,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2458,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2459,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2460,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2461,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2462,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2463,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2464,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2465,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2466,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2467,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2468,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,#!/bin/sh'; \
2469,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2470,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2471,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2472,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2473,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2474,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2475,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2476,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2477,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
2478,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2479,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2480,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,# basic smoke test
2481,37ac51ae06458726bfd2d5e2286232d9ca07a8a5,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2482,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2483,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2484,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2485,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2486,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2487,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2488,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2489,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# backwards compatibility shim
2490,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2491,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2492,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2493,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2494,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2495,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2496,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2497,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2498,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2499,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2500,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/Dockerfile,# basic smoke test
2501,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2502,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2503,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2504,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2505,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2506,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2507,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
2508,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2509,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
2510,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,# basic smoke test
2511,8502712f6e80904b766505805c894c2008afa700,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2512,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2513,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2514,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
2515,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2516,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,#!/bin/sh'; \
2517,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2518,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2519,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2520,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2521,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2522,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2523,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2524,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2525,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
2526,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2527,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,#!/bin/sh'; \
2528,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2529,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2530,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2531,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2532,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2533,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2534,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2535,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2536,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2537,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2538,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2539,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
2540,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# backwards compatibility shim
2541,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2542,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2543,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2544,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# arm64v8
2545,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# amd64
2546,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# fallback
2547,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2548,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
2549,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2550,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2551,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2552,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,# basic smoke test
2553,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2554,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2555,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2556,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2557,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2558,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2559,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2560,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2561,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2562,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2563,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2564,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2565,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2566,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,#!/bin/sh'; \
2567,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2568,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2569,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2570,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2571,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2572,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2573,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2574,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2575,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2576,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2577,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2578,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2579,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2580,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2581,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2582,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2583,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2584,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
2585,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2586,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2587,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,#!/bin/sh'; \
2588,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2589,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2590,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
2591,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2592,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2593,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2594,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2595,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2596,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2597,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2598,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
2599,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2600,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2601,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2602,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2603,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2604,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2605,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2606,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2607,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2608,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2609,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2610,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2611,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2612,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2613,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2614,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,# basic smoke test
2615,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2616,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2617,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2618,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
2619,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2620,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
2621,47a6539cd18023dafb45db9013455136cc0bca07,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2622,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2623,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2624,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2625,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2626,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2627,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2628,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# arm64v8
2629,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# amd64
2630,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# fallback
2631,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2632,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2633,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2634,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2635,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2636,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,# basic smoke test
2637,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2638,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2639,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2640,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2641,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
2642,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2643,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2644,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2645,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2646,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2647,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2648,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2649,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2650,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
2651,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2652,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,#!/bin/sh'; \
2653,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2654,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2655,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2656,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# backwards compatibility shim
2657,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2658,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
2659,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2660,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2661,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2662,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2663,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2664,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
2665,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2666,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2667,451e66427f3c53fada288aaff950617c5864745f,/8/jre/slim/Dockerfile,# basic smoke test
2668,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2669,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2670,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2671,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2672,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2673,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2674,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2675,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
2676,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2677,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,#!/bin/sh'; \
2678,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2679,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2680,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
2681,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2682,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2683,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2684,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2685,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
2686,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2687,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2688,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2689,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2690,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
2691,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2692,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2693,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2694,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2695,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2696,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2697,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2698,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2699,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# amd64
2700,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# fallback
2701,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2702,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2703,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2704,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2705,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2706,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2707,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2708,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/slim-buster/Dockerfile,# basic smoke test
2709,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2710,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
2711,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
2712,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2713,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2714,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2715,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# amd64
2716,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# fallback
2717,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2718,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
2719,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2720,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2721,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2722,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,# basic smoke test
2723,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2724,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2725,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
2726,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2727,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2728,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2729,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2730,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2731,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2732,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2733,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
2734,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# backwards compatibility shim
2735,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2736,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2737,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
2738,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# amd64
2739,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# fallback
2740,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2741,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
2742,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2743,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2744,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2745,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,# basic smoke test
2746,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2747,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-alpine.template,# https://jdk.java.net/
2748,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2749,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2750,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-alpine.template,# basic smoke test
2751,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2752,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2753,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2754,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
2755,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2756,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2757,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2758,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,# basic smoke test
2759,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2760,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2761,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2762,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2763,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2764,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,#!/bin/sh'; \
2765,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2766,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2767,6cc25ee35281099423e521713f710d2549209600,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2768,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2769,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2770,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# backwards compatibility shim
2771,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2772,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2773,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2774,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2775,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2776,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2777,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2778,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,# basic smoke test
2779,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2780,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2781,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2782,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2783,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
2784,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
2785,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2786,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2787,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,# basic smoke test
2788,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2789,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2790,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2791,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2792,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2793,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
2794,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2795,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2796,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
2797,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2798,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2799,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2800,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2801,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2802,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2803,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2804,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
2805,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-alpine.template,"# this ""case"" statement is generated via ""update.sh"""
2806,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
2807,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2808,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-alpine.template,# basic smoke test
2809,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-alpine.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2810,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2811,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2812,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2813,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2814,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2815,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2816,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2817,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# backwards compatibility shim
2818,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2819,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2820,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2821,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
2822,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2823,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2824,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2825,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,# basic smoke test
2826,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2827,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
2828,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2829,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2830,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
2831,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2832,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,#!/bin/sh'; \
2833,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2834,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2835,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2836,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2837,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2838,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2839,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2840,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2841,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
2842,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2843,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2844,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2845,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
2846,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2847,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
2848,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2849,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2850,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2851,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2852,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2853,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2854,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2855,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2856,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2857,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2858,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2859,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2860,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2861,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2862,fdf3bb8d168120655fe39e4098713e704db809df,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2863,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2864,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
2865,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# backwards compatibility shim
2866,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2867,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
2868,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
2869,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2870,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2871,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2872,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2873,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
2874,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2875,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2876,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/slim/Dockerfile,# basic smoke test
2877,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2878,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2879,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2880,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2881,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2882,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
2883,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2884,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,#!/bin/sh'; \
2885,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2886,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2887,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2888,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2889,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2890,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2891,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2892,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2893,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
2894,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2895,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
2896,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# backwards compatibility shim
2897,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2898,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2899,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2900,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
2901,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2902,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2903,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2904,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,# basic smoke test
2905,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2906,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2907,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2908,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2909,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
2910,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2911,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2912,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2913,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2914,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2915,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,# basic smoke test
2916,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2917,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2918,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
2919,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
2920,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
2921,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
2922,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,# basic smoke test
2923,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
2924,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2925,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
2926,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2927,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2928,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
2929,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
2930,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2931,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
2932,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2933,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2934,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
2935,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
2936,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2937,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,#!/bin/sh'; \
2938,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
2939,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
2940,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
2941,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
2942,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
2943,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
2944,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2945,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2946,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2947,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2948,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
2949,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2950,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2951,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2952,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2953,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
2954,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
2955,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
2956,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
2957,4c0594da82d2528637a9345938ee92396fd73d4b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2958,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2959,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2960,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2961,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
2962,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2963,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2964,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2965,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2966,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
2967,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2968,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2969,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2970,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
2971,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
2972,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
2973,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
2974,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
2975,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
2976,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
2977,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
2978,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# backwards compatibility shim
2979,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
2980,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
2981,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
2982,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
2983,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
2984,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
2985,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
2986,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
2987,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
2988,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
2989,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,# basic smoke test
2990,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
2991,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
2992,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
2993,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
2994,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
2995,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,#!/bin/sh'; \
2996,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
2997,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
2998,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
2999,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3000,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3001,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3002,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
3003,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3004,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3005,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
3006,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3007,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3008,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
3009,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3010,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3011,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3012,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3013,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3014,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3015,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3016,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3017,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3018,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,#!/bin/sh'; \
3019,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3020,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3021,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3022,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3023,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3024,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3025,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3026,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3027,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3028,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3029,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3030,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3031,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3032,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3033,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3034,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,#!/bin/sh'; \
3035,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3036,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3037,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3038,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3039,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3040,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# backwards compatibility shim
3041,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3042,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
3043,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3044,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3045,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3046,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3047,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3048,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,# basic smoke test
3049,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3050,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3051,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3052,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3053,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
3054,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3055,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,#!/bin/sh'; \
3056,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3057,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3058,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3059,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3060,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3061,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3062,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3063,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3064,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3065,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3066,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
3067,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3068,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3069,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,# basic smoke test
3070,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3071,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3072,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3073,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
3074,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3075,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3076,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3077,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
3078,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3079,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,#!/bin/sh'; \
3080,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3081,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3082,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3083,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3084,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3085,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3086,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3087,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3088,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3089,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3090,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3091,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3092,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3093,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3094,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3095,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3096,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3097,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3098,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3099,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
3100,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3101,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3102,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3103,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
3104,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3105,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3106,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3107,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3108,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3109,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3110,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
3111,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3112,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3113,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
3114,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3115,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3116,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3117,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3118,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3119,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3120,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3121,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
3122,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3123,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,#!/bin/sh'; \
3124,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3125,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3126,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3127,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3128,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3129,2057305e0474ebf6461daea607ff02874d690914,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3130,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3131,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3132,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3133,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3134,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3135,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3136,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3137,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3138,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3139,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
3140,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3141,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3142,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3143,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3144,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3145,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3146,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3147,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3148,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3149,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3150,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,#!/bin/sh'; \
3151,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3152,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3153,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3154,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3155,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3156,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3157,01ca700a105984964865430aee1251932956925e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3158,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3159,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3160,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3161,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3162,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3163,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3164,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3165,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3166,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3167,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
3168,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3169,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3170,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3171,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3172,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3173,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
3174,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3175,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3176,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3177,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3178,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3179,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3180,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,# basic smoke test
3181,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3182,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3183,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3184,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3185,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3186,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3187,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3188,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,# basic smoke test
3189,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3190,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3191,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3192,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3193,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3194,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3195,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3196,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3197,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# backwards compatibility shim
3198,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3199,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3200,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3201,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# arm64v8
3202,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# amd64
3203,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# fallback
3204,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3205,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3206,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3207,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3208,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3209,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,# basic smoke test
3210,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3211,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3212,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3213,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3214,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3215,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3216,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3217,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3218,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3219,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3220,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3221,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3222,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3223,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3224,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3225,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
3226,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3227,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3228,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3229,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,# basic smoke test
3230,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3231,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3232,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3233,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# backwards compatibility shim
3234,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3235,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3236,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3237,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3238,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3239,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3240,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3241,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,# basic smoke test
3242,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3243,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3244,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3245,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3246,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3247,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3248,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
3249,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3250,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3251,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3252,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3253,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3254,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3255,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3256,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3257,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,#!/bin/sh'; \
3258,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3259,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
3260,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
3261,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,# backwards compatibility shim
3262,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3263,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3264,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3265,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3266,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3267,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
3268,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3269,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
3270,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3271,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3272,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,# basic smoke test
3273,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3274,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3275,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3276,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-servercore.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3277,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-servercore.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3278,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-servercore.template,# TODO signature? checksum?
3279,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3280,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3281,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3282,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3283,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3284,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3285,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3286,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3287,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3288,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3289,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3290,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3291,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3292,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3293,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
3294,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3295,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3296,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3297,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3298,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3299,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3300,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3301,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3302,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3303,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3304,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3305,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3306,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3307,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3308,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3309,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,#!/bin/sh'; \
3310,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3311,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3312,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3313,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# backwards compatibility shim
3314,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3315,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
3316,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3317,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3318,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3319,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3320,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3321,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,# basic smoke test
3322,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3323,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3324,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3325,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3326,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3327,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3328,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3329,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3330,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3331,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3332,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3333,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3334,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3335,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3336,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
3337,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3338,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3339,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3340,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3341,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3342,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3343,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3344,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3345,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3346,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3347,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3348,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3349,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3350,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3351,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3352,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/slim/Dockerfile,# basic smoke test
3353,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3354,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3355,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3356,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
3357,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# backwards compatibility shim
3358,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3359,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# https://jdk.java.net/
3360,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3361,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
3362,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3363,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3364,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3365,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,# basic smoke test
3366,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3367,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3368,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3369,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3370,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
3371,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3372,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3373,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3374,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3375,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3376,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3377,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3378,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3379,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
3380,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# backwards compatibility shim
3381,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3382,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3383,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3384,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3385,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3386,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3387,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3388,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
3389,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3390,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3391,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,# basic smoke test
3392,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3393,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3394,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3395,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3396,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3397,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,#!/bin/sh'; \
3398,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3399,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3400,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3401,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3402,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3403,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3404,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
3405,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,# backwards compatibility shim
3406,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3407,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
3408,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3409,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3410,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
3411,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,# basic smoke test
3412,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3413,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3414,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3415,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3416,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3417,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3418,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3419,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3420,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3421,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3422,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3423,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3424,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,#!/bin/sh'; \
3425,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3426,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3427,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3428,882461ade8207de7647d083009200de85eb978bc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3429,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3430,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3431,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
3432,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3433,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,#!/bin/sh'; \
3434,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3435,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3436,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3437,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3438,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3439,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3440,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3441,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3442,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3443,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
3444,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3445,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3446,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3447,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3448,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3449,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3450,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3451,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
3452,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3453,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,#!/bin/sh'; \
3454,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3455,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3456,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3457,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3458,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3459,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3460,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3461,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3462,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3463,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3464,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3465,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3466,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3467,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3468,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3469,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3470,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3471,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3472,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3473,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3474,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3475,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3476,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3477,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
3478,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,# Default to UTF-8 file.encoding
3479,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,# backwards compatibility shim
3480,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3481,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3482,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"# this ""case"" statement is generated via ""update.sh"""
3483,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3484,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,#!/usr/bin/env bash'; \
3485,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3486,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3487,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3488,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,# basic smoke test
3489,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3490,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-slim.template,"/*; \
	\
	arch=""$(dpkg --print-architecture)""; \
# this ""case"" statement is generated via ""update.sh""
	%%ARCH-CASE%%; \
	\
	wget -O openjdk.tgz ""$downloadUrl""; \
	echo ""$downloadSha256 */"
3491,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3492,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3493,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3494,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3495,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3496,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3497,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3498,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3499,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3500,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
3501,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3502,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3503,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3504,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3505,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3506,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3507,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3508,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3509,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3510,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3511,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3512,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3513,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3514,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3515,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3516,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
3517,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3518,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3519,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
3520,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3521,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3522,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
3523,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3524,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3525,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3526,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3527,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3528,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3529,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3530,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3531,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
3532,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,# basic smoke test
3533,e9243a2c830d88c2684cbe2949def5984c5033d6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3534,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3535,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3536,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
3537,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3538,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,#!/bin/bash'; \
3539,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3540,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3541,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3542,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3543,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3544,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3545,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3546,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
3547,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3548,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3549,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3550,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3551,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3552,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
3553,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3554,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
3555,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,# basic smoke test
3556,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3557,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3558,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3559,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
3560,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# backwards compatibility shim
3561,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3562,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3563,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3564,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3565,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# amd64
3566,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# fallback
3567,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3568,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3569,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3570,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3571,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
3572,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3573,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3574,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/buster/Dockerfile,# basic smoke test
3575,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
3576,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
3577,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,# backwards compatibility shim
3578,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3579,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
3580,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3581,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3582,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3583,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
3584,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3585,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
3586,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3587,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3588,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,# basic smoke test
3589,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3590,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3591,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3592,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3593,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
3594,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3595,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
3596,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
3597,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,# backwards compatibility shim
3598,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3599,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3600,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3601,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3602,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3603,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
3604,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3605,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
3606,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3607,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3608,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,# basic smoke test
3609,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3610,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
3611,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3612,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3613,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,# basic smoke test
3614,d93be18f4f2d5e8457169cac00e559d953b6028e,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3615,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3616,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3617,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# backwards compatibility shim
3618,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3619,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3620,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3621,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# amd64
3622,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# fallback
3623,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3624,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3625,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3626,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3627,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3628,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,# basic smoke test
3629,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3630,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3631,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3632,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3633,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3634,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
3635,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3636,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3637,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3638,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3639,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
3640,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# backwards compatibility shim
3641,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3642,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
3643,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3644,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3645,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3646,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3647,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/Dockerfile,# basic smoke test
3648,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3649,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3650,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
3651,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3652,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3653,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
3654,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3655,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,#!/bin/sh'; \
3656,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3657,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3658,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3659,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3660,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3661,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3662,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3663,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3664,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3665,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3666,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
3667,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# backwards compatibility shim
3668,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3669,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3670,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3671,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# arm64v8
3672,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# amd64
3673,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# fallback
3674,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3675,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
3676,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3677,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3678,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3679,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,# basic smoke test
3680,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3681,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3682,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3683,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
3684,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3685,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
3686,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-nanoserver.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3687,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-nanoserver.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3688,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3689,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3690,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
3691,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
3692,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3693,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,#!/bin/sh'; \
3694,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3695,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3696,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3697,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3698,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3699,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3700,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3701,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3702,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
3703,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3704,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3705,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,# basic smoke test
3706,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3707,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3708,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3709,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3710,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3711,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3712,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3713,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3714,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3715,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3716,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# backwards compatibility shim
3717,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3718,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3719,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3720,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# arm64v8
3721,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# amd64
3722,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# fallback
3723,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3724,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3725,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3726,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3727,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3728,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,# basic smoke test
3729,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3730,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
3731,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,# Default to UTF-8 file.encoding
3732,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,# backwards compatibility shim
3733,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3734,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,# https://jdk.java.net/
3735,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3736,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,#!/usr/bin/env bash'; \
3737,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3738,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3739,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3740,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,# basic smoke test
3741,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3742,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-slim.template,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
3743,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3744,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
3745,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
3746,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3747,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,#!/bin/sh'; \
3748,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3749,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3750,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
3751,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
3752,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3753,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3754,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3755,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3756,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3757,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3758,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3759,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3760,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3761,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3762,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3763,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3764,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3765,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,#!/bin/sh'; \
3766,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3767,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3768,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3769,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3770,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3771,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3772,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3773,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
3774,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3775,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,#!/bin/sh'; \
3776,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3777,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3778,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3779,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3780,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3781,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3782,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3783,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3784,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# backwards compatibility shim
3785,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3786,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
3787,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3788,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
3789,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
3790,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3791,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3792,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
3793,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3794,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/slim/Dockerfile,# basic smoke test
3795,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3796,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3797,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
3798,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3799,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
3800,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3801,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3802,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3803,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
3804,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3805,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3806,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3807,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3808,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3809,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3810,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
3811,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3812,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3813,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,# basic smoke test
3814,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3815,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3816,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
3817,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
3818,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3819,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,#!/bin/sh'; \
3820,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3821,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3822,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
3823,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3824,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3825,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3826,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3827,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3828,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3829,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3830,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
3831,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# backwards compatibility shim
3832,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3833,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3834,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3835,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
3836,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
3837,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
3838,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3839,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
3840,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3841,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3842,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,# basic smoke test
3843,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3844,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3845,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3846,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3847,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3848,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,#!/bin/sh'; \
3849,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3850,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3851,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3852,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3853,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3854,882461ade8207de7647d083009200de85eb978bc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3855,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3856,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3857,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3858,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
3859,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3860,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3861,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3862,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3863,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
3864,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3865,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3866,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
3867,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3868,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# amd64
3869,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# fallback
3870,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
3871,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3872,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
3873,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3874,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3875,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3876,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3877,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3878,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
3879,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3880,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3881,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3882,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3883,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3884,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3885,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3886,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3887,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
3888,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
3889,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
3890,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3891,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3892,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3893,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3894,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3895,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3896,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3897,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3898,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
3899,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3900,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3901,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
3902,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# amd64
3903,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# fallback
3904,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3905,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3906,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
3907,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
3908,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3909,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3910,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3911,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
3912,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3913,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3914,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3915,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
3916,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3917,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,#!/bin/bash'; \
3918,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
3919,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
3920,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3921,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
3922,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
3923,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3924,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
3925,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# backwards compatibility shim
3926,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
3927,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
3928,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
3929,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# arm64v8
3930,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# amd64
3931,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# fallback
3932,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
3933,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
3934,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
3935,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
3936,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
3937,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,# basic smoke test
3938,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3939,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3940,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3941,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3942,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
3943,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3944,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3945,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
3946,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
3947,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3948,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,#!/bin/sh'; \
3949,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3950,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3951,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3952,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3953,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3954,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3955,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
3956,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
3957,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
3958,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3959,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3960,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
3961,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3962,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,#!/bin/sh'; \
3963,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
3964,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3965,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
3966,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3967,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
3968,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3969,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3970,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
3971,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
3972,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
3973,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
3974,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3975,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
3976,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
3977,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3978,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
3979,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
3980,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
3981,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
3982,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
3983,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
3984,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
3985,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
3986,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
3987,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
3988,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
3989,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
3990,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
3991,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
3992,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
3993,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
3994,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
3995,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
3996,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,# basic smoke test
3997,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
3998,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
3999,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4000,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4001,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4002,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4003,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4004,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4005,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4006,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4007,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4008,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4009,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4010,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4011,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4012,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4013,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4014,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
4015,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4016,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4017,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4018,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
4019,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4020,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,#!/bin/sh'; \
4021,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4022,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4023,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4024,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
4025,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# backwards compatibility shim
4026,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4027,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4028,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4029,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4030,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# amd64
4031,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# fallback
4032,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4033,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4034,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4035,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4036,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
4037,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4038,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4039,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/buster/Dockerfile,# basic smoke test
4040,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4041,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
4042,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
4043,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4044,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,#!/bin/sh'; \
4045,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4046,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4047,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4048,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4049,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4050,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4051,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4052,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4053,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
4054,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4055,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4056,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4057,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4058,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4059,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4060,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4061,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,# basic smoke test
4062,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4063,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
4064,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4065,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4066,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
4067,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4068,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,#!/bin/sh'; \
4069,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4070,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4071,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4072,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4073,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4074,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4075,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4076,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4077,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4078,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4079,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4080,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4081,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4082,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4083,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4084,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,#!/bin/sh'; \
4085,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4086,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4087,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4088,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4089,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4090,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4091,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4092,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4093,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4094,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4095,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4096,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4097,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
4098,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# backwards compatibility shim
4099,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4100,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4101,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4102,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
4103,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4104,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4105,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4106,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,# basic smoke test
4107,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4108,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4109,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4110,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4111,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4112,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4113,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
4114,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4115,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
4116,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,# backwards compatibility shim
4117,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4118,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4119,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4120,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4121,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4122,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
4123,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4124,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
4125,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4126,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4127,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,# basic smoke test
4128,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4129,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4130,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4131,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# backwards compatibility shim
4132,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4133,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4134,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4135,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4136,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4137,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4138,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4139,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4140,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4141,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4142,43078a246d7620f518412f458cc689ac869389ac,/8/jdk/slim/Dockerfile,# basic smoke test
4143,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4144,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4145,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# backwards compatibility shim
4146,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4147,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4148,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4149,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4150,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4151,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4152,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4153,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,# basic smoke test
4154,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4155,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
4156,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4157,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
4158,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
4159,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4160,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,#!/bin/sh'; \
4161,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4162,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4163,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4164,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4165,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4166,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4167,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4168,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4169,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4170,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4171,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4172,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4173,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4174,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4175,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
4176,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# backwards compatibility shim
4177,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4178,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4179,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4180,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# arm64v8
4181,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# amd64
4182,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# fallback
4183,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4184,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
4185,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4186,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4187,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4188,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,# basic smoke test
4189,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4190,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4191,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4192,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4193,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
4194,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# backwards compatibility shim
4195,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4196,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4197,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4198,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
4199,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4200,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4201,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4202,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,# basic smoke test
4203,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4204,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4205,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4206,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# backwards compatibility shim
4207,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4208,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4209,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4210,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4211,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4212,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4213,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4214,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4215,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4216,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4217,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,# basic smoke test
4218,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4219,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4220,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
4221,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4222,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4223,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4224,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4225,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4226,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4227,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4228,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4229,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4230,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4231,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,#!/bin/sh'; \
4232,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4233,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4234,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4235,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4236,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4237,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4238,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4239,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4240,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4241,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4242,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4243,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
4244,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4245,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4246,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4247,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4248,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4249,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,#!/bin/sh'; \
4250,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4251,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4252,e6e9cf8b21516ba764189916d35be57486203c95,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4253,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4254,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4255,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4256,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4257,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,#!/bin/sh'; \
4258,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4259,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4260,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4261,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4262,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4263,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4264,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4265,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4266,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4267,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4268,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4269,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# backwards compatibility shim
4270,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4271,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4272,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4273,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4274,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4275,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4276,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4277,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,# basic smoke test
4278,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4279,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4280,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4281,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
4282,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4283,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
4284,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,# basic smoke test
4285,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4286,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4287,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4288,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4289,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4290,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4291,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4292,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4293,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4294,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4295,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4296,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4297,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4298,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4299,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4300,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4301,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,#!/bin/sh'; \
4302,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4303,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4304,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4305,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4306,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4307,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4308,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4309,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4310,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# backwards compatibility shim
4311,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4312,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4313,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4314,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4315,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4316,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4317,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4318,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
4319,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4320,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4321,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/slim/Dockerfile,# basic smoke test
4322,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4323,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4324,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4325,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4326,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
4327,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4328,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4329,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4330,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4331,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4332,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4333,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4334,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4335,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4336,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
4337,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4338,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,#!/bin/sh'; \
4339,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4340,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4341,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4342,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4343,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4344,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4345,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4346,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4347,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4348,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4349,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4350,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4351,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
4352,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4353,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4354,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4355,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4356,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4357,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4358,31741b6c2bbe2625e783288664245136ffe9533c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4359,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4360,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4361,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4362,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4363,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4364,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4365,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4366,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4367,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4368,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
4369,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4370,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4371,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4372,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4373,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4374,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4375,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4376,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4377,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4378,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4379,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4380,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4381,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-windows.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4382,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4383,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-windows.template,# https://jdk.java.net/
4384,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-windows.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4385,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4386,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4387,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4388,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4389,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,#!/bin/sh'; \
4390,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4391,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4392,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4393,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4394,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4395,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4396,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4397,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4398,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4399,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
4400,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4401,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4402,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4403,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4404,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4405,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4406,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4407,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
4408,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4409,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4410,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4411,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4412,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4413,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4414,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4415,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,# basic smoke test
4416,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4417,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4418,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4419,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4420,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4421,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4422,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4423,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4424,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4425,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4426,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4427,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4428,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4429,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
4430,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4431,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4432,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4433,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4434,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4435,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4436,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# backwards compatibility shim
4437,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4438,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4439,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4440,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4441,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4442,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4443,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4444,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
4445,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4446,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4447,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jre/Dockerfile,# basic smoke test
4448,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4449,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
4450,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
4451,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4452,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4453,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4454,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# arm64v8
4455,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# amd64
4456,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# fallback
4457,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4458,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
4459,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4460,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4461,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4462,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,# basic smoke test
4463,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4464,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4465,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4466,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4467,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4468,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4469,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4470,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4471,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4472,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4473,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4474,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4475,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4476,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4477,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4478,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4479,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4480,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4481,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4482,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4483,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4484,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4485,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4486,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4487,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4488,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4489,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4490,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4491,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4492,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4493,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4494,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4495,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4496,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4497,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4498,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4499,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4500,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4501,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
4502,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4503,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,#!/bin/sh'; \
4504,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4505,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4506,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4507,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4508,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
4509,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4510,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4511,98726c6f8efe30e3a40a51a0c4de7fb7193d9f58,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4512,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4513,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4514,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4515,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4516,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4517,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4518,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4519,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4520,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
4521,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4522,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4523,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4524,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4525,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4526,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4527,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4528,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
4529,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4530,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,#!/bin/sh'; \
4531,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4532,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4533,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4534,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4535,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4536,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4537,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4538,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
4539,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4540,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4541,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4542,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4543,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4544,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4545,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/slim/Dockerfile,# basic smoke test
4546,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4547,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4548,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4549,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4550,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4551,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4552,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4553,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4554,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4555,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4556,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4557,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4558,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# amd64
4559,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# fallback
4560,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4561,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4562,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4563,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,# basic smoke test
4564,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4565,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4566,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4567,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
4568,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4569,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
4570,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4571,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4572,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
4573,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# backwards compatibility shim
4574,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4575,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4576,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4577,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
4578,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
4579,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4580,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4581,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
4582,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4583,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4584,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/Dockerfile,# basic smoke test
4585,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
4586,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
4587,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4588,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,# basic smoke test
4589,b57ab1457d190f313c46ffbec2b994b041b4d08c,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4590,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4591,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4592,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4593,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
4594,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4595,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4596,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4597,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
4598,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4599,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4600,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,# basic smoke test
4601,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4602,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4603,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4604,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4605,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
4606,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4607,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
4608,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4609,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4610,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4611,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4612,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4613,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
4614,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4615,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4616,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4617,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4618,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4619,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4620,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
4621,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4622,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
4623,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# backwards compatibility shim
4624,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4625,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
4626,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4627,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4628,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4629,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
4630,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4631,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
4632,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4633,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4634,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,# basic smoke test
4635,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4636,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4637,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4638,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4639,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4640,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
4641,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4642,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
4643,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4644,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4645,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4646,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
4647,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4648,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4649,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
4650,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# amd64
4651,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# fallback
4652,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4653,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4654,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4655,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
4656,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4657,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4658,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4659,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4660,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4661,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4662,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4663,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
4664,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4665,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4666,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
4667,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4668,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4669,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
4670,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4671,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4672,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4673,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4674,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4675,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4676,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4677,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4678,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4679,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,#!/bin/sh'; \
4680,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4681,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4682,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4683,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4684,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4685,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4686,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4687,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4688,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4689,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# backwards compatibility shim
4690,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4691,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4692,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4693,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4694,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4695,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4696,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4697,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,# basic smoke test
4698,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4699,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4700,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4701,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4702,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
4703,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# backwards compatibility shim
4704,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4705,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# https://jdk.java.net/
4706,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4707,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
4708,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4709,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4710,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4711,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,# basic smoke test
4712,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4713,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4714,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4715,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4716,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4717,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4718,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4719,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4720,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4721,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
4722,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4723,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4724,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
4725,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
4726,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# amd64
4727,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# fallback
4728,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
4729,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4730,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
4731,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4732,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4733,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4734,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4735,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4736,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
4737,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
4738,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4739,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
4740,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4741,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4742,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4743,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
4744,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4745,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,#!/bin/sh'; \
4746,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4747,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4748,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4749,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4750,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4751,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4752,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# backwards compatibility shim
4753,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4754,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4755,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4756,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4757,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4758,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4759,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4760,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,# basic smoke test
4761,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4762,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
4763,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4764,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4765,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4766,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4767,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
4768,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
4769,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4770,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,#!/bin/sh'; \
4771,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4772,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4773,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4774,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4775,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4776,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4777,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4778,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4779,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4780,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
4781,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4782,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4783,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4784,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4785,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4786,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4787,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4788,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4789,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
4790,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4791,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4792,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4793,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4794,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4795,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4796,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4797,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4798,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4799,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
4800,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4801,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4802,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4803,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4804,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
4805,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4806,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
4807,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4808,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
4809,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# backwards compatibility shim
4810,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4811,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
4812,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4813,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4814,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4815,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
4816,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4817,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
4818,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4819,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4820,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,# basic smoke test
4821,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4822,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4823,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4824,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
4825,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4826,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4827,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
4828,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4829,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
4830,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4831,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4832,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4833,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4834,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4835,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4836,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4837,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4838,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4839,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4840,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4841,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4842,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4843,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
4844,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# backwards compatibility shim
4845,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4846,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
4847,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4848,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4849,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4850,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/Dockerfile,# basic smoke test
4851,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4852,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4853,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
4854,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4855,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,#!/bin/sh'; \
4856,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4857,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4858,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4859,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4860,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
4861,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
4862,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4863,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,#!/bin/sh'; \
4864,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4865,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4866,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4867,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4868,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4869,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4870,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4871,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4872,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4873,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4874,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4875,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,#!/bin/sh'; \
4876,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4877,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4878,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4879,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4880,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
4881,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
4882,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4883,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,#!/bin/sh'; \
4884,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
4885,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
4886,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
4887,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4888,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4889,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4890,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4891,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4892,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4893,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4894,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
4895,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
4896,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
4897,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
4898,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4899,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4900,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4901,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4902,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4903,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4904,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# backwards compatibility shim
4905,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4906,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4907,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4908,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4909,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4910,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4911,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4912,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,# basic smoke test
4913,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4914,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4915,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
4916,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
4917,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4918,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4919,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,# basic smoke test
4920,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4921,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4922,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4923,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4924,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
4925,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# backwards compatibility shim
4926,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4927,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4928,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4929,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
4930,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4931,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4932,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4933,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,# basic smoke test
4934,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4935,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
4936,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4937,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# backwards compatibility shim
4938,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
4939,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
4940,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
4941,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
4942,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
4943,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
4944,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
4945,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
4946,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
4947,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
4948,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,# basic smoke test
4949,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4950,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4951,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4952,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4953,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4954,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4955,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4956,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4957,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4958,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
4959,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4960,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4961,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4962,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4963,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
4964,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4965,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4966,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4967,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
4968,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
4969,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4970,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4971,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,# basic smoke test
4972,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
4973,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
4974,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
4975,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
4976,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
4977,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
4978,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
4979,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
4980,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,# Default to UTF-8 file.encoding
4981,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
4982,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,"# this ""case"" statement is generated via ""update.sh"""
4983,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
4984,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
4985,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
4986,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,# basic smoke test
4987,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-oraclelinux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
4988,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
4989,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
4990,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
4991,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
4992,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
4993,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
4994,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
4995,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
4996,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
4997,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
4998,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
4999,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5000,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5001,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5002,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5003,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5004,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5005,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5006,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5007,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5008,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5009,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5010,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5011,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5012,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5013,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5014,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# arm64v8
5015,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# amd64
5016,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# fallback
5017,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5018,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5019,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5020,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5021,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5022,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,# basic smoke test
5023,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5024,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5025,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5026,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5027,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5028,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,#!/bin/sh'; \
5029,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5030,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5031,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5032,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5033,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5034,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5035,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5036,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5037,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5038,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5039,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5040,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5041,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
5042,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5043,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5044,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
5045,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,# backwards compatibility shim
5046,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5047,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5048,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# this ""case"" statement is generated via ""update.sh"""
5049,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5050,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
5051,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5052,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5053,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5054,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,# basic smoke test
5055,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5056,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5057,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5058,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5059,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5060,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,#!/bin/sh'; \
5061,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5062,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5063,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5064,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5065,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5066,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5067,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5068,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5069,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
5070,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5071,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,#!/bin/sh'; \
5072,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5073,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5074,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5075,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5076,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5077,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5078,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5079,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5080,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5081,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5082,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5083,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5084,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5085,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5086,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5087,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5088,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5089,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5090,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5091,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5092,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5093,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
5094,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5095,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5096,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5097,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5098,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5099,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5100,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5101,4365c863956250d758341b86035862b111269ed9,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5102,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5103,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5104,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
5105,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5106,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5107,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
5108,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# amd64
5109,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# fallback
5110,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5111,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5112,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
5113,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
5114,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5115,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5116,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5117,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5118,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5119,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
5120,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5121,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5122,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5123,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5124,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5125,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5126,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5127,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
5128,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5129,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
5130,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5131,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5132,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5133,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
5134,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5135,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5136,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,# basic smoke test
5137,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5138,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5139,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5140,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5141,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5142,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5143,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5144,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5145,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
5146,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5147,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5148,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5149,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
5150,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# backwards compatibility shim
5151,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5152,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5153,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5154,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5155,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5156,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5157,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5158,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
5159,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5160,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5161,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/Dockerfile,# basic smoke test
5162,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5163,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5164,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5165,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# backwards compatibility shim
5166,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5167,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5168,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5169,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5170,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5171,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5172,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5173,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
5174,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5175,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5176,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jre/Dockerfile,# basic smoke test
5177,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5178,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5179,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5180,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
5181,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# backwards compatibility shim
5182,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5183,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5184,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5185,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# arm64v8
5186,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# amd64
5187,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# fallback
5188,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5189,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
5190,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5191,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5192,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5193,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,# basic smoke test
5194,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5195,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5196,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5197,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5198,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5199,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5200,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5201,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,# basic smoke test
5202,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5203,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5204,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5205,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5206,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5207,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5208,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5209,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5210,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
5211,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5212,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
5213,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5214,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5215,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5216,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# backwards compatibility shim
5217,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5218,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
5219,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5220,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5221,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5222,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5223,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5224,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5225,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5226,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5227,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,# basic smoke test
5228,43078a246d7620f518412f458cc689ac869389ac,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5229,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5230,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5231,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5232,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
5233,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5234,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
5235,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5236,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
5237,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,# backwards compatibility shim
5238,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5239,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
5240,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5241,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5242,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5243,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
5244,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5245,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
5246,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5247,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5248,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,# basic smoke test
5249,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5250,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5251,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5252,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5253,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5254,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,#!/bin/sh'; \
5255,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5256,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5257,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5258,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5259,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5260,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5261,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5262,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5263,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5264,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5265,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5266,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
5267,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5268,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5269,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5270,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# backwards compatibility shim
5271,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5272,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5273,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5274,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5275,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5276,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5277,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5278,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
5279,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5280,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5281,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/slim/Dockerfile,# basic smoke test
5282,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5283,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5284,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5285,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5286,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5287,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5288,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5289,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5290,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,# basic smoke test
5291,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5292,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5293,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5294,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5295,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5296,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,#!/bin/sh'; \
5297,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5298,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5299,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5300,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5301,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5302,58ba04f37a289057ac53b4376773b03227dceb77,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5303,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5304,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5305,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5306,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5307,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5308,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5309,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5310,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
5311,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5312,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5313,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# amd64
5314,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# fallback
5315,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5316,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5317,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
5318,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
5319,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5320,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5321,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5322,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5323,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5324,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,#!/bin/sh'; \
5325,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5326,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5327,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5328,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5329,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5330,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5331,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5332,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5333,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5334,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5335,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
5336,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5337,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5338,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5339,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5340,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5341,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5342,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5343,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,# basic smoke test
5344,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5345,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5346,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5347,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
5348,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5349,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5350,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5351,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5352,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5353,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,#!/bin/sh'; \
5354,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5355,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5356,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5357,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5358,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5359,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5360,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5361,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5362,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5363,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5364,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5365,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
5366,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# backwards compatibility shim
5367,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5368,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5369,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5370,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
5371,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5372,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5373,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5374,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,# basic smoke test
5375,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5376,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5377,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5378,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5379,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5380,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5381,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5382,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5383,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
5384,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5385,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5386,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5387,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5388,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5389,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5390,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5391,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# amd64
5392,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# fallback
5393,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5394,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5395,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5396,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5397,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5398,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,# basic smoke test
5399,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5400,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5401,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5402,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
5403,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5404,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,#!/bin/sh'; \
5405,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5406,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5407,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5408,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5409,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5410,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5411,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5412,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5413,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5414,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5415,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5416,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
5417,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5418,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5419,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5420,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5421,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5422,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5423,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5424,6cc25ee35281099423e521713f710d2549209600,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5425,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5426,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5427,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5428,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5429,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5430,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5431,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5432,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5433,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5434,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
5435,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# backwards compatibility shim
5436,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5437,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
5438,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5439,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5440,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5441,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5442,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5443,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
5444,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5445,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5446,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/Dockerfile,# basic smoke test
5447,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5448,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5449,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5450,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5451,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,#!/bin/sh'; \
5452,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5453,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5454,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5455,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5456,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5457,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5458,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5459,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5460,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5461,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5462,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5463,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5464,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5465,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5466,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5467,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5468,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,# basic smoke test
5469,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5470,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5471,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5472,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
5473,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5474,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,"# this ""case"" statement is generated via ""update.sh"""
5475,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5476,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5477,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,# basic smoke test
5478,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5479,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5480,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5481,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5482,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
5483,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# backwards compatibility shim
5484,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5485,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# https://jdk.java.net/
5486,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5487,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
5488,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5489,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5490,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5491,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,# basic smoke test
5492,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5493,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5494,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5495,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5496,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
5497,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5498,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5499,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5500,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5501,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5502,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5503,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,# basic smoke test
5504,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5505,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5506,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5507,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5508,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5509,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5510,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5511,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5512,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5513,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5514,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5515,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5516,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5517,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5518,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
5519,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5520,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,#!/bin/sh'; \
5521,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5522,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5523,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5524,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5525,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5526,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5527,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5528,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5529,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5530,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5531,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-windows-servercore.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5532,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-windows-servercore.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5533,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-windows-servercore.template,# TODO signature? checksum?
5534,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5535,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5536,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5537,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
5538,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5539,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5540,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5541,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5542,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5543,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5544,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
5545,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5546,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5547,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5548,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5549,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5550,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5551,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5552,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5553,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5554,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5555,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5556,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5557,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5558,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5559,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5560,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5561,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5562,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5563,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
5564,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# backwards compatibility shim
5565,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5566,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# https://jdk.java.net/
5567,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5568,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
5569,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5570,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5571,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5572,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,# basic smoke test
5573,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5574,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5575,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5576,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5577,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5578,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5579,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5580,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
5581,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
5582,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5583,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,#!/bin/sh'; \
5584,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5585,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5586,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5587,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5588,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5589,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5590,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5591,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5592,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5593,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5594,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5595,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5596,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5597,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,#!/bin/sh'; \
5598,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5599,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5600,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5601,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5602,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5603,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5604,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5605,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
5606,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5607,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
5608,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
5609,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5610,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5611,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,# basic smoke test
5612,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5613,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5614,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5615,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5616,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5617,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
5618,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5619,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5620,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5621,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5622,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5623,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# backwards compatibility shim
5624,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5625,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5626,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5627,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5628,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5629,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5630,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5631,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,# basic smoke test
5632,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5633,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5634,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5635,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5636,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5637,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5638,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5639,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5640,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
5641,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# backwards compatibility shim
5642,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5643,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5644,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5645,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
5646,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5647,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5648,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5649,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,# basic smoke test
5650,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5651,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
5652,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5653,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5654,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
5655,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5656,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
5657,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5658,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
5659,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# backwards compatibility shim
5660,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5661,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
5662,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5663,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5664,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5665,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
5666,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5667,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
5668,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5669,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,# basic smoke test
5670,1733ab9061cf1a076dc0566e40edb600fc434db4,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5671,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5672,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5673,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5674,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5675,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5676,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5677,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5678,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5679,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5680,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5681,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
5682,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5683,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
5684,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5685,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5686,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5687,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# http://jdk.java.net/
5688,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5689,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
5690,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,# basic smoke test
5691,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5692,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5693,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5694,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
5695,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5696,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,#!/bin/sh'; \
5697,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5698,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5699,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5700,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5701,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5702,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5703,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5704,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
5705,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
5706,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5707,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,#!/bin/sh'; \
5708,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5709,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5710,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
5711,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5712,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5713,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5714,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5715,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5716,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5717,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5718,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5719,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5720,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5721,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5722,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5723,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5724,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
5725,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
5726,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5727,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5728,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5729,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5730,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# arm64v8
5731,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# amd64
5732,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# fallback
5733,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5734,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5735,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5736,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5737,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
5738,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5739,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5740,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,# basic smoke test
5741,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5742,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5743,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5744,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5745,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5746,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
5747,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5748,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5749,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5750,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5751,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,#!/bin/sh'; \
5752,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5753,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5754,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5755,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5756,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5757,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5758,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5759,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5760,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
5761,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5762,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,#!/bin/sh'; \
5763,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5764,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5765,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5766,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5767,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5768,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5769,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5770,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5771,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5772,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
5773,73bb0adbae399094463dec65d1cdec506860c7e2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5774,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5775,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5776,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
5777,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5778,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,#!/bin/sh'; \
5779,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5780,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5781,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5782,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5783,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5784,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5785,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5786,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5787,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5788,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
5789,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5790,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5791,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
5792,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5793,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5794,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,#!/bin/sh'; \
5795,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5796,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5797,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
5798,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
5799,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5800,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5801,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5802,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5803,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5804,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5805,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5806,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
5807,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5808,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
5809,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5810,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5811,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
5812,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5813,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5814,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5815,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5816,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
5817,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# backwards compatibility shim
5818,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5819,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
5820,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
5821,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
5822,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# amd64
5823,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# fallback
5824,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
5825,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
5826,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5827,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5828,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
5829,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5830,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5831,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/buster/Dockerfile,# basic smoke test
5832,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5833,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5834,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
5835,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5836,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
5837,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5838,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5839,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5840,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
5841,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5842,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5843,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5844,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5845,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5846,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5847,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5848,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5849,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5850,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5851,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5852,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5853,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5854,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
5855,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5856,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5857,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5858,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
5859,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5860,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-alpine.template,# http://jdk.java.net/
5861,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
5862,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
5863,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-alpine.template,# basic smoke test
5864,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5865,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5866,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
5867,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5868,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5869,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,#!/bin/sh'; \
5870,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5871,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5872,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5873,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5874,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5875,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5876,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5877,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5878,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5879,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5880,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5881,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5882,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5883,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5884,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5885,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
5886,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5887,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5888,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5889,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
5890,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5891,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,#!/bin/sh'; \
5892,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5893,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5894,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5895,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5896,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5897,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5898,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5899,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
5900,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
5901,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5902,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
5903,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
5904,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5905,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
5906,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5907,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
5908,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# backwards compatibility shim
5909,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5910,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
5911,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5912,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5913,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5914,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
5915,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5916,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
5917,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5918,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,# basic smoke test
5919,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5920,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
5921,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-nanoserver.template,# https://adoptopenjdk.net/upstream.html
5922,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-nanoserver.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5923,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5924,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5925,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5926,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5927,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5928,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,#!/bin/sh'; \
5929,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5930,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5931,1f4de8c3b677e8c74ac400ef8faa05d75df8d4de,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5932,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5933,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5934,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
5935,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5936,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,#!/bin/sh'; \
5937,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5938,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5939,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5940,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5941,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5942,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5943,0467df283134a79840c25808093c00f7c94b9a88,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5944,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5945,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5946,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5947,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
5948,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
5949,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
5950,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
5951,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
5952,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
5953,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
5954,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
5955,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
5956,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
5957,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
5958,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
5959,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
5960,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5961,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
5962,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
5963,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
5964,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
5965,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
5966,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,# basic smoke test
5967,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
5968,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
5969,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
5970,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# backwards compatibility shim
5971,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
5972,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
5973,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
5974,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
5975,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
5976,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
5977,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
5978,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
5979,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
5980,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
5981,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,# basic smoke test
5982,c202745eb5a8d4088c9d0726359f287c40e5ee71,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
5983,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5984,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5985,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
5986,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5987,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
5988,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
5989,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
5990,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
5991,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
5992,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
5993,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,#!/bin/sh'; \
5994,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
5995,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
5996,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
5997,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
5998,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
5999,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6000,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6001,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6002,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
6003,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6004,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,#!/bin/sh'; \
6005,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6006,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6007,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6008,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
6009,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6010,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6011,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6012,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6013,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6014,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6015,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6016,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6017,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6018,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6019,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6020,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6021,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6022,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6023,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6024,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# amd64
6025,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# fallback
6026,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
6027,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6028,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
6029,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6030,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6031,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6032,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6033,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6034,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6035,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
6036,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6037,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
6038,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6039,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
6040,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
6041,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6042,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
6043,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,# basic smoke test
6044,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6045,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6046,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6047,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6048,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
6049,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6050,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6051,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6052,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6053,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6054,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
6055,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6056,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6057,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6058,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6059,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6060,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6061,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6062,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6063,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6064,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6065,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6066,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6067,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6068,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6069,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# backwards compatibility shim
6070,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6071,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6072,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6073,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6074,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6075,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6076,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6077,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6078,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6079,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6080,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,# basic smoke test
6081,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6082,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6083,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6084,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6085,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6086,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6087,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6088,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# arm64v8
6089,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# amd64
6090,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# fallback
6091,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6092,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6093,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6094,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6095,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6096,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,# basic smoke test
6097,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6098,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6099,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6100,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
6101,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6102,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6103,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
6104,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# amd64
6105,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# fallback
6106,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6107,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6108,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
6109,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
6110,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6111,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6112,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# backwards compatibility shim
6113,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6114,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
6115,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6116,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6117,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6118,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6119,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,# basic smoke test
6120,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6121,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6122,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6123,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6124,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6125,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6126,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6127,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6128,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6129,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6130,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,#!/bin/sh'; \
6131,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6132,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6133,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6134,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6135,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6136,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6137,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6138,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6139,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6140,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
6141,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6142,17f7f8dc7e673127812e5c31b83937283beb7b12,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6143,17f7f8dc7e673127812e5c31b83937283beb7b12,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6144,17f7f8dc7e673127812e5c31b83937283beb7b12,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6145,17f7f8dc7e673127812e5c31b83937283beb7b12,/Dockerfile-oracle-alpine.template,# basic smoke test
6146,17f7f8dc7e673127812e5c31b83937283beb7b12,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6147,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6148,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6149,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6150,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6151,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,#!/bin/sh'; \
6152,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6153,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6154,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6155,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6156,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6157,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6158,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6159,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6160,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6161,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
6162,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6163,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,#!/bin/sh'; \
6164,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6165,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6166,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6167,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6168,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
6169,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6170,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6171,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6172,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6173,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
6174,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# backwards compatibility shim
6175,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6176,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6177,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6178,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
6179,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6180,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6181,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6182,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,# basic smoke test
6183,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6184,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6185,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6186,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
6187,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6188,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,#!/bin/sh'; \
6189,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6190,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6191,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6192,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6193,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6194,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6195,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6196,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6197,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6198,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6199,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
6200,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6201,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6202,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6203,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6204,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6205,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6206,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6207,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6208,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6209,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
6210,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,# backwards compatibility shim
6211,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6212,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
6213,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6214,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6215,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6216,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
6217,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,# basic smoke test
6218,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6219,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6220,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6221,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
6222,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6223,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,#!/bin/sh'; \
6224,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6225,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6226,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6227,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6228,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6229,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6230,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6231,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6232,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6233,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
6234,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6235,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6236,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6237,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6238,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6239,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6240,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6241,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6242,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6243,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6244,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
6245,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6246,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6247,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6248,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6249,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
6250,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6251,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6252,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6253,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6254,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6255,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6256,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6257,1ffa4d8285908a0524d4031315781c95025654b7,/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6258,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6259,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
6260,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6261,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6262,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6263,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
6264,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6265,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,"# this ""case"" statement is generated via ""update.sh"""
6266,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6267,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6268,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
6269,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,# basic smoke test
6270,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6271,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6272,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6273,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
6274,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6275,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,#!/bin/sh'; \
6276,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6277,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6278,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6279,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6280,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6281,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6282,4365c863956250d758341b86035862b111269ed9,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6283,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6284,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6285,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6286,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6287,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
6288,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6289,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6290,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6291,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6292,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6293,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6294,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6295,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6296,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6297,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6298,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6299,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6300,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6301,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6302,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6303,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6304,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6305,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6306,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6307,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6308,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6309,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6310,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6311,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,# basic smoke test
6312,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6313,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6314,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
6315,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6316,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6317,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
6318,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6319,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6320,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6321,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6322,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6323,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6324,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6325,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6326,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6327,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6328,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6329,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6330,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6331,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6332,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6333,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,#!/bin/sh'; \
6334,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6335,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6336,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6337,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6338,0467df283134a79840c25808093c00f7c94b9a88,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6339,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6340,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6341,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6342,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6343,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,#!/bin/sh'; \
6344,1c98a9032d1a19122074c4009326eade264903b7,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6345,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6346,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6347,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6348,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
6349,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6350,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6351,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6352,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6353,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6354,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6355,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6356,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,# basic smoke test
6357,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6358,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6359,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6360,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6361,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6362,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
6363,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6364,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6365,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6366,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6367,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6368,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6369,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6370,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
6371,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# backwards compatibility shim
6372,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6373,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6374,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6375,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# arm64v8
6376,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# amd64
6377,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# fallback
6378,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6379,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
6380,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6381,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6382,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6383,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,# basic smoke test
6384,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6385,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6386,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6387,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6388,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
6389,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# backwards compatibility shim
6390,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6391,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6392,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6393,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# arm64v8
6394,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# amd64
6395,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# fallback
6396,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6397,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
6398,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6399,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6400,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6401,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,# basic smoke test
6402,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6403,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
6404,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6405,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
6406,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# backwards compatibility shim
6407,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6408,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
6409,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6410,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6411,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6412,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
6413,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6414,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
6415,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6416,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,# basic smoke test
6417,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6418,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6419,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6420,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# backwards compatibility shim
6421,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6422,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6423,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6424,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6425,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6426,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6427,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6428,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,# basic smoke test
6429,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6430,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6431,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6432,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6433,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6434,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6435,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6436,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6437,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6438,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6439,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6440,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6441,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6442,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6443,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
6444,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,# basic smoke test
6445,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6446,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6447,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
6448,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,# backwards compatibility shim
6449,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6450,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
6451,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6452,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6453,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
6454,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,# basic smoke test
6455,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6456,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6457,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6458,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6459,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6460,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# backwards compatibility shim
6461,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6462,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6463,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6464,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6465,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6466,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6467,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6468,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,# basic smoke test
6469,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6470,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6471,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6472,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6473,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6474,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6475,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6476,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6477,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6478,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6479,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6480,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6481,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6482,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6483,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6484,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6485,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6486,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6487,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6488,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,# basic smoke test
6489,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6490,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6491,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6492,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
6493,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6494,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6495,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
6496,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6497,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6498,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6499,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6500,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6501,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6502,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6503,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6504,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6505,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
6506,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6507,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6508,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6509,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6510,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6511,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6512,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6513,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6514,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6515,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6516,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6517,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6518,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6519,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6520,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,# basic smoke test
6521,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6522,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6523,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6524,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6525,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6526,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6527,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6528,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6529,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# backwards compatibility shim
6530,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6531,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6532,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6533,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6534,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6535,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6536,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,# basic smoke test
6537,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6538,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6539,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6540,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
6541,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6542,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
6543,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6544,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6545,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6546,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6547,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6548,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6549,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# arm64v8
6550,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# amd64
6551,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# fallback
6552,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6553,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6554,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6555,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6556,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6557,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,# basic smoke test
6558,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6559,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6560,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6561,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6562,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6563,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6564,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6565,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6566,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6567,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6568,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
6569,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6570,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6571,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6572,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6573,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6574,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6575,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6576,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6577,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6578,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6579,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6580,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,#!/bin/sh'; \
6581,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6582,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6583,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6584,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
6585,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# backwards compatibility shim
6586,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6587,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6588,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6589,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6590,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# arm64v8
6591,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# amd64
6592,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# fallback
6593,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
6594,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
6595,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6596,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6597,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
6598,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6599,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6600,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/buster/Dockerfile,# basic smoke test
6601,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6602,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6603,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6604,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6605,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6606,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6607,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6608,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6609,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6610,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6611,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6612,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6613,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
6614,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6615,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6616,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
6617,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6618,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6619,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6620,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6621,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6622,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6623,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6624,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6625,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6626,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,#!/bin/sh'; \
6627,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6628,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6629,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6630,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6631,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6632,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6633,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6634,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6635,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6636,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6637,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
6638,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# backwards compatibility shim
6639,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6640,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6641,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6642,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# arm64v8
6643,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# amd64
6644,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# fallback
6645,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6646,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
6647,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6648,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6649,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6650,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,# basic smoke test
6651,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6652,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6653,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6654,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
6655,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6656,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
6657,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6658,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
6659,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6660,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6661,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6662,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6663,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
6664,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
6665,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
6666,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6667,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6668,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
6669,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6670,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,#!/bin/sh'; \
6671,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6672,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6673,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6674,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6675,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6676,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6677,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6678,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6679,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6680,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6681,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6682,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6683,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6684,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,#!/bin/sh'; \
6685,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6686,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6687,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6688,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6689,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6690,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6691,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6692,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6693,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
6694,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
6695,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
6696,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6697,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6698,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
6699,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
6700,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
6701,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6702,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,# basic smoke test
6703,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6704,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6705,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6706,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# backwards compatibility shim
6707,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6708,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
6709,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6710,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6711,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6712,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6713,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6714,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,# basic smoke test
6715,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6716,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6717,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6718,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6719,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6720,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6721,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6722,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6723,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6724,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
6725,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6726,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,#!/bin/sh'; \
6727,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6728,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6729,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6730,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6731,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6732,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6733,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6734,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6735,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6736,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
6737,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6738,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6739,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
6740,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6741,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6742,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
6743,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6744,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6745,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6746,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6747,8f86e66f070a110b2648004cc732683fb5224ed3,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6748,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6749,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6750,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6751,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
6752,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# backwards compatibility shim
6753,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6754,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# https://jdk.java.net/
6755,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6756,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
6757,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6758,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6759,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6760,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,# basic smoke test
6761,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6762,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6763,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6764,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6765,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
6766,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6767,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
6768,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,# Default to UTF-8 file.encoding
6769,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,# backwards compatibility shim
6770,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6771,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6772,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6773,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,#!/usr/bin/env bash'; \
6774,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6775,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6776,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6777,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,# basic smoke test
6778,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6779,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-slim.template,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
6780,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6781,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
6782,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6783,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6784,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,#!/bin/sh'; \
6785,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6786,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6787,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6788,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6789,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6790,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6791,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6792,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6793,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6794,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6795,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# backwards compatibility shim
6796,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6797,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6798,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6799,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# arm64v8
6800,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# amd64
6801,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# fallback
6802,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6803,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6804,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6805,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6806,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6807,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,# basic smoke test
6808,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6809,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6810,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6811,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6812,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6813,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6814,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6815,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6816,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# backwards compatibility shim
6817,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6818,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
6819,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6820,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6821,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6822,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6823,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6824,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
6825,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6826,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6827,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/slim/Dockerfile,# basic smoke test
6828,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6829,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6830,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6831,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
6832,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6833,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6834,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6835,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6836,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
6837,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6838,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6839,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6840,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6841,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
6842,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# backwards compatibility shim
6843,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6844,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6845,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6846,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# arm64v8
6847,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# amd64
6848,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# fallback
6849,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6850,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
6851,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6852,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6853,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6854,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,# basic smoke test
6855,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6856,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6857,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
6858,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# backwards compatibility shim
6859,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6860,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
6861,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6862,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6863,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6864,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jre/Dockerfile,# basic smoke test
6865,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6866,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6867,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
6868,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6869,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,#!/bin/sh'; \
6870,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6871,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6872,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
6873,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6874,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
6875,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# backwards compatibility shim
6876,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6877,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6878,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6879,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
6880,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6881,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6882,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6883,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,# basic smoke test
6884,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6885,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6886,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6887,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6888,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
6889,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6890,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6891,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6892,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
6893,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6894,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,#!/bin/sh'; \
6895,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6896,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6897,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6898,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6899,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6900,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6901,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6902,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6903,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6904,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6905,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6906,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6907,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-servercore.template,# https://adoptopenjdk.net/upstream.html
6908,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-servercore.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6909,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-servercore.template,# TODO signature? checksum?
6910,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-adopt-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6911,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6912,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6913,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6914,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
6915,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6916,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6917,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6918,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
6919,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6920,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
6921,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# backwards compatibility shim
6922,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6923,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
6924,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
6925,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
6926,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
6927,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
6928,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/Dockerfile,# basic smoke test
6929,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6930,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
6931,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# backwards compatibility shim
6932,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6933,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
6934,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6935,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# arm64v8
6936,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# amd64
6937,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# fallback
6938,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6939,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
6940,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6941,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6942,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6943,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,# basic smoke test
6944,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6945,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
6946,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
6947,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6948,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6949,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
6950,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6951,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,#!/bin/sh'; \
6952,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6953,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6954,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6955,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6956,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6957,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6958,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6959,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
6960,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
6961,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
6962,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
6963,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,#!/bin/sh'; \
6964,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
6965,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
6966,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
6967,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
6968,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
6969,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
6970,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/Dockerfile-oracle-alpine.template,# https://jdk.java.net/
6971,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
6972,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6973,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/Dockerfile-oracle-alpine.template,# basic smoke test
6974,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
6975,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
6976,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
6977,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
6978,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
6979,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
6980,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
6981,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
6982,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
6983,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
6984,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
6985,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
6986,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# arm64v8
6987,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# amd64
6988,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# fallback
6989,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
6990,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
6991,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
6992,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
6993,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
6994,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,# basic smoke test
6995,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
6996,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
6997,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
6998,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# backwards compatibility shim
6999,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7000,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
7001,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7002,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7003,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7004,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/Dockerfile,# basic smoke test
7005,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7006,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7007,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7008,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7009,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7010,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7011,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7012,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7013,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
7014,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7015,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7016,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7017,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7018,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7019,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7020,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
7021,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7022,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7023,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,# basic smoke test
7024,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7025,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7026,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7027,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# backwards compatibility shim
7028,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7029,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7030,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7031,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# arm64v8
7032,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# amd64
7033,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# fallback
7034,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7035,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7036,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7037,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7038,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7039,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,# basic smoke test
7040,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7041,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7042,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7043,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7044,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7045,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
7046,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7047,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7048,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7049,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7050,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,# basic smoke test
7051,4e8fbef2ba9c8280d8c5243736d8a20ee784acc0,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7052,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7053,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7054,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
7055,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7056,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,#!/bin/sh'; \
7057,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7058,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7059,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7060,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7061,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7062,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7063,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7064,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7065,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7066,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7067,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7068,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7069,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7070,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7071,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7072,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7073,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
7074,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# backwards compatibility shim
7075,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7076,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7077,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7078,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# arm64v8
7079,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# amd64
7080,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# fallback
7081,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7082,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
7083,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7084,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7085,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7086,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,# basic smoke test
7087,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7088,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7089,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7090,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7091,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7092,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7093,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7094,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7095,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7096,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,#!/bin/sh'; \
7097,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7098,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7099,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
7100,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7101,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7102,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7103,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7104,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7105,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7106,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7107,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
7108,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7109,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,#!/bin/sh'; \
7110,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7111,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7112,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7113,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7114,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7115,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7116,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7117,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7118,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
7119,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7120,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7121,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7122,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7123,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7124,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7125,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7126,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7127,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
7128,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# backwards compatibility shim
7129,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7130,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
7131,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7132,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
7133,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
7134,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7135,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7136,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
7137,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7138,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7139,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/Dockerfile,# basic smoke test
7140,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7141,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7142,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7143,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7144,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7145,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7146,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7147,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7148,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7149,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,#!/bin/sh'; \
7150,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7151,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7152,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7153,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7154,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7155,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7156,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7157,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7158,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7159,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7160,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7161,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7162,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7163,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7164,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7165,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7166,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7167,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7168,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7169,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,#!/bin/sh'; \
7170,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7171,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7172,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
7173,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7174,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7175,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7176,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7177,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7178,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7179,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7180,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7181,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,#!/bin/sh'; \
7182,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7183,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7184,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7185,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7186,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7187,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7188,c7846edc14a25304288c85e2e7bebe4609626512,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7189,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7190,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7191,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7192,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7193,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,#!/bin/sh'; \
7194,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7195,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7196,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7197,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7198,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7199,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7200,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7201,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7202,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
7203,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7204,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7205,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,# basic smoke test
7206,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7207,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7208,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
7209,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
7210,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7211,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7212,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7213,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7214,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# amd64
7215,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# fallback
7216,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7217,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7218,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7219,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7220,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
7221,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7222,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7223,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/slim-buster/Dockerfile,# basic smoke test
7224,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7225,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7226,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
7227,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7228,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,#!/bin/sh'; \
7229,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7230,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7231,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7232,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7233,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7234,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7235,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7236,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7237,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7238,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7239,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
7240,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7241,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,#!/bin/sh'; \
7242,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7243,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7244,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7245,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7246,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7247,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7248,02a49915095f254cbf321292ab7a021529686448,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7249,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7250,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7251,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7252,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7253,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7254,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7255,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7256,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
7257,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7258,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7259,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,# basic smoke test
7260,554ff38a160f896ddd7f0fdca1cd34817e253a56,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7261,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7262,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7263,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7264,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7265,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7266,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7267,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,#!/bin/sh'; \
7268,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7269,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7270,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
7271,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7272,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7273,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7274,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7275,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7276,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7277,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7278,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7279,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7280,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7281,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7282,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7283,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7284,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7285,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7286,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7287,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7288,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7289,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,#!/bin/sh'; \
7290,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7291,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7292,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7293,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7294,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7295,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7296,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7297,86918ee28d383e7af63f535a2558040dce141099,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7298,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7299,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
7300,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# backwards compatibility shim
7301,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7302,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7303,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7304,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7305,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# amd64
7306,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# fallback
7307,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7308,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7309,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7310,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7311,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
7312,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7313,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7314,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/slim-buster/Dockerfile,# basic smoke test
7315,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7316,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7317,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7318,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
7319,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7320,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7321,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7322,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7323,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
7324,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# backwards compatibility shim
7325,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7326,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# https://jdk.java.net/
7327,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7328,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
7329,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7330,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7331,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7332,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,# basic smoke test
7333,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7334,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7335,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7336,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7337,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7338,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7339,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7340,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
7341,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7342,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7343,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,# basic smoke test
7344,0eaa6df40abaea34badc34eaeb1ec04c35ba3d60,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7345,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7346,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7347,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7348,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7349,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
7350,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7351,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7352,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7353,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7354,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7355,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7356,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# http://jdk.java.net/
7357,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7358,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7359,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,# basic smoke test
7360,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7361,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7362,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
7363,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7364,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7365,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7366,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7367,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7368,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7369,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7370,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7371,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7372,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7373,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
7374,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7375,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,#!/bin/sh'; \
7376,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7377,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7378,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7379,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7380,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7381,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7382,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7383,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
7384,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7385,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7386,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7387,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7388,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
7389,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7390,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7391,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
7392,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# amd64
7393,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# fallback
7394,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7395,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7396,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7397,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
7398,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7399,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
7400,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7401,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7402,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,# basic smoke test
7403,643875b428551d5e2395e91933e9babc73044bc9,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7404,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7405,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7406,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7407,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7408,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7409,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7410,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,# basic smoke test
7411,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7412,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7413,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7414,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7415,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7416,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7417,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7418,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7419,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7420,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7421,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7422,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7423,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7424,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7425,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7426,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7427,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7428,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
7429,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7430,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7431,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7432,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
7433,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/Dockerfile-oracle-alpine.template,# basic smoke test
7434,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7435,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7436,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7437,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7438,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7439,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
7440,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7441,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7442,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7443,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7444,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
7445,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7446,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7447,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7448,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7449,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
7450,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7451,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7452,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7453,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7454,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
7455,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7456,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7457,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7458,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7459,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7460,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7461,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7462,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7463,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7464,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7465,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7466,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7467,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7468,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7469,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7470,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7471,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# arm64v8
7472,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# amd64
7473,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# fallback
7474,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7475,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7476,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7477,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,# basic smoke test
7478,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7479,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7480,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7481,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7482,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7483,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7484,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7485,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
7486,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7487,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,#!/bin/sh'; \
7488,d183725a5acda253132f21011fe903f3924e7e12,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7489,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7490,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7491,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
7492,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7493,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7494,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,# basic smoke test
7495,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7496,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7497,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
7498,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7499,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7500,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7501,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7502,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7503,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# backwards compatibility shim
7504,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7505,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7506,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7507,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7508,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7509,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7510,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7511,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
7512,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7513,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7514,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/slim/Dockerfile,# basic smoke test
7515,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7516,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7517,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7518,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7519,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7520,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7521,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7522,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7523,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
7524,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7525,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7526,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7527,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7528,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
7529,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7530,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7531,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7532,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
7533,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7534,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,#!/bin/sh'; \
7535,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7536,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7537,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7538,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7539,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7540,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7541,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7542,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7543,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
7544,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7545,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
7546,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
7547,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,# Default to UTF-8 file.encoding
7548,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,# backwards compatibility shim
7549,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7550,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7551,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7552,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
7553,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7554,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7555,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
7556,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7557,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,#!/usr/bin/env bash'; \
7558,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7559,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7560,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,# basic smoke test
7561,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7562,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7563,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7564,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
7565,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7566,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
7567,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7568,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7569,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7570,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7571,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7572,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7573,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7574,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7575,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7576,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
7577,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
7578,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7579,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
7580,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,# basic smoke test
7581,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7582,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7583,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7584,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7585,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7586,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7587,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7588,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7589,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7590,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7591,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7592,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7593,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7594,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7595,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7596,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7597,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7598,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7599,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7600,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7601,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7602,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7603,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7604,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7605,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7606,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7607,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7608,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7609,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7610,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7611,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7612,ab157251df23dd65820061df29cf063449a77fbb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7613,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7614,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7615,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7616,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
7617,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# backwards compatibility shim
7618,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7619,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7620,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7621,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# amd64
7622,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# fallback
7623,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7624,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
7625,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7626,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7627,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7628,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,# basic smoke test
7629,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7630,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7631,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7632,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
7633,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7634,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7635,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7636,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
7637,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7638,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7639,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
7640,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# amd64
7641,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# fallback
7642,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7643,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7644,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7645,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
7646,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7647,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7648,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7649,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
7650,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7651,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
7652,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7653,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7654,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7655,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7656,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7657,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
7658,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7659,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7660,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/slim/Dockerfile,# basic smoke test
7661,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7662,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7663,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7664,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7665,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
7666,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7667,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7668,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7669,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
7670,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7671,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7672,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7673,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,# Default to UTF-8 file.encoding
7674,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7675,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,"# this ""case"" statement is generated via ""update.sh"""
7676,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7677,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7678,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7679,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,# basic smoke test
7680,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-oraclelinux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7681,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7682,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7683,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7684,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7685,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7686,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7687,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7688,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7689,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7690,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7691,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
7692,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# amd64
7693,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# fallback
7694,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7695,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7696,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7697,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
7698,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7699,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7700,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7701,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7702,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7703,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7704,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# arm64v8
7705,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# amd64
7706,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# fallback
7707,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7708,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7709,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,# basic smoke test
7710,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7711,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7712,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7713,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
7714,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# backwards compatibility shim
7715,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7716,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7717,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7718,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7719,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7720,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7721,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7722,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
7723,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7724,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7725,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/Dockerfile,# basic smoke test
7726,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7727,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7728,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7729,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
7730,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7731,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7732,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7733,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
7734,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7735,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7736,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
7737,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# amd64
7738,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# fallback
7739,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7740,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7741,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
7742,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
7743,566a953c64f0d40b247eea76872d04d4b84f5481,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7744,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7745,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-servercore.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7746,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7747,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-servercore.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
7748,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7749,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7750,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7751,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7752,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7753,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
7754,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7755,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7756,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7757,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7758,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7759,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7760,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7761,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7762,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7763,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7764,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7765,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7766,5dba2054c6821e38a6d3fad32239369818289228,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
7767,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7768,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7769,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7770,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
7771,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7772,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7773,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7774,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7775,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/Dockerfile-oracle-alpine.template,# basic smoke test
7776,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7777,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7778,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7779,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7780,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
7781,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
7782,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
7783,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7784,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7785,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7786,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
7787,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7788,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7789,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7790,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,# basic smoke test
7791,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7792,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7793,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7794,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7795,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7796,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
7797,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7798,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,#!/bin/sh'; \
7799,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7800,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7801,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7802,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7803,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7804,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7805,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7806,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7807,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7808,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
7809,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7810,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7811,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7812,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7813,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7814,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7815,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7816,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7817,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7818,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7819,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
7820,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7821,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,#!/bin/sh'; \
7822,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7823,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7824,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7825,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7826,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7827,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7828,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
7829,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# backwards compatibility shim
7830,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7831,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7832,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
7833,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# amd64
7834,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# fallback
7835,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7836,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
7837,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7838,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7839,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7840,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,# basic smoke test
7841,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7842,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7843,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7844,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7845,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
7846,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7847,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7848,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
7849,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
7850,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7851,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
7852,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7853,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7854,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7855,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7856,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7857,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7858,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7859,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7860,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
7861,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7862,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,#!/bin/sh'; \
7863,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7864,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7865,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
7866,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7867,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7868,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7869,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7870,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7871,06552bdff28039988fca96ec7f810456849d420f,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
7872,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7873,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
7874,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
7875,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7876,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
7877,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7878,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7879,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7880,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7881,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
7882,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7883,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
7884,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7885,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
7886,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7887,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
7888,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7889,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,# basic smoke test
7890,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7891,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7892,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
7893,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
7894,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7895,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,#!/bin/sh'; \
7896,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7897,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7898,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7899,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7900,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7901,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7902,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7903,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7904,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7905,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
7906,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7907,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
7908,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
7909,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
7910,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,# basic smoke test
7911,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
7912,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7913,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7914,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7915,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7916,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,#!/bin/sh'; \
7917,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7918,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7919,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7920,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7921,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7922,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7923,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7924,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7925,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7926,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7927,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
7928,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7929,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
7930,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
7931,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7932,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# backwards compatibility shim
7933,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
7934,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
7935,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
7936,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
7937,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
7938,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
7939,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
7940,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
7941,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
7942,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
7943,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,# basic smoke test
7944,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
7945,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7946,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7947,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7948,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
7949,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7950,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7951,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7952,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
7953,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7954,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,#!/bin/sh'; \
7955,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7956,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7957,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7958,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7959,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7960,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7961,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7962,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
7963,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
7964,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
7965,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
7966,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
7967,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7968,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
7969,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
7970,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7971,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,#!/bin/sh'; \
7972,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7973,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
7974,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7975,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7976,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7977,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
7978,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
7979,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7980,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
7981,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
7982,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7983,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,#!/bin/sh'; \
7984,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7985,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7986,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
7987,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7988,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
7989,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
7990,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
7991,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
7992,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
7993,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
7994,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
7995,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,#!/bin/sh'; \
7996,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
7997,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
7998,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
7999,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8000,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8001,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8002,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8003,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8004,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8005,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
8006,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8007,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,#!/bin/sh'; \
8008,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8009,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8010,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8011,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8012,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8013,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8014,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8015,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8016,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8017,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8018,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8019,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8020,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# amd64
8021,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# fallback
8022,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8023,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8024,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8025,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
8026,566a953c64f0d40b247eea76872d04d4b84f5481,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8027,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8028,bcf0fea5a62cb2a75015e2dc2ce05bbc89afcd7d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8029,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8030,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8031,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8032,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8033,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8034,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8035,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8036,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8037,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
8038,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8039,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,#!/bin/sh'; \
8040,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8041,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8042,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8043,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8044,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8045,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8046,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8047,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8048,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
8049,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# backwards compatibility shim
8050,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8051,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
8052,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8053,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8054,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8055,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8056,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8057,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
8058,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8059,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8060,451e66427f3c53fada288aaff950617c5864745f,/8/jre/Dockerfile,# basic smoke test
8061,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8062,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8063,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
8064,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# backwards compatibility shim
8065,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8066,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8067,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8068,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8069,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8070,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8071,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8072,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
8073,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8074,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8075,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/Dockerfile,# basic smoke test
8076,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8077,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8078,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8079,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# backwards compatibility shim
8080,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8081,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
8082,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8083,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8084,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8085,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8086,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8087,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
8088,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8089,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8090,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,# basic smoke test
8091,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8092,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8093,ef8af39fafdaaf4eeb8137c194aa8a51f8c56334,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8094,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8095,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8096,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8097,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8098,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,#!/bin/bash'; \
8099,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8100,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8101,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8102,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8103,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8104,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8105,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8106,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8107,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8108,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8109,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
8110,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# backwards compatibility shim
8111,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8112,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8113,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8114,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8115,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8116,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8117,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8118,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
8119,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8120,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8121,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/Dockerfile,# basic smoke test
8122,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8123,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8124,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
8125,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# backwards compatibility shim
8126,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8127,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
8128,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8129,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8130,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8131,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8132,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8133,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
8134,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8135,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8136,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/Dockerfile,# basic smoke test
8137,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8138,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8139,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
8140,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8141,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,#!/bin/sh'; \
8142,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8143,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8144,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8145,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
8146,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
8147,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# backwards compatibility shim
8148,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8149,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
8150,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8151,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8152,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8153,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
8154,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8155,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
8156,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8157,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8158,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,# basic smoke test
8159,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8160,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8161,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8162,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
8163,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8164,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8165,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,# basic smoke test
8166,2544422915ae09bf77b02f0afaadaad5ba204cef,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8167,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8168,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8169,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8170,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8171,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8172,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8173,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,# basic smoke test
8174,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8175,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8176,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8177,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8178,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8179,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,#!/bin/sh'; \
8180,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8181,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8182,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8183,882461ade8207de7647d083009200de85eb978bc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8184,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8185,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8186,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8187,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8188,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,#!/bin/sh'; \
8189,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8190,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8191,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8192,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8193,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8194,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8195,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8196,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8197,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8198,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8199,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8200,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8201,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8202,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8203,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8204,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8205,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8206,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8207,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# backwards compatibility shim
8208,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8209,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8210,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8211,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8212,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8213,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8214,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8215,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8216,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8217,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8218,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/slim/Dockerfile,# basic smoke test
8219,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8220,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8221,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8222,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8223,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,#!/bin/sh'; \
8224,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8225,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8226,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8227,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8228,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8229,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8230,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8231,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8232,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8233,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8234,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8235,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8236,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8237,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8238,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
8239,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-oracle.template,# https://jdk.java.net/
8240,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8241,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8242,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-oracle.template,# basic smoke test
8243,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8244,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8245,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8246,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8247,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8248,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8249,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8250,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8251,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8252,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,#!/bin/sh'; \
8253,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8254,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8255,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
8256,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8257,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8258,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8259,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8260,58ba04f37a289057ac53b4376773b03227dceb77,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8261,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8262,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8263,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8264,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
8265,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# backwards compatibility shim
8266,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8267,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8268,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8269,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
8270,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8271,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8272,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8273,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,# basic smoke test
8274,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8275,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
8276,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
8277,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8278,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,# basic smoke test
8279,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8280,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8281,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8282,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
8283,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8284,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,#!/bin/sh'; \
8285,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8286,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8287,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8288,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8289,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8290,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8291,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8292,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8293,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
8294,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8295,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8296,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,# basic smoke test
8297,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8298,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8299,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8300,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8301,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8302,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8303,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8304,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8305,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8306,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8307,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8308,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8309,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8310,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8311,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8312,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8313,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8314,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8315,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8316,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8317,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8318,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8319,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
8320,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8321,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,#!/bin/sh'; \
8322,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8323,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8324,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8325,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8326,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8327,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8328,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8329,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8330,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8331,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
8332,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8333,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,#!/bin/sh'; \
8334,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8335,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8336,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8337,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8338,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8339,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
8340,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8341,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8342,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8343,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8344,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8345,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8346,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8347,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8348,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# backwards compatibility shim
8349,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8350,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
8351,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8352,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8353,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8354,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8355,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8356,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
8357,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8358,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8359,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,# basic smoke test
8360,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8361,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8362,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8363,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# backwards compatibility shim
8364,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8365,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8366,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8367,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8368,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8369,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8370,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8371,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8372,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8373,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,# basic smoke test
8374,45a43909f241296d22849489dcc58c06059660c6,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8375,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8376,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8377,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8378,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8379,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8380,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
8381,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8382,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,#!/bin/sh'; \
8383,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8384,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8385,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8386,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8387,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8388,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8389,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8390,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8391,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8392,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8393,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8394,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8395,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,#!/bin/sh'; \
8396,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8397,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8398,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8399,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8400,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8401,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,#!/bin/sh'; \
8402,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8403,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8404,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8405,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8406,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8407,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8408,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8409,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8410,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8411,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8412,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8413,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8414,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8415,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8416,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
8417,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8418,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8419,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
8420,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8421,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8422,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8423,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
8424,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8425,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8426,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,# basic smoke test
8427,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8428,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8429,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
8430,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8431,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8432,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8433,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8434,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8435,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8436,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8437,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8438,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# backwards compatibility shim
8439,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8440,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8441,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8442,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8443,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8444,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8445,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8446,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,# basic smoke test
8447,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8448,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8449,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8450,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8451,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8452,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8453,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,#!/bin/sh'; \
8454,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8455,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8456,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8457,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8458,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8459,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8460,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8461,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8462,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8463,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8464,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8465,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8466,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8467,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8468,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8469,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8470,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,#!/bin/sh'; \
8471,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8472,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8473,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
8474,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8475,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8476,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8477,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8478,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8479,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8480,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8481,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
8482,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8483,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8484,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8485,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8486,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8487,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,#!/bin/sh'; \
8488,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8489,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8490,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8491,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8492,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8493,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8494,2e23069b35737d02166d86d25088a02330a7ac96,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8495,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8496,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8497,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
8498,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8499,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,#!/bin/sh'; \
8500,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8501,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8502,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8503,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8504,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8505,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8506,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
8507,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8508,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,#!/bin/sh'; \
8509,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8510,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8511,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8512,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8513,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8514,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8515,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8516,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
8517,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8518,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8519,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8520,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8521,6cc25ee35281099423e521713f710d2549209600,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8522,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8523,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8524,4135ad55c2577bd722c575a41211c59669353d54,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
8525,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8526,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8527,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8528,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8529,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8530,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8531,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,# basic smoke test
8532,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8533,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8534,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8535,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
8536,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8537,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,#!/bin/sh'; \
8538,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8539,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8540,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8541,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8542,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8543,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8544,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8545,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8546,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8547,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8548,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8549,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# backwards compatibility shim
8550,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8551,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8552,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8553,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8554,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8555,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8556,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8557,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,# basic smoke test
8558,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8559,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8560,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8561,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8562,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
8563,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# backwards compatibility shim
8564,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8565,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8566,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8567,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
8568,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8569,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8570,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8571,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,# basic smoke test
8572,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8573,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8574,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8575,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8576,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
8577,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8578,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8579,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8580,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
8581,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
8582,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
8583,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8584,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8585,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8586,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8587,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8588,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8589,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8590,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8591,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8592,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
8593,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8594,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8595,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8596,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8597,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8598,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8599,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8600,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8601,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8602,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8603,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8604,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8605,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8606,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
8607,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8608,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,#!/bin/sh'; \
8609,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8610,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8611,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8612,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8613,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8614,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8615,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8616,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8617,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8618,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8619,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8620,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8621,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8622,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
8623,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8624,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8625,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8626,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8627,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
8628,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8629,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8630,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,# basic smoke test
8631,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8632,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8633,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8634,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8635,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8636,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
8637,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8638,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8639,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8640,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8641,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8642,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8643,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8644,31741b6c2bbe2625e783288664245136ffe9533c,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8645,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8646,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8647,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8648,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8649,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8650,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# amd64
8651,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# fallback
8652,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8653,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8654,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8655,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
8656,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8657,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8658,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-windows.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8659,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8660,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-windows.template,# https://jdk.java.net/
8661,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-windows.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8662,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8663,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8664,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8665,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8666,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
8667,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8668,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8669,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8670,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8671,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8672,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8673,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8674,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8675,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8676,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8677,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8678,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8679,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# arm64v8
8680,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# amd64
8681,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# fallback
8682,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8683,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8684,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8685,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8686,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8687,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,# basic smoke test
8688,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8689,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8690,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8691,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
8692,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# backwards compatibility shim
8693,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8694,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8695,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8696,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
8697,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
8698,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8699,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8700,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
8701,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8702,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8703,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,# basic smoke test
8704,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8705,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8706,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
8707,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8708,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# amd64
8709,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# fallback
8710,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
8711,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8712,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,# basic smoke test
8713,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8714,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8715,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8716,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
8717,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8718,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
8719,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
8720,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8721,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8722,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8723,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8724,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8725,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8726,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8727,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-servercore.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8728,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8729,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-servercore.template,# https://jdk.java.net/
8730,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-servercore.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8731,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8732,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8733,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8734,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8735,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8736,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8737,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8738,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8739,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8740,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8741,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# Default to UTF-8 file.encoding
8742,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8743,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,#!/bin/sh'; \
8744,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8745,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8746,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8747,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8748,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8749,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8750,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8751,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8752,b5fc89ceebc210c08a2b82709dd2a92fcebbae38,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8753,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8754,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8755,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8756,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
8757,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8758,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8759,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,# basic smoke test
8760,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8761,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8762,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
8763,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8764,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8765,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,#!/bin/sh'; \
8766,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8767,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8768,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
8769,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8770,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8771,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8772,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8773,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8774,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8775,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
8776,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8777,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8778,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8779,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
8780,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8781,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8782,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8783,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,# basic smoke test
8784,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8785,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8786,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8787,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
8788,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8789,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
8790,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8791,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8792,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8793,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8794,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8795,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# backwards compatibility shim
8796,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8797,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8798,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8799,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8800,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8801,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8802,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8803,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,# basic smoke test
8804,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8805,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8806,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8807,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
8808,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8809,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8810,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,# basic smoke test
8811,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8812,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8813,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8814,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8815,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
8816,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8817,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8818,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8819,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8820,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8821,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8822,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
8823,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# amd64
8824,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# fallback
8825,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8826,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8827,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8828,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
8829,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8830,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8831,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8832,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8833,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8834,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8835,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
8836,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-nanoserver.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8837,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-nanoserver.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8838,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8839,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8840,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8841,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
8842,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8843,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8844,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,# basic smoke test
8845,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8846,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8847,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
8848,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8849,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8850,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
8851,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8852,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8853,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8854,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8855,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8856,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8857,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8858,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8859,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8860,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# backwards compatibility shim
8861,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8862,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8863,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8864,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
8865,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8866,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8867,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8868,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,# basic smoke test
8869,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8870,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
8871,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8872,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
8873,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8874,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
8875,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
8876,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8877,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
8878,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
8879,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8880,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
8881,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8882,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8883,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
8884,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
8885,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
8886,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
8887,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8888,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8889,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
8890,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
8891,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8892,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
8893,38cb0eb077acf2a429f32a879903cd305733d561,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8894,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8895,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
8896,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
8897,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8898,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8899,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8900,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# arm64v8
8901,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# amd64
8902,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# fallback
8903,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8904,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
8905,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8906,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8907,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8908,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,# basic smoke test
8909,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8910,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8911,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
8912,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
8913,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8914,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
8915,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,# basic smoke test
8916,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
8917,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
8918,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# backwards compatibility shim
8919,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8920,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8921,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8922,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8923,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8924,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,# basic smoke test
8925,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8926,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8927,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
8928,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
8929,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8930,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,#!/bin/sh'; \
8931,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8932,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
8933,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8934,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8935,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8936,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
8937,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8938,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
8939,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8940,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8941,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8942,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8943,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
8944,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# backwards compatibility shim
8945,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8946,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
8947,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8948,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# arm64v8
8949,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# amd64
8950,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# fallback
8951,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8952,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
8953,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8954,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8955,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8956,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,# basic smoke test
8957,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8958,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
8959,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
8960,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# backwards compatibility shim
8961,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
8962,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
8963,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8964,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
8965,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
8966,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
8967,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
8968,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
8969,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
8970,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
8971,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/slim/Dockerfile,# basic smoke test
8972,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
8973,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
8974,15835397954c9ec123e42e685035ecd239e0a1db,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
8975,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
8976,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
8977,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
8978,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
8979,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
8980,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
8981,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# amd64
8982,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# fallback
8983,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
8984,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
8985,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
8986,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
8987,566a953c64f0d40b247eea76872d04d4b84f5481,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
8988,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
8989,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
8990,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
8991,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
8992,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,#!/bin/sh'; \
8993,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
8994,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
8995,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
8996,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
8997,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
8998,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
8999,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9000,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9001,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9002,42abb498353aae46a5766659faf3853edc441bde,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9003,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9004,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9005,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9006,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9007,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9008,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9009,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9010,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
9011,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9012,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9013,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9014,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9015,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9016,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9017,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9018,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9019,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,#!/bin/sh'; \
9020,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9021,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9022,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9023,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9024,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9025,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9026,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9027,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9028,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9029,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9030,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9031,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9032,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9033,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9034,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9035,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# backwards compatibility shim
9036,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9037,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9038,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9039,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# arm64v8
9040,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# amd64
9041,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# fallback
9042,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9043,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9044,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9045,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9046,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9047,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,# basic smoke test
9048,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9049,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9050,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9051,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9052,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9053,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9054,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
9055,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9056,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
9057,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,# backwards compatibility shim
9058,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9059,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
9060,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9061,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9062,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9063,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
9064,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9065,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
9066,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9067,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9068,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,# basic smoke test
9069,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9070,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9071,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9072,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
9073,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9074,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9075,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
9076,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# amd64
9077,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# fallback
9078,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9079,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9080,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
9081,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
9082,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9083,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9084,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9085,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9086,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9087,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9088,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9089,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9090,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9091,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9092,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9093,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9094,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,# basic smoke test
9095,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9096,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9097,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
9098,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
9099,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9100,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,#!/bin/sh'; \
9101,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9102,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9103,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
9104,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9105,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9106,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9107,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9108,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9109,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9110,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9111,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9112,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9113,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9114,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9115,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9116,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9117,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9118,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9119,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9120,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9121,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9122,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9123,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
9124,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
9125,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9126,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9127,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9128,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# amd64
9129,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# fallback
9130,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9131,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
9132,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9133,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9134,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9135,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,# basic smoke test
9136,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9137,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
9138,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9139,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9140,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,# basic smoke test
9141,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9142,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9143,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9144,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9145,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9146,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9147,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# arm64v8
9148,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# amd64
9149,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# fallback
9150,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9151,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9152,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
9153,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,# basic smoke test
9154,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9155,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9156,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9157,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9158,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9159,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9160,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9161,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# backwards compatibility shim
9162,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9163,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9164,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9165,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9166,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9167,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9168,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9169,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
9170,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9171,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/slim/Dockerfile,# basic smoke test
9172,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9173,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9174,6294b7d4b299639ec519dfd92782632f498eb1d2,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9175,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9176,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9177,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9178,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9179,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,#!/bin/sh'; \
9180,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9181,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9182,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9183,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9184,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9185,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9186,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9187,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9188,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
9189,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9190,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9191,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
9192,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# amd64
9193,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# fallback
9194,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9195,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9196,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
9197,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
9198,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9199,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9200,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9201,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9202,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-alpine.template,# basic smoke test
9203,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9204,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9205,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9206,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
9207,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9208,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9209,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
9210,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# amd64
9211,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# fallback
9212,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9213,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9214,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
9215,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
9216,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9217,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9218,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9219,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9220,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9221,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9222,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9223,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9224,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9225,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9226,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
9227,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9228,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9229,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9230,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9231,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9232,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9233,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9234,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
9235,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9236,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,#!/bin/sh'; \
9237,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9238,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9239,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9240,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9241,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9242,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9243,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9244,86918ee28d383e7af63f535a2558040dce141099,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9245,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9246,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9247,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9248,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9249,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9250,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9251,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9252,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
9253,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
9254,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9255,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9256,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9257,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9258,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9259,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9260,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9261,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
9262,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9263,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,#!/bin/sh'; \
9264,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9265,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9266,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9267,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9268,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9269,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9270,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9271,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9272,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9273,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9274,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,#!/bin/sh'; \
9275,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9276,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9277,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9278,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9279,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
9280,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9281,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9282,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9283,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9284,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9285,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9286,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9287,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# arm64v8
9288,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# amd64
9289,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# fallback
9290,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9291,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9292,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9293,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9294,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9295,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,# basic smoke test
9296,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9297,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9298,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9299,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# backwards compatibility shim
9300,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9301,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9302,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9303,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9304,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9305,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9306,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9307,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9308,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9309,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9310,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/slim/Dockerfile,# basic smoke test
9311,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9312,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9313,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
9314,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9315,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,#!/bin/sh'; \
9316,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9317,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9318,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9319,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
9320,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# backwards compatibility shim
9321,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9322,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9323,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9324,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9325,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# arm64v8
9326,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# amd64
9327,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# fallback
9328,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9329,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9330,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9331,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9332,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
9333,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9334,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9335,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,# basic smoke test
9336,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9337,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9338,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9339,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
9340,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# backwards compatibility shim
9341,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9342,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
9343,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9344,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9345,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9346,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9347,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9348,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
9349,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9350,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9351,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/Dockerfile,# basic smoke test
9352,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9353,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9354,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9355,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9356,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9357,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9358,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9359,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
9360,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9361,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,#!/bin/sh'; \
9362,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9363,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9364,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9365,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9366,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9367,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9368,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9369,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
9370,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# backwards compatibility shim
9371,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9372,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
9373,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9374,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
9375,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
9376,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9377,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9378,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
9379,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9380,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9381,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,# basic smoke test
9382,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9383,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9384,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
9385,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9386,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9387,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
9388,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9389,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9390,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9391,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9392,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9393,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9394,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9395,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9396,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9397,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9398,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9399,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
9400,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9401,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9402,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9403,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9404,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9405,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9406,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9407,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9408,d617d7e4b951735c512f3d5ac7672f7394115c91,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9409,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9410,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9411,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
9412,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9413,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9414,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# amd64
9415,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# fallback
9416,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9417,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9418,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
9419,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
9420,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9421,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9422,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9423,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9424,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9425,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,#!/bin/sh'; \
9426,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9427,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9428,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9429,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9430,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9431,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9432,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9433,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9434,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
9435,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9436,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,#!/bin/sh'; \
9437,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9438,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9439,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9440,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9441,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9442,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9443,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9444,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9445,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9446,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9447,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9448,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9449,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,# basic smoke test
9450,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9451,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9452,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9453,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9454,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9455,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9456,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9457,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9458,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# backwards compatibility shim
9459,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9460,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9461,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9462,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9463,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9464,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9465,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9466,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,# basic smoke test
9467,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9468,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9469,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9470,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9471,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9472,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9473,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9474,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9475,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9476,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9477,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9478,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,# basic smoke test
9479,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9480,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9481,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9482,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9483,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9484,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
9485,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9486,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9487,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9488,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9489,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9490,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9491,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9492,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9493,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9494,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
9495,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9496,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
9497,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9498,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9499,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9500,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9501,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9502,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9503,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9504,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9505,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9506,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-servercore.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
9507,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-servercore.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
9508,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-servercore.template,# TODO signature? checksum?
9509,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-adopt-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9510,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9511,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9512,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9513,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9514,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9515,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9516,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9517,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
9518,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9519,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,#!/bin/sh'; \
9520,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9521,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9522,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9523,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9524,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9525,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9526,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9527,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9528,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
9529,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9530,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9531,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9532,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# backwards compatibility shim
9533,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9534,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9535,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9536,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9537,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9538,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9539,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9540,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
9541,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9542,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9543,43078a246d7620f518412f458cc689ac869389ac,/8/jre/slim/Dockerfile,# basic smoke test
9544,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9545,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9546,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9547,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9548,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,#!/bin/sh'; \
9549,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9550,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9551,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9552,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9553,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9554,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9555,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9556,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9557,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9558,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9559,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9560,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9561,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9562,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9563,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9564,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
9565,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9566,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9567,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9568,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9569,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9570,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9571,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9572,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9573,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9574,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9575,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9576,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9577,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9578,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9579,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9580,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9581,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9582,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9583,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9584,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9585,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9586,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,# basic smoke test
9587,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9588,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
9589,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9590,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9591,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
9592,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9593,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
9594,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9595,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9596,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
9597,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9598,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9599,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,# basic smoke test
9600,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9601,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9602,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
9603,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# backwards compatibility shim
9604,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9605,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9606,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9607,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# arm64v8
9608,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# amd64
9609,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# fallback
9610,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9611,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
9612,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9613,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9614,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9615,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,# basic smoke test
9616,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9617,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9618,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9619,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9620,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9621,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9622,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9623,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9624,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9625,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9626,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9627,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# arm64v8
9628,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# amd64
9629,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# fallback
9630,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9631,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9632,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,# basic smoke test
9633,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9634,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
9635,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-nanoserver.template,# https://jdk.java.net/
9636,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/Dockerfile-oracle-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9637,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9638,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9639,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9640,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9641,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9642,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9643,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9644,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9645,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9646,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
9647,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9648,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,#!/bin/sh'; \
9649,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9650,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9651,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9652,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9653,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9654,f29e745facb32c529934eda4e4608be721cca04c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9655,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9656,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9657,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9658,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9659,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# backwards compatibility shim
9660,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9661,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9662,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9663,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9664,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9665,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9666,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9667,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,# basic smoke test
9668,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9669,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9670,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9671,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9672,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9673,ac186a1549186876b0d05babd4d909f209f27d59,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9674,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9675,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9676,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9677,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9678,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9679,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9680,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9681,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9682,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9683,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
9684,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9685,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9686,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9687,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9688,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9689,06552bdff28039988fca96ec7f810456849d420f,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
9690,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9691,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9692,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9693,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9694,c1738e789f9790f724708be0f019efbec1d1ae42,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9695,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9696,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9697,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9698,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9699,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9700,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,# basic smoke test
9701,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9702,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9703,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9704,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9705,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
9706,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9707,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9708,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9709,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9710,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9711,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9712,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9713,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
9714,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9715,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9716,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9717,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
9718,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9719,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
9720,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9721,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9722,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
9723,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
9724,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9725,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,#!/bin/sh'; \
9726,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9727,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9728,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
9729,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
9730,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9731,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9732,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9733,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9734,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9735,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9736,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9737,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
9738,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9739,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9740,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9741,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
9742,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# backwards compatibility shim
9743,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9744,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9745,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9746,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# amd64
9747,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# fallback
9748,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9749,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
9750,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9751,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9752,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9753,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,# basic smoke test
9754,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9755,ba84c1878998602129f0d7d94d26aae5e04bc872,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9756,ba84c1878998602129f0d7d94d26aae5e04bc872,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9757,ba84c1878998602129f0d7d94d26aae5e04bc872,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9758,ba84c1878998602129f0d7d94d26aae5e04bc872,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
9759,ba84c1878998602129f0d7d94d26aae5e04bc872,/Dockerfile-oracle-alpine.template,# basic smoke test
9760,ba84c1878998602129f0d7d94d26aae5e04bc872,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9761,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9762,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9763,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9764,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9765,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9766,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9767,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
9768,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
9769,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9770,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,#!/bin/sh'; \
9771,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9772,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9773,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9774,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9775,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9776,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9777,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9778,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
9779,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9780,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9781,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,#!/bin/sh'; \
9782,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
9783,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
9784,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9785,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9786,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9787,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
9788,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9789,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9790,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9791,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9792,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,#!/bin/bash'; \
9793,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9794,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9795,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9796,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
9797,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
9798,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9799,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9800,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,# basic smoke test
9801,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9802,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9803,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9804,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9805,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9806,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9807,f11f75767926eb1e650b448690e15cbacc2d1b9f,/Dockerfile-oracle-alpine.template,# https://jdk.java.net/
9808,f11f75767926eb1e650b448690e15cbacc2d1b9f,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9809,f11f75767926eb1e650b448690e15cbacc2d1b9f,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9810,f11f75767926eb1e650b448690e15cbacc2d1b9f,/Dockerfile-oracle-alpine.template,# basic smoke test
9811,f11f75767926eb1e650b448690e15cbacc2d1b9f,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9812,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9813,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
9814,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9815,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9816,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9817,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
9818,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# backwards compatibility shim
9819,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9820,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
9821,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9822,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9823,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9824,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9825,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9826,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
9827,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9828,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jdk/Dockerfile,# basic smoke test
9829,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
9830,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# backwards compatibility shim
9831,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9832,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
9833,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
9834,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
9835,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
9836,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
9837,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/slim/Dockerfile,# basic smoke test
9838,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9839,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9840,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9841,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9842,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# backwards compatibility shim
9843,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9844,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9845,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9846,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9847,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9848,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9849,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9850,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,# basic smoke test
9851,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9852,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9853,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9854,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
9855,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9856,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9857,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9858,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9859,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
9860,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# backwards compatibility shim
9861,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9862,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9863,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9864,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# arm64v8
9865,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# amd64
9866,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# fallback
9867,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9868,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
9869,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9870,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9871,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9872,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,# basic smoke test
9873,9ddd374c137ed44828edada4921ba7cbefbef279,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9874,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9875,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9876,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
9877,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9878,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,#!/bin/sh'; \
9879,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
9880,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
9881,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
9882,882461ade8207de7647d083009200de85eb978bc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9883,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9884,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9885,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
9886,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9887,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,#!/bin/sh'; \
9888,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9889,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9890,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9891,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9892,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
9893,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# backwards compatibility shim
9894,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9895,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9896,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
9897,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# arm64v8
9898,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# amd64
9899,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# fallback
9900,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9901,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
9902,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9903,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9904,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9905,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,# basic smoke test
9906,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9907,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9908,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9909,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9910,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
9911,09c008262a9eb3748da68be6eeb2c31e1ff48e38,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9912,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
9913,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
9914,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9915,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,# basic smoke test
9916,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9917,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
9918,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9919,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9920,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9921,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9922,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9923,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
9924,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9925,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9926,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9927,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9928,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9929,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9930,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9931,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9932,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9933,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
9934,3057ebcdbe57f042e13274a0a87c79a81f8f2dfc,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9935,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
9936,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,# Default to UTF-8 file.encoding
9937,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,# backwards compatibility shim
9938,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9939,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9940,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9941,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,#!/usr/bin/env bash'; \
9942,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9943,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9944,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9945,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,# basic smoke test
9946,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9947,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-slim.template,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
9948,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9949,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9950,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
9951,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9952,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9953,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,# basic smoke test
9954,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9955,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9956,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9957,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
9958,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9959,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9960,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,# basic smoke test
9961,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9962,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
9963,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
9964,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
9965,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
9966,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,#!/bin/sh'; \
9967,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
9968,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
9969,30b27d0b3b16ae395859ba47610b858076324508,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
9970,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
9971,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
9972,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9973,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
9974,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# backwards compatibility shim
9975,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
9976,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9977,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
9978,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
9979,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
9980,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
9981,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
9982,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,# basic smoke test
9983,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9984,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
9985,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
9986,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
9987,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
9988,d756977d0e276667d058208811f450e1a8a80a87,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
9989,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
9990,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-nanoserver.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
9991,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
9992,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
9993,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
9994,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
9995,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
9996,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
9997,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,# basic smoke test
9998,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
9999,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10000,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10001,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10002,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10003,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,#!/bin/sh'; \
10004,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10005,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10006,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10007,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10008,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10009,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10010,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10011,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10012,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10013,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10014,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10015,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10016,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10017,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10018,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10019,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10020,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10021,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10022,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10023,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10024,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10025,0cdf33bad33f7297e125b5ae8625299654eb34ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10026,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10027,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10028,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10029,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10030,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,#!/bin/sh'; \
10031,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10032,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10033,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10034,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10035,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10036,60b7b666c359b706a040ba80c31389c968c57582,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10037,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10038,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10039,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10040,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10041,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
10042,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10043,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10044,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10045,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10046,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10047,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10048,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10049,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10050,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10051,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
10052,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10053,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,#!/bin/sh'; \
10054,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10055,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10056,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
10057,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10058,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10059,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10060,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,# Default to UTF-8 file.encoding
10061,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10062,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,"# this ""case"" statement is generated via ""update.sh"""
10063,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10064,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10065,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10066,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,# basic smoke test
10067,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-oraclelinux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10068,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10069,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10070,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
10071,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10072,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,#!/bin/sh'; \
10073,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10074,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10075,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10076,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10077,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10078,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10079,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10080,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10081,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10082,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10083,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10084,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10085,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10086,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
10087,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10088,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10089,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,# basic smoke test
10090,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10091,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10092,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10093,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10094,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10095,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10096,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10097,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,# basic smoke test
10098,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10099,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10100,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10101,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
10102,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10103,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10104,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10105,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
10106,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10107,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,#!/bin/sh'; \
10108,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10109,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10110,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10111,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10112,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
10113,46bbf3ce87a354ed96634817f05e49ebd8482ae9,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10114,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10115,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10116,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
10117,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10118,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,#!/bin/sh'; \
10119,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10120,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10121,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10122,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10123,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10124,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10125,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10126,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10127,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
10128,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10129,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10130,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,# basic smoke test
10131,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10132,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10133,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10134,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10135,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
10136,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# backwards compatibility shim
10137,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10138,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10139,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10140,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
10141,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10142,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10143,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10144,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,# basic smoke test
10145,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10146,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10147,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10148,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10149,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10150,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10151,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10152,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10153,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10154,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
10155,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# backwards compatibility shim
10156,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10157,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10158,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10159,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
10160,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10161,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10162,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10163,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,# basic smoke test
10164,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10165,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10166,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10167,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10168,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10169,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10170,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10171,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10172,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# backwards compatibility shim
10173,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10174,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10175,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10176,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# arm64v8
10177,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# amd64
10178,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# fallback
10179,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10180,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10181,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10182,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10183,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10184,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,# basic smoke test
10185,a17d560a2c902f78750b03f07aa14febb0400bab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10186,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10187,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10188,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10189,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10190,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,#!/bin/sh'; \
10191,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10192,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10193,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
10194,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10195,15835397954c9ec123e42e685035ecd239e0a1db,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10196,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10197,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10198,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10199,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10200,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10201,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10202,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
10203,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10204,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10205,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10206,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10207,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10208,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
10209,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10210,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10211,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10212,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10213,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10214,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10215,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10216,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10217,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10218,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10219,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10220,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10221,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10222,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10223,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10224,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10225,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10226,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10227,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10228,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10229,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10230,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,#!/bin/sh'; \
10231,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10232,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10233,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10234,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10235,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10236,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10237,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10238,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10239,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10240,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10241,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10242,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
10243,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10244,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10245,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10246,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10247,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,#!/bin/sh'; \
10248,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10249,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10250,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10251,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10252,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10253,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
10254,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10255,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
10256,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10257,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
10258,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10259,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10260,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10261,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10262,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10263,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
10264,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10265,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10266,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,# basic smoke test
10267,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10268,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10269,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10270,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10271,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10272,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10273,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10274,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10275,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
10276,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10277,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10278,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
10279,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# amd64
10280,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# fallback
10281,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10282,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10283,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10284,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
10285,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10286,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10287,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10288,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10289,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
10290,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# backwards compatibility shim
10291,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10292,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10293,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10294,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
10295,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10296,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10297,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10298,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,# basic smoke test
10299,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10300,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10301,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10302,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10303,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10304,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,#!/bin/sh'; \
10305,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10306,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10307,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10308,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10309,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10310,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10311,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10312,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10313,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
10314,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10315,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
10316,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10317,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10318,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10319,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10320,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10321,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10322,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10323,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
10324,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
10325,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10326,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10327,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10328,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# arm64v8
10329,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# amd64
10330,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# fallback
10331,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10332,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
10333,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10334,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10335,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10336,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,# basic smoke test
10337,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10338,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10339,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10340,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10341,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10342,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,#!/bin/sh'; \
10343,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10344,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10345,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10346,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10347,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10348,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10349,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10350,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10351,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10352,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10353,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,# basic smoke test
10354,92b9cd2adf595f48da92b39976bbbab474c4837c,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10355,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10356,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
10357,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10358,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10359,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,#!/bin/sh'; \
10360,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10361,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10362,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10363,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10364,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10365,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10366,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
10367,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10368,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10369,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
10370,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,# backwards compatibility shim
10371,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10372,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10373,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10374,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
10375,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10376,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10377,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10378,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,# basic smoke test
10379,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10380,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10381,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10382,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10383,c2a9c2169b3cb215e3200440bc1cc2d6a2284d8b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10384,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10385,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10386,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
10387,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10388,fb0dd5fe5842959f774c60da6195e2d61b813fdd,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
10389,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10390,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10391,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
10392,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# backwards compatibility shim
10393,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10394,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10395,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10396,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10397,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10398,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10399,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10400,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
10401,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10402,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10403,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/8/jdk/Dockerfile,# basic smoke test
10404,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10405,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10406,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10407,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10408,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10409,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10410,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10411,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10412,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10413,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10414,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10415,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
10416,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10417,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10418,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10419,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# backwards compatibility shim
10420,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10421,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10422,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10423,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10424,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10425,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10426,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10427,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10428,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10429,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10430,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/slim/Dockerfile,# basic smoke test
10431,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10432,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10433,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10434,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# backwards compatibility shim
10435,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10436,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
10437,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10438,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10439,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
10440,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10441,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10442,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
10443,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10444,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,# basic smoke test
10445,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10446,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10447,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10448,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10449,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
10450,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10451,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10452,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10453,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
10454,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10455,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10456,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,# basic smoke test
10457,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10458,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10459,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
10460,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10461,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10462,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
10463,200ecf22e5a23cb48cbb3ce47aa08aa3b49a0d2d,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10464,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10465,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10466,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
10467,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10468,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
10469,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10470,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10471,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
10472,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10473,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10474,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
10475,9859b8586dd2511d005c84694736e2121ceb11d7,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10476,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10477,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
10478,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10479,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10480,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10481,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10482,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10483,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,#!/bin/sh'; \
10484,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10485,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10486,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10487,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10488,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10489,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10490,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10491,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10492,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10493,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10494,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
10495,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10496,5257acb51a1230a2dc46b1c349d674a725562f9d,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
10497,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10498,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10499,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
10500,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10501,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10502,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,# basic smoke test
10503,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10504,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
10505,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10506,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10507,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,# basic smoke test
10508,032278c8c0f77b2d5ba6c63a6cfb2b9ea54aa75d,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10509,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10510,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10511,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10512,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10513,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10514,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10515,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10516,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
10517,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10518,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
10519,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# backwards compatibility shim
10520,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10521,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
10522,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10523,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10524,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
10525,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
10526,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10527,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
10528,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10529,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10530,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,# basic smoke test
10531,43078a246d7620f518412f458cc689ac869389ac,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10532,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10533,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10534,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10535,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10536,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10537,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
10538,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# backwards compatibility shim
10539,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10540,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10541,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10542,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10543,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10544,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10545,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10546,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
10547,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10548,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10549,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/Dockerfile,# basic smoke test
10550,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10551,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10552,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10553,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
10554,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# backwards compatibility shim
10555,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10556,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10557,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10558,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
10559,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10560,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10561,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10562,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,# basic smoke test
10563,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10564,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10565,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10566,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10567,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10568,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10569,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10570,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
10571,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10572,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10573,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10574,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10575,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10576,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10577,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10578,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10579,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10580,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10581,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10582,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10583,68c66124d85712115f1aefa0c60e766ac8e7da66,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10584,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10585,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10586,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10587,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
10588,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10589,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10590,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10591,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10592,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10593,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10594,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10595,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,# basic smoke test
10596,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10597,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10598,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10599,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10600,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10601,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10602,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# arm64v8
10603,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# amd64
10604,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# fallback
10605,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10606,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10607,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,# basic smoke test
10608,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10609,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10610,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10611,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
10612,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10613,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10614,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10615,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10616,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10617,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,#!/bin/sh'; \
10618,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10619,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10620,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10621,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10622,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10623,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10624,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10625,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10626,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
10627,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10628,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10629,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,#!/bin/sh'; \
10630,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10631,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10632,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10633,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10634,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10635,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10636,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10637,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10638,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10639,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10640,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
10641,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10642,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10643,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
10644,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
10645,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10646,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10647,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10648,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10649,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10650,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10651,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10652,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10653,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10654,315ca52801a46e69af557460c7f0232a82582306,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10655,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10656,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10657,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10658,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,# basic smoke test
10659,ddfe4a29dd66d34375d6ebc4455c550524672e3e,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10660,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10661,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10662,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
10663,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10664,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,#!/bin/sh'; \
10665,45dce52df7deb6a4b6ae7ad9c4b9f3cb7dc8db91,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10666,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10667,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10668,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
10669,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10670,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,#!/bin/sh'; \
10671,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10672,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10673,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10674,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10675,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
10676,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,# backwards compatibility shim
10677,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10678,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
10679,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10680,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10681,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
10682,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,# basic smoke test
10683,e715db19b8abe216948ef5b81dcb352273bd69f3,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10684,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10685,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
10686,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10687,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10688,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
10689,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10690,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10691,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10692,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
10693,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10694,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10695,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,# basic smoke test
10696,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10697,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10698,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10699,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10700,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10701,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10702,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10703,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10704,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10705,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10706,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10707,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,# basic smoke test
10708,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10709,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10710,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10711,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10712,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10713,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
10714,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10715,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10716,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
10717,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
10718,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10719,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10720,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10721,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10722,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# amd64
10723,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# fallback
10724,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10725,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10726,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10727,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10728,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
10729,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10730,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10731,4a633529dcc65b35ba733b2fbd37f34085c71f55,/11/jre/slim-buster/Dockerfile,# basic smoke test
10732,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10733,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10734,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10735,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
10736,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10737,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10738,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10739,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10740,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10741,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10742,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10743,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10744,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
10745,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10746,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10747,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,# basic smoke test
10748,554ff38a160f896ddd7f0fdca1cd34817e253a56,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10749,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10750,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10751,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10752,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10753,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10754,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
10755,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10756,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
10757,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,# basic smoke test
10758,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10759,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10760,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10761,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10762,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10763,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10764,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10765,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10766,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# backwards compatibility shim
10767,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10768,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10769,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10770,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10771,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10772,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10773,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10774,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,# basic smoke test
10775,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10776,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
10777,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10778,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
10779,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10780,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10781,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,#!/bin/sh'; \
10782,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10783,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10784,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
10785,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10786,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10787,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10788,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10789,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10790,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10791,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10792,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
10793,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10794,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10795,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,# basic smoke test
10796,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10797,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10798,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
10799,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
10800,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10801,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,#!/bin/sh'; \
10802,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10803,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10804,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10805,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10806,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10807,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10808,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10809,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10810,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10811,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10812,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10813,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10814,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10815,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10816,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10817,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10818,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,#!/bin/sh'; \
10819,2e2d5c3f7ca9303b53d9d8f8ce22c0232a152d5f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10820,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10821,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10822,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
10823,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# backwards compatibility shim
10824,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10825,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10826,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10827,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10828,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# amd64
10829,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# fallback
10830,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10831,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10832,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10833,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10834,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
10835,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10836,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10837,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/buster/Dockerfile,# basic smoke test
10838,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10839,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10840,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
10841,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10842,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10843,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,# basic smoke test
10844,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10845,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10846,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
10847,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10848,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10849,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
10850,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10851,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10852,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10853,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10854,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10855,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10856,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10857,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10858,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10859,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10860,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
10861,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10862,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10863,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10864,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
10865,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10866,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10867,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10868,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10869,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
10870,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10871,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10872,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10873,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10874,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10875,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
10876,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,# Default to UTF-8 file.encoding
10877,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,# backwards compatibility shim
10878,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10879,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
10880,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
10881,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
10882,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
10883,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
10884,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
10885,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10886,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,#!/usr/bin/env bash'; \
10887,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10888,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10889,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,# basic smoke test
10890,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
10891,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10892,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10893,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
10894,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10895,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,#!/bin/sh'; \
10896,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10897,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10898,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10899,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10900,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10901,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10902,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10903,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
10904,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10905,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-alpine.template,# basic smoke test
10906,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10907,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10908,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
10909,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10910,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10911,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,#!/bin/sh'; \
10912,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10913,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10914,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10915,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
10916,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
10917,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10918,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
10919,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
10920,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10921,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
10922,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
10923,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
10924,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# arm64v8
10925,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# amd64
10926,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# fallback
10927,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10928,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10929,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
10930,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,# basic smoke test
10931,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10932,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10933,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10934,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
10935,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10936,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,#!/bin/sh'; \
10937,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10938,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10939,89851f0abc3a83cfad5248102f379d6a0bd3951a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10940,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
10941,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
10942,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
10943,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
10944,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
10945,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
10946,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
10947,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# https://jdk.java.net/
10948,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
10949,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
10950,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,# basic smoke test
10951,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
10952,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10953,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10954,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10955,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10956,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,#!/bin/sh'; \
10957,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10958,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10959,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10960,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10961,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
10962,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
10963,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10964,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,#!/bin/sh'; \
10965,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10966,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
10967,bbb7c0995d9ab0ffec987f02f515862925553d5e,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
10968,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
10969,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# backwards compatibility shim
10970,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10971,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
10972,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10973,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10974,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10975,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/Dockerfile,# basic smoke test
10976,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
10977,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
10978,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# backwards compatibility shim
10979,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
10980,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
10981,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
10982,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
10983,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
10984,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
10985,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
10986,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
10987,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
10988,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
10989,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jdk/slim/Dockerfile,# basic smoke test
10990,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
10991,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
10992,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
10993,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
10994,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,#!/bin/sh'; \
10995,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
10996,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
10997,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
10998,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
10999,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11000,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11001,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11002,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11003,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11004,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11005,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11006,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11007,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11008,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11009,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11010,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# backwards compatibility shim
11011,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11012,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
11013,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11014,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11015,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11016,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11017,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11018,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11019,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11020,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11021,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,# basic smoke test
11022,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11023,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11024,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11025,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11026,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11027,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11028,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11029,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11030,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11031,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11032,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11033,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11034,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11035,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11036,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11037,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11038,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11039,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11040,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11041,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11042,738932efd2236c905475115cf34f2a72cd65c02c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11043,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11044,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11045,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
11046,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11047,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11048,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
11049,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# amd64
11050,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# fallback
11051,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11052,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11053,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11054,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
11055,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11056,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11057,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11058,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11059,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11060,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
11061,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11062,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11063,56a204b2096324ffc854725cb83eeaa22325d9d2,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11064,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
11065,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11066,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,# Default to UTF-8 file.encoding
11067,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,# backwards compatibility shim
11068,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11069,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11070,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11071,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# this ""case"" statement is generated via ""update.sh"""
11072,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11073,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11074,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# TODO strip ""demo"" and ""man"" folders?"
11075,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11076,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,#!/usr/bin/env bash'; \
11077,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11078,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11079,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,# basic smoke test
11080,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11081,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11082,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11083,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11084,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11085,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
11086,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11087,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11088,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11089,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11090,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11091,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11092,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11093,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11094,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11095,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
11096,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11097,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
11098,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,# basic smoke test
11099,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11100,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11101,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11102,b1233ee77bdc040c419ef84d7001d16dd083dd7d,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11103,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11104,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11105,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11106,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11107,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,#!/bin/sh'; \
11108,a3f06bcbc86d16912a309cf4538a00caf9a6100c,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11109,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11110,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11111,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11112,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11113,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,#!/bin/sh'; \
11114,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11115,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11116,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11117,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11118,93316d3b14379d29fe0cd363bd6839eb8dd8cc7b,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11119,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11120,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11121,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11122,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
11123,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# backwards compatibility shim
11124,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11125,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11126,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11127,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# arm64v8
11128,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# amd64
11129,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# fallback
11130,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11131,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
11132,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11133,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11134,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11135,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,# basic smoke test
11136,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11137,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11138,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11139,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
11140,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# backwards compatibility shim
11141,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11142,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11143,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11144,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11145,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11146,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11147,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11148,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
11149,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11150,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11151,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/Dockerfile,# basic smoke test
11152,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11153,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11154,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
11155,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11156,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,#!/bin/sh'; \
11157,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11158,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11159,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11160,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11161,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11162,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11163,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11164,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11165,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11166,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11167,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11168,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,#!/bin/sh'; \
11169,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11170,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11171,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11172,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11173,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11174,882461ade8207de7647d083009200de85eb978bc,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11175,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11176,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11177,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11178,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11179,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11180,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11181,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
11182,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11183,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11184,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11185,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11186,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11187,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
11188,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11189,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11190,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# arm64v8
11191,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# amd64
11192,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# fallback
11193,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11194,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11195,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11196,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,# basic smoke test
11197,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11198,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11199,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11200,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11201,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11202,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11203,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11204,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11205,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11206,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11207,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
11208,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-alpine.template,"# this ""case"" statement is generated via ""update.sh"""
11209,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
11210,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11211,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-alpine.template,# basic smoke test
11212,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-alpine.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11213,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11214,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11215,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11216,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11217,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11218,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11219,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11220,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11221,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11222,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11223,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,#!/bin/sh'; \
11224,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11225,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11226,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11227,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11228,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11229,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11230,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11231,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11232,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11233,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# backwards compatibility shim
11234,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11235,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
11236,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11237,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11238,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11239,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11240,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11241,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
11242,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11243,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11244,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/slim/Dockerfile,# basic smoke test
11245,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11246,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11247,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
11248,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11249,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,#!/bin/sh'; \
11250,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11251,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11252,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11253,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11254,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11255,8259a15a9118fbe624e47979d34fac3ea7059ac4,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11256,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11257,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11258,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11259,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11260,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
11261,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11262,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11263,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
11264,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
11265,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11266,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,#!/bin/sh'; \
11267,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11268,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11269,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11270,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11271,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11272,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11273,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11274,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11275,3b9644b8ef34cb59878b9d75a72920b5046dec9f,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11276,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11277,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11278,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11279,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11280,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
11281,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11282,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11283,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11284,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11285,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,#!/bin/sh'; \
11286,6882089f1c079469c3e2cadca1ed8371fb8495f2,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11287,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11288,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11289,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11290,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
11291,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# http://jdk.java.net/
11292,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11293,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
11294,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,# basic smoke test
11295,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11296,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11297,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11298,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11299,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
11300,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# backwards compatibility shim
11301,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11302,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11303,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11304,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
11305,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11306,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11307,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11308,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,# basic smoke test
11309,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11310,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11311,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11312,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11313,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11314,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,#!/bin/sh'; \
11315,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11316,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11317,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11318,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11319,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11320,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11321,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11322,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11323,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11324,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11325,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,#!/bin/sh'; \
11326,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11327,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11328,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11329,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11330,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11331,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11332,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11333,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11334,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11335,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11336,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11337,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,#!/bin/sh'; \
11338,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11339,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11340,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
11341,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11342,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11343,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11344,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11345,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11346,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11347,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11348,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
11349,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11350,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11351,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11352,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# backwards compatibility shim
11353,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11354,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11355,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11356,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11357,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11358,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11359,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11360,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
11361,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11362,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11363,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jre/slim/Dockerfile,# basic smoke test
11364,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11365,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11366,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11367,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
11368,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11369,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11370,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11371,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
11372,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11373,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,#!/bin/sh'; \
11374,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11375,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11376,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11377,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11378,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11379,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11380,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11381,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11382,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11383,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11384,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11385,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11386,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11387,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11388,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11389,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11390,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11391,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11392,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-windows-servercore.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11393,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-windows-servercore.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11394,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-windows-servercore.template,# TODO signature? checksum?
11395,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11396,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11397,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11398,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11399,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11400,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,#!/bin/bash'; \
11401,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11402,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11403,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11404,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11405,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11406,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11407,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-oracle.template,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
11408,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-oracle.template,# http://jdk.java.net/
11409,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11410,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
11411,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-oracle.template,# basic smoke test
11412,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11413,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11414,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11415,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
11416,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11417,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11418,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# amd64
11419,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# fallback
11420,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11421,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11422,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11423,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,# basic smoke test
11424,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11425,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11426,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11427,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11428,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11429,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11430,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11431,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11432,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11433,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11434,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11435,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11436,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11437,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
11438,2598f7123fce9ea870e67f8f9df745b2b49866c0,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11439,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11440,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11441,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11442,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11443,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,#!/bin/sh'; \
11444,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11445,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11446,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11447,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11448,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11449,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11450,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11451,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11452,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11453,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11454,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11455,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11456,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11457,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
11458,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11459,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,#!/bin/sh'; \
11460,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11461,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11462,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11463,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11464,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11465,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11466,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11467,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11468,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# backwards compatibility shim
11469,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11470,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11471,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11472,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11473,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11474,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11475,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11476,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,# basic smoke test
11477,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11478,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11479,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11480,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11481,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11482,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11483,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,#!/bin/sh'; \
11484,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11485,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11486,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11487,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11488,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11489,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11490,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11491,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11492,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11493,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11494,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11495,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11496,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11497,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11498,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
11499,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11500,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11501,e740b6fad61854adfbdf553638d33f1c80176d79,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11502,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11503,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11504,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11505,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
11506,d0e8d5009be0e61063281cc60eadf409b6cf5369,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11507,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11508,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11509,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11510,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11511,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,#!/bin/sh'; \
11512,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11513,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11514,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11515,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11516,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11517,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11518,60b7b666c359b706a040ba80c31389c968c57582,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11519,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11520,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# backwards compatibility shim
11521,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11522,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
11523,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11524,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
11525,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11526,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11527,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/slim/Dockerfile,# basic smoke test
11528,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11529,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11530,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
11531,bf06437449e8ae1782905f6c2df744805498874b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11532,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11533,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11534,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11535,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11536,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,#!/bin/sh'; \
11537,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11538,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11539,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11540,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11541,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11542,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11543,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11544,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
11545,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
11546,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11547,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
11548,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,# basic smoke test
11549,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11550,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11551,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11552,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11553,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11554,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,#!/bin/sh'; \
11555,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11556,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11557,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11558,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11559,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11560,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11561,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11562,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11563,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11564,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11565,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11566,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11567,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11568,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11569,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11570,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11571,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11572,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11573,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11574,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,# basic smoke test
11575,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11576,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11577,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11578,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11579,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11580,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11581,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11582,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11583,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11584,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
11585,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11586,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,#!/bin/sh'; \
11587,b118fdc1e9b1aebdc178537551101dffe1f612a3,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11588,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11589,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
11590,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11591,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11592,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11593,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
11594,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11595,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
11596,2ac2312f6374ae864c3166466fb366967b97e47a,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11597,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11598,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11599,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11600,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11601,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
11602,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11603,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11604,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11605,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11606,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11607,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11608,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11609,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11610,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11611,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11612,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
11613,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# backwards compatibility shim
11614,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11615,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
11616,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11617,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11618,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
11619,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11620,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11621,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
11622,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11623,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11624,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,# basic smoke test
11625,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11626,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11627,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11628,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11629,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11630,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
11631,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# backwards compatibility shim
11632,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11633,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
11634,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11635,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
11636,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
11637,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11638,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,# basic smoke test
11639,282961c4ca0be09af7a556e38b8d5be0c2db0608,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11640,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11641,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11642,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# backwards compatibility shim
11643,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11644,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11645,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11646,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
11647,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
11648,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
11649,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11650,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11651,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11652,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11653,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,# basic smoke test
11654,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11655,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11656,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11657,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11658,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11659,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,#!/bin/sh'; \
11660,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11661,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11662,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11663,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11664,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11665,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11666,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11667,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11668,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
11669,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
11670,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11671,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,#!/bin/sh'; \
11672,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11673,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11674,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
11675,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11676,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11677,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11678,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11679,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11680,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11681,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
11682,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,# https://jdk.java.net/
11683,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11684,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11685,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,# basic smoke test
11686,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11687,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11688,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11689,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11690,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11691,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
11692,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11693,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11694,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11695,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11696,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11697,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11698,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11699,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11700,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11701,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
11702,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
11703,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
11704,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
11705,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11706,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11707,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
11708,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,# backwards compatibility shim
11709,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11710,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11711,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# this ""case"" statement is generated via ""update.sh"""
11712,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11713,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
11714,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11715,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11716,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11717,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,# basic smoke test
11718,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11719,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11720,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11721,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11722,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11723,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11724,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11725,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11726,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11727,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11728,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11729,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11730,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11731,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11732,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,# basic smoke test
11733,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11734,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11735,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11736,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11737,fbf3a8f396844832bd11a89d6299066a4669383d,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11738,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11739,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11740,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11741,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
11742,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11743,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11744,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11745,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11746,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11747,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11748,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11749,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11750,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11751,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11752,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11753,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11754,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11755,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
11756,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11757,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11758,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11759,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11760,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11761,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11762,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11763,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11764,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11765,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11766,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
11767,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11768,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11769,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11770,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11771,6f7c70eb527c39c3f315454b84fe0f776aa019fb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11772,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11773,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
11774,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11775,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11776,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
11777,5ed8eb2445b2ff267a9c88c9ddaaa7dd9e384134,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11778,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11779,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11780,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11781,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11782,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,#!/bin/sh'; \
11783,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11784,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11785,e6e9cf8b21516ba764189916d35be57486203c95,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11786,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11787,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11788,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11789,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
11790,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11791,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11792,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11793,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
11794,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
11795,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
11796,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11797,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11798,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11799,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11800,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11801,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11802,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11803,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11804,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
11805,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11806,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,#!/bin/sh'; \
11807,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11808,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11809,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11810,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11811,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11812,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11813,fe27c7f1c5889c174c709b263f09060e7951ec55,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11814,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11815,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
11816,41b92f2f30079cd364e9619d1fd4633ef138dca4,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11817,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11818,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11819,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11820,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
11821,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11822,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11823,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11824,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# backwards compatibility shim
11825,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11826,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11827,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11828,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
11829,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11830,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11831,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11832,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,# basic smoke test
11833,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11834,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
11835,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11836,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11837,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
11838,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11839,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11840,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,# basic smoke test
11841,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11842,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11843,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
11844,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11845,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11846,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
11847,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11848,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11849,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11850,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11851,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11852,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11853,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11854,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
11855,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11856,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11857,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
11858,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# backwards compatibility shim
11859,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
11860,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11861,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
11862,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# arm64v8
11863,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# amd64
11864,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# fallback
11865,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
11866,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
11867,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
11868,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
11869,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11870,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,# basic smoke test
11871,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11872,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11873,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11874,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# Default to UTF-8 file.encoding
11875,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11876,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,#!/bin/sh'; \
11877,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11878,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11879,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11880,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11881,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11882,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11883,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11884,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11885,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
11886,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11887,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,#!/bin/sh'; \
11888,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11889,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11890,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11891,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11892,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11893,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11894,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
11895,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
11896,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11897,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11898,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
11899,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
11900,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11901,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
11902,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11903,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11904,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11905,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11906,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11907,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11908,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11909,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11910,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11911,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11912,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11913,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
11914,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11915,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
11916,d93be18f4f2d5e8457169cac00e559d953b6028e,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11917,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11918,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
11919,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
11920,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11921,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,#!/bin/sh'; \
11922,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11923,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11924,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11925,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11926,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11927,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11928,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11929,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11930,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11931,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11932,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
11933,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
11934,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11935,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11936,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,# basic smoke test
11937,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
11938,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11939,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11940,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11941,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11942,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11943,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11944,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11945,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11946,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11947,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,#!/bin/sh'; \
11948,11af1a181763751cce50f383f6b4b023fd5d2255,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11949,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
11950,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
11951,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,# Default to UTF-8 file.encoding
11952,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11953,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,"# this ""case"" statement is generated via ""update.sh"""
11954,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
11955,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
11956,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
11957,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,# basic smoke test
11958,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-oraclelinux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11959,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11960,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11961,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
11962,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11963,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,#!/bin/sh'; \
11964,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
11965,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
11966,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
11967,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
11968,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
11969,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
11970,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11971,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11972,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11973,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
11974,ce18be6e30d5ca2096c6c87e1d1237e5c83dff09,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
11975,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11976,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11977,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
11978,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11979,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,#!/bin/sh'; \
11980,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
11981,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
11982,b118fdc1e9b1aebdc178537551101dffe1f612a3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11983,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11984,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11985,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
11986,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11987,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
11988,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
11989,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
11990,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,#!/bin/sh'; \
11991,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
11992,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
11993,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
11994,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
11995,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
11996,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
11997,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
11998,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
11999,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12000,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12001,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,#!/bin/sh'; \
12002,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12003,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12004,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12005,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12006,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12007,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12008,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12009,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12010,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12011,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
12012,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12013,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12014,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12015,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
12016,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12017,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12018,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12019,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12020,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# arm64v8
12021,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# amd64
12022,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# fallback
12023,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12024,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12025,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12026,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12027,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12028,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12029,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12030,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,# basic smoke test
12031,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12032,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12033,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12034,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12035,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12036,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12037,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12038,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12039,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12040,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
12041,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,# basic smoke test
12042,9efa5c2bd28c10d07e70ceac416187a011dd6184,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12043,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12044,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12045,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12046,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
12047,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12048,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12049,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12050,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
12051,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12052,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
12053,47a6539cd18023dafb45db9013455136cc0bca07,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12054,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12055,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12056,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12057,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12058,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,#!/bin/sh'; \
12059,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12060,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12061,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12062,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12063,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12064,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12065,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12066,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12067,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12068,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12069,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12070,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12071,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,#!/bin/sh'; \
12072,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12073,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12074,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12075,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12076,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12077,01ca700a105984964865430aee1251932956925e,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12078,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12079,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12080,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12081,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12082,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
12083,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12084,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12085,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12086,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12087,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12088,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12089,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12090,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12091,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12092,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12093,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12094,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12095,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12096,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,# basic smoke test
12097,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12098,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12099,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12100,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12101,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12102,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,#!/bin/sh'; \
12103,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12104,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12105,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12106,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12107,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12108,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12109,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12110,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12111,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12112,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12113,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12114,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12115,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12116,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12117,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12118,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12119,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12120,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12121,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12122,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,# basic smoke test
12123,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12124,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12125,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12126,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12127,0ec2a0d41bebbff50f9537b58d258b6e551b0dce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12128,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12129,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12130,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12131,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12132,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,#!/bin/sh'; \
12133,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12134,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12135,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12136,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12137,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12138,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12139,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12140,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12141,0259a649c03ace8b035432ef3ee7274ca30d3776,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12142,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12143,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12144,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12145,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
12146,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12147,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12148,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12149,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
12150,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12151,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,#!/bin/sh'; \
12152,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12153,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12154,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12155,882461ade8207de7647d083009200de85eb978bc,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12156,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12157,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12158,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
12159,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12160,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,#!/bin/sh'; \
12161,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12162,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12163,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12164,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12165,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12166,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12167,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12168,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12169,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12170,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
12171,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12172,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12173,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12174,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12175,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
12176,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12177,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12178,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,# basic smoke test
12179,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12180,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12181,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12182,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
12183,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# backwards compatibility shim
12184,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12185,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12186,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12187,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12188,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12189,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12190,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12191,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
12192,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12193,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12194,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,# basic smoke test
12195,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12196,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12197,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12198,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12199,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12200,74f668327d3137e3666cff20610c400c15d2ed2c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12201,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12202,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12203,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12204,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
12205,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# backwards compatibility shim
12206,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12207,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12208,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12209,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# arm64v8
12210,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# amd64
12211,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# fallback
12212,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12213,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
12214,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12215,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12216,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12217,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,# basic smoke test
12218,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12219,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12220,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12221,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
12222,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12223,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,#!/bin/sh'; \
12224,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12225,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12226,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12227,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12228,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12229,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12230,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12231,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12232,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
12233,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12234,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12235,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12236,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12237,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12238,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,#!/bin/sh'; \
12239,efa60b19f5b9c4ccd676eb03ce955f1444a10d80,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12240,9efa5c2bd28c10d07e70ceac416187a011dd6184,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12241,9efa5c2bd28c10d07e70ceac416187a011dd6184,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12242,9efa5c2bd28c10d07e70ceac416187a011dd6184,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12243,9efa5c2bd28c10d07e70ceac416187a011dd6184,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
12244,9efa5c2bd28c10d07e70ceac416187a011dd6184,/Dockerfile-oracle-alpine.template,# basic smoke test
12245,9efa5c2bd28c10d07e70ceac416187a011dd6184,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12246,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12247,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
12248,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12249,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12250,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12251,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12252,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12253,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12254,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,#!/bin/sh'; \
12255,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12256,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12257,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12258,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12259,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12260,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12261,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12262,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
12263,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# backwards compatibility shim
12264,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12265,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
12266,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12267,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12268,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12269,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12270,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/Dockerfile,# basic smoke test
12271,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12272,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12273,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12274,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12275,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12276,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12277,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12278,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,#!/bin/sh'; \
12279,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12280,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12281,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12282,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12283,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12284,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12285,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12286,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12287,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
12288,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12289,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12290,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
12291,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# amd64
12292,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# fallback
12293,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12294,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12295,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12296,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
12297,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12298,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12299,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12300,19031c95912d7964223fffab57fad4d07932c05c,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12301,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12302,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12303,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
12304,ea58310ec57fed8d5eedc7ed30eb7d0a26ebc574,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12305,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12306,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/6/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12307,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12308,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12309,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
12310,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12311,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12312,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12313,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12314,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
12315,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# backwards compatibility shim
12316,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12317,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12318,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12319,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# arm64v8
12320,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# amd64
12321,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# fallback
12322,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12323,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
12324,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12325,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12326,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12327,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,# basic smoke test
12328,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12329,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12330,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12331,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12332,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12333,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12334,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12335,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12336,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12337,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12338,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12339,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12340,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,# basic smoke test
12341,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12342,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12343,d8d56dbcf7a66ac266a0f229c598f42a94faf804,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12344,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12345,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12346,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12347,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12348,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12349,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12350,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
12351,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
12352,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12353,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
12354,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,# basic smoke test
12355,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12356,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12357,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12358,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
12359,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12360,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12361,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12362,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# arm64v8
12363,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# amd64
12364,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# fallback
12365,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12366,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12367,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12368,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12369,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12370,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,# basic smoke test
12371,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12372,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12373,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12374,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12375,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12376,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
12377,bbb929b5877fd14377f8b1d40a1eb1a9ebf39e2f,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12378,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12379,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12380,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
12381,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12382,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,#!/bin/bash'; \
12383,eaf1c5575ab9763caf66d8d5debb7ec089411740,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12384,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12385,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12386,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
12387,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12388,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12389,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
12390,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# amd64
12391,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# fallback
12392,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12393,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12394,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12395,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
12396,82d5067061455260f202a00c42ce372d43038be0,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12397,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12398,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12399,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12400,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
12401,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# backwards compatibility shim
12402,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12403,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12404,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12405,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# arm64v8
12406,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# amd64
12407,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# fallback
12408,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12409,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
12410,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12411,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12412,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12413,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,# basic smoke test
12414,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12415,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12416,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12417,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12418,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
12419,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12420,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12421,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12422,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12423,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12424,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
12425,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12426,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12427,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12428,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12429,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12430,1dce6353dcbb15f09479e7043f48082051967139,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12431,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12432,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12433,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12434,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12435,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12436,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# arm64v8
12437,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# amd64
12438,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# fallback
12439,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12440,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12441,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12442,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,# basic smoke test
12443,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12444,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12445,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12446,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
12447,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12448,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,#!/bin/sh'; \
12449,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12450,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12451,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12452,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12453,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12454,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12455,0d4a88c802fd2c3d230a71e6e8a4af49295aca5e,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12456,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12457,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12458,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12459,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12460,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12461,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12462,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12463,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12464,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12465,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12466,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
12467,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12468,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12469,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12470,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12471,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12472,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12473,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12474,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12475,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12476,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12477,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12478,d7094b23b9c6957d72d2af540f866ec4a751ae71,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12479,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12480,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12481,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12482,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
12483,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12484,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12485,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12486,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
12487,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12488,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,#!/bin/sh'; \
12489,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12490,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12491,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12492,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12493,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12494,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12495,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12496,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12497,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12498,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12499,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12500,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
12501,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12502,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12503,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12504,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12505,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12506,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12507,02a49915095f254cbf321292ab7a021529686448,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12508,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12509,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12510,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12511,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12512,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12513,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12514,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12515,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
12516,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# backwards compatibility shim
12517,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12518,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12519,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12520,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12521,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12522,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12523,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12524,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
12525,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12526,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12527,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/Dockerfile,# basic smoke test
12528,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12529,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
12530,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12531,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12532,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12533,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
12534,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12535,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,#!/bin/sh'; \
12536,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12537,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12538,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12539,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12540,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12541,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12542,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12543,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12544,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12545,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
12546,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12547,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12548,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12549,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12550,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12551,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12552,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
12553,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12554,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12555,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,# basic smoke test
12556,f11f75767926eb1e650b448690e15cbacc2d1b9f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12557,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12558,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12559,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12560,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
12561,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12562,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12563,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12564,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
12565,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12566,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
12567,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12568,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12569,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12570,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12571,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12572,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,#!/bin/sh'; \
12573,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12574,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12575,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12576,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12577,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12578,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12579,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12580,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12581,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12582,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12583,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12584,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12585,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12586,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12587,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12588,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12589,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# arm64v8
12590,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# amd64
12591,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# fallback
12592,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12593,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12594,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
12595,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,# basic smoke test
12596,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12597,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
12598,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12599,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
12600,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,# basic smoke test
12601,57de518e280c26fa8a9f602e76c3f3ea95f8296c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12602,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12603,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12604,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
12605,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12606,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
12607,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12608,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12609,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12610,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12611,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12612,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12613,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12614,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12615,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12616,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,#!/bin/sh'; \
12617,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12618,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12619,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12620,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12621,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12622,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12623,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12624,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12625,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12626,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12627,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12628,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12629,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12630,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12631,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12632,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12633,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12634,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
12635,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12636,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12637,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12638,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12639,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12640,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12641,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12642,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12643,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# backwards compatibility shim
12644,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12645,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
12646,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12647,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12648,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12649,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12650,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12651,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,# basic smoke test
12652,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12653,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12654,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12655,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12656,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
12657,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12658,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,#!/bin/sh'; \
12659,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12660,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12661,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12662,a080def2a36003e85485d07b3f047bd3c91508c2,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12663,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12664,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12665,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12666,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12667,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
12668,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12669,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12670,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12671,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
12672,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12673,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,#!/bin/sh'; \
12674,89851f0abc3a83cfad5248102f379d6a0bd3951a,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12675,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12676,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
12677,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12678,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12679,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
12680,a7cc605aead56177b2c86fecd9e0875378f8ce3d,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12681,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12682,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12683,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12684,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
12685,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
12686,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12687,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,#!/bin/sh'; \
12688,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12689,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12690,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12691,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12692,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12693,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12694,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12695,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12696,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12697,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12698,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12699,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12700,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12701,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12702,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12703,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,#!/bin/sh'; \
12704,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12705,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12706,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
12707,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
12708,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12709,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12710,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12711,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12712,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12713,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12714,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12715,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12716,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
12717,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12718,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12719,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12720,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12721,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12722,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12723,01ca700a105984964865430aee1251932956925e,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12724,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12725,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12726,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12727,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12728,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12729,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12730,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# arm64v8
12731,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# amd64
12732,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# fallback
12733,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12734,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12735,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12736,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12737,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12738,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,# basic smoke test
12739,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12740,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12741,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
12742,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12743,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12744,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
12745,1778c73b834d04d5b5c61baee4cce8c127031f9c,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12746,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12747,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12748,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
12749,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12750,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,#!/bin/sh'; \
12751,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12752,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12753,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12754,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12755,a5b8541f6a42366424c0f1fd0de027a1e1720114,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12756,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12757,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
12758,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
12759,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12760,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12761,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12762,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12763,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# amd64
12764,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# fallback
12765,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12766,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12767,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12768,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12769,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
12770,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12771,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12772,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jre/slim-buster/Dockerfile,# basic smoke test
12773,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12774,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
12775,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
12776,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
12777,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12778,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,# basic smoke test
12779,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
12780,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12781,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12782,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12783,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
12784,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12785,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12786,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12787,9bab8e64d6ea6863215d27a23273e8cd32a474be,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12788,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12789,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12790,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12791,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
12792,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# backwards compatibility shim
12793,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12794,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12795,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12796,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# arm64v8
12797,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# amd64
12798,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# fallback
12799,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12800,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
12801,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12802,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12803,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12804,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,# basic smoke test
12805,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12806,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12807,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# backwards compatibility shim
12808,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12809,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12810,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12811,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
12812,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12813,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12814,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,# basic smoke test
12815,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12816,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12817,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12818,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
12819,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12820,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,#!/bin/sh'; \
12821,2ff433f60dd918bd852442dbb4f7b24a148c2fb0,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12822,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
12823,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
12824,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
12825,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12826,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12827,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12828,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12829,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# backwards compatibility shim
12830,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12831,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12832,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12833,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12834,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12835,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12836,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12837,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,# basic smoke test
12838,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12839,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
12840,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,# backwards compatibility shim
12841,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12842,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
12843,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12844,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12845,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12846,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
12847,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,# basic smoke test
12848,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12849,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12850,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12851,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# backwards compatibility shim
12852,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12853,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12854,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
12855,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# amd64
12856,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# fallback
12857,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12858,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12859,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12860,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12861,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12862,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,# basic smoke test
12863,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12864,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12865,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12866,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12867,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12868,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
12869,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12870,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12871,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,#!/bin/sh'; \
12872,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12873,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12874,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
12875,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12876,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12877,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12878,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12879,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
12880,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
12881,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-alpine.template,"# this ""case"" statement is generated via ""update.sh"""
12882,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
12883,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12884,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-alpine.template,# basic smoke test
12885,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-alpine.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12886,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12887,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12888,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
12889,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# backwards compatibility shim
12890,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12891,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
12892,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12893,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
12894,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
12895,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12896,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12897,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
12898,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12899,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12900,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,# basic smoke test
12901,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12902,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12903,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12904,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
12905,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12906,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,#!/bin/sh'; \
12907,2a8c028a7246cd03a96c7cc8f41c4087303c642d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12908,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12909,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12910,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
12911,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12912,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
12913,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12914,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12915,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12916,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12917,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12918,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
12919,1aeda8a947bb0c1ae64c119972635cf6bcc64025,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12920,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12921,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
12922,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12923,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
12924,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12925,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12926,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
12927,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
12928,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
12929,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# backwards compatibility shim
12930,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12931,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# https://jdk.java.net/
12932,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12933,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
12934,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12935,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12936,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12937,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,# basic smoke test
12938,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12939,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12940,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12941,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# backwards compatibility shim
12942,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12943,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
12944,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12945,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12946,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12947,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
12948,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
12949,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,# basic smoke test
12950,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
12951,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
12952,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
12953,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
12954,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
12955,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
12956,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
12957,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# backwards compatibility shim
12958,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
12959,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
12960,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
12961,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
12962,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
12963,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
12964,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
12965,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
12966,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
12967,45a43909f241296d22849489dcc58c06059660c6,/8/jdk/slim/Dockerfile,# basic smoke test
12968,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12969,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
12970,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
12971,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12972,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
12973,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
12974,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
12975,0235b70854cf9251ab4a1479696975412320a9bd,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
12976,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12977,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
12978,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
12979,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12980,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,#!/bin/sh'; \
12981,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12982,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12983,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12984,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12985,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12986,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12987,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
12988,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
12989,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
12990,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
12991,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,#!/bin/sh'; \
12992,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
12993,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
12994,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
12995,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
12996,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
12997,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
12998,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
12999,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13000,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13001,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
13002,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# backwards compatibility shim
13003,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13004,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13005,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13006,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13007,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# amd64
13008,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# fallback
13009,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13010,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13011,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13012,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13013,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
13014,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13015,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13016,83fbf16d99f4094df192b4f07909b473ad1d8392,/8/jdk/buster/Dockerfile,# basic smoke test
13017,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13018,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13019,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13020,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13021,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,#!/bin/sh'; \
13022,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13023,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13024,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13025,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13026,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13027,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13028,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
13029,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13030,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
13031,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# backwards compatibility shim
13032,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13033,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
13034,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13035,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13036,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13037,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
13038,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13039,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,#!/usr/bin/env bash'; \
13040,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13041,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13042,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,# basic smoke test
13043,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13044,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13045,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13046,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
13047,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13048,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,#!/bin/sh'; \
13049,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13050,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13051,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13052,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13053,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13054,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13055,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13056,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13057,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13058,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13059,19031c95912d7964223fffab57fad4d07932c05c,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13060,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13061,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13062,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13063,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
13064,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13065,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13066,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
13067,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
13068,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13069,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13070,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13071,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# arm64v8
13072,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# amd64
13073,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# fallback
13074,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13075,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
13076,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13077,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13078,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13079,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,# basic smoke test
13080,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13081,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13082,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13083,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13084,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
13085,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# backwards compatibility shim
13086,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13087,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# https://jdk.java.net/
13088,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13089,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
13090,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13091,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13092,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13093,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,# basic smoke test
13094,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13095,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13096,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13097,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13098,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13099,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13100,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-windows.template,# http://jdk.java.net/
13101,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-windows.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13102,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13103,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13104,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
13105,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13106,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,#!/bin/sh'; \
13107,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13108,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13109,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13110,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13111,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13112,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13113,6d143fd9932ee055c5658adea2f263eed48d04ad,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13114,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13115,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13116,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
13117,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13118,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,#!/bin/sh'; \
13119,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13120,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13121,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13122,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13123,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13124,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13125,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13126,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13127,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13128,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13129,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13130,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13131,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13132,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13133,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13134,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# backwards compatibility shim
13135,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13136,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13137,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13138,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13139,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13140,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13141,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13142,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13143,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13144,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13145,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/slim/Dockerfile,# basic smoke test
13146,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13147,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13148,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13149,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13150,54c64cf47d2b705418feb68b811419a223c5a040,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
13151,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13152,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13153,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
13154,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13155,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,#!/bin/sh'; \
13156,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13157,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13158,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13159,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13160,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13161,ceae8e7dba4eb818279cc7f6947f3dc6003ae535,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13162,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13163,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13164,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13165,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
13166,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/Dockerfile-oracle-alpine.template,# basic smoke test
13167,c0b708fc06d1b52d10eee7320067ccd0b5ad06d9,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13168,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13169,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13170,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
13171,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13172,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,#!/bin/sh'; \
13173,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13174,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13175,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13176,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13177,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13178,b8ce9eff38451de3282b2eb2bcd8b520fb95e1ce,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13179,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13180,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13181,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# backwards compatibility shim
13182,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13183,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
13184,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13185,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13186,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13187,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13188,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13189,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,# basic smoke test
13190,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13191,ba1583c30a0d1883ee9b42cb5710009721409ef5,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
13192,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13193,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-servercore.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13194,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13195,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-servercore.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13196,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-servercore.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13197,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13198,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13199,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13200,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13201,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
13202,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13203,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13204,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13205,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13206,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13207,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13208,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13209,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# backwards compatibility shim
13210,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13211,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13212,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13213,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13214,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13215,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13216,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13217,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,# basic smoke test
13218,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13219,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
13220,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13221,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13222,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13223,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
13224,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13225,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13226,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13227,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13228,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# backwards compatibility shim
13229,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13230,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13231,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13232,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13233,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13234,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13235,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13236,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13237,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13238,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,# basic smoke test
13239,1733ab9061cf1a076dc0566e40edb600fc434db4,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13240,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13241,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13242,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13243,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
13244,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13245,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13246,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-servercore.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13247,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13248,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-servercore.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13249,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-servercore.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13250,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13251,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13252,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
13253,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# backwards compatibility shim
13254,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13255,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
13256,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13257,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13258,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13259,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13260,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13261,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
13262,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13263,45a43909f241296d22849489dcc58c06059660c6,/8/jre/Dockerfile,# basic smoke test
13264,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13265,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13266,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13267,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13268,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13269,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13270,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13271,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13272,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13273,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13274,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
13275,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
13276,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# backwards compatibility shim
13277,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13278,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
13279,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13280,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13281,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13282,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
13283,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13284,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
13285,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13286,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,# basic smoke test
13287,45a43909f241296d22849489dcc58c06059660c6,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13288,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13289,00a9c5c080f2a5fd1510bc0716db7afe06cbd017,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13290,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13291,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13292,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13293,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13294,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13295,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13296,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,# basic smoke test
13297,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13298,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13299,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
13300,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13301,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13302,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13303,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13304,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13305,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13306,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13307,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13308,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13309,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13310,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13311,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13312,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
13313,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13314,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13315,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13316,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13317,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13318,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13319,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13320,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13321,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
13322,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13323,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13324,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# amd64
13325,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# fallback
13326,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13327,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13328,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13329,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
13330,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13331,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13332,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13333,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13334,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13335,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,#!/bin/sh'; \
13336,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13337,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13338,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13339,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13340,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13341,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13342,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13343,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13344,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13345,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13346,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13347,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13348,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,#!/bin/sh'; \
13349,50c491c7c2378182866d89e857eb1f0c77985507,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13350,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13351,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13352,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13353,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-alpine.template,# basic smoke test
13354,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13355,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13356,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13357,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13358,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13359,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13360,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13361,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13362,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,#!/bin/sh'; \
13363,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13364,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13365,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13366,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13367,0467df283134a79840c25808093c00f7c94b9a88,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13368,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13369,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13370,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# backwards compatibility shim
13371,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13372,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13373,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13374,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13375,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13376,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13377,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13378,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13379,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13380,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13381,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,# basic smoke test
13382,c202745eb5a8d4088c9d0726359f287c40e5ee71,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13383,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13384,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13385,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13386,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13387,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13388,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13389,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13390,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
13391,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13392,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13393,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,# basic smoke test
13394,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13395,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13396,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13397,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13398,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
13399,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# backwards compatibility shim
13400,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13401,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13402,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13403,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# arm64v8
13404,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# amd64
13405,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# fallback
13406,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13407,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
13408,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13409,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13410,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13411,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,# basic smoke test
13412,32a46196b629215eb8df43562aff723179aa99db,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13413,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13414,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13415,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13416,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13417,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13418,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# arm64v8
13419,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# amd64
13420,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# fallback
13421,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13422,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13423,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13424,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,# basic smoke test
13425,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13426,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13427,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13428,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# backwards compatibility shim
13429,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13430,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13431,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13432,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13433,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13434,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13435,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13436,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,# basic smoke test
13437,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13438,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
13439,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13440,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13441,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13442,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13443,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13444,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13445,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13446,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13447,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13448,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13449,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,# basic smoke test
13450,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13451,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13452,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13453,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13454,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
13455,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13456,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13457,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13458,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13459,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
13460,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13461,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13462,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13463,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13464,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
13465,8d4775879be816b869de4042c300dc9101f7d9f3,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13466,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13467,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13468,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13469,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
13470,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# backwards compatibility shim
13471,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13472,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13473,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13474,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
13475,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13476,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13477,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13478,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,# basic smoke test
13479,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13480,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13481,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13482,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# backwards compatibility shim
13483,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13484,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13485,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13486,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13487,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13488,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13489,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13490,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,# basic smoke test
13491,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13492,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
13493,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13494,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13495,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13496,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13497,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,#!/bin/sh'; \
13498,2ec4f3ac935c208117752da22d61d9bb0be319c5,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13499,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13500,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
13501,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
13502,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13503,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13504,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13505,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13506,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# arm64v8
13507,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# amd64
13508,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# fallback
13509,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13510,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13511,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13512,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13513,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
13514,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13515,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13516,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,# basic smoke test
13517,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13518,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13519,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13520,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13521,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13522,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13523,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13524,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13525,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13526,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13527,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13528,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13529,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13530,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13531,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13532,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13533,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13534,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13535,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13536,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
13537,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13538,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13539,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13540,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13541,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# backwards compatibility shim
13542,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13543,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
13544,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13545,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
13546,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
13547,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13548,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13549,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
13550,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13551,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13552,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,# basic smoke test
13553,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13554,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13555,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13556,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
13557,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13558,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,#!/bin/sh'; \
13559,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13560,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13561,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13562,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13563,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13564,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13565,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13566,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13567,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13568,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13569,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,#!/bin/sh'; \
13570,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13571,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13572,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13573,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13574,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13575,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13576,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13577,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13578,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13579,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13580,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
13581,2493b1043e8581e2c22db2ce4ff0e217457a37ca,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13582,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13583,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13584,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
13585,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13586,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,#!/bin/bash'; \
13587,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13588,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13589,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13590,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13591,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13592,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
13593,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13594,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
13595,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13596,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13597,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13598,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13599,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13600,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
13601,17d0f9f3411d82622c762163d85cc4a6ba69af95,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13602,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13603,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13604,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13605,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13606,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
13607,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13608,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
13609,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13610,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
13611,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13612,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13613,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
13614,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13615,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13616,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
13617,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13618,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13619,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13620,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13621,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13622,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13623,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13624,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
13625,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13626,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13627,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
13628,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# amd64
13629,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# fallback
13630,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13631,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13632,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13633,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
13634,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13635,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13636,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13637,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13638,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13639,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
13640,c7846edc14a25304288c85e2e7bebe4609626512,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13641,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-alpine.template,# https://jdk.java.net/
13642,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13643,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13644,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-alpine.template,# basic smoke test
13645,a81e9d760acefc2bd22e3cd448301e27d0309070,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13646,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13647,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13648,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13649,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13650,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13651,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13652,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13653,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13654,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
13655,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13656,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13657,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,# basic smoke test
13658,60d76cf8c132ad10ea6c33c4f90b9e3d11deb0fe,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13659,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13660,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13661,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
13662,3850f26ecddd3dc1626e7fbc7ec29a61a9c67fd6,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13663,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13664,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13665,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13666,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13667,b734af2a8ee4697604035d14064fb7f3b1d5f050,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
13668,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13669,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
13670,930076b47e3a318fa0428c39579fe00f36e3b8b0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13671,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13672,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13673,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13674,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13675,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,#!/bin/sh'; \
13676,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13677,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13678,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
13679,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
13680,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13681,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13682,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13683,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13684,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13685,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13686,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13687,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13688,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13689,da1f3a4a52a54cbfad0b2f900f6d4a73406fcb67,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13690,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13691,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13692,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13693,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13694,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13695,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13696,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13697,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13698,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13699,bf1072ab57caa868bbe13683ca4e9e6169010f05,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13700,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13701,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13702,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
13703,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13704,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13705,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13706,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13707,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13708,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
13709,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13710,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13711,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13712,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13713,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13714,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13715,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13716,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13717,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13718,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13719,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13720,9a0822673dffd3e5ba66f18a8547aa60faed6d08,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
13721,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13722,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
13723,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13724,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13725,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
13726,1778c73b834d04d5b5c61baee4cce8c127031f9c,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13727,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13728,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13729,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13730,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13731,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13732,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13733,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13734,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13735,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
13736,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13737,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13738,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
13739,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13740,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13741,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,#!/bin/sh'; \
13742,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13743,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13744,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
13745,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
13746,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13747,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13748,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13749,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13750,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13751,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13752,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13753,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13754,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13755,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13756,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13757,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13758,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
13759,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13760,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13761,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
13762,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# amd64
13763,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# fallback
13764,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13765,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13766,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13767,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
13768,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13769,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13770,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
13771,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13772,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13773,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
13774,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13775,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13776,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13777,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13778,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13779,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13780,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13781,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13782,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
13783,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13784,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,#!/bin/sh'; \
13785,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13786,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13787,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13788,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13789,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13790,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13791,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13792,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13793,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13794,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13795,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13796,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13797,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13798,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13799,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13800,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
13801,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13802,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,#!/bin/sh'; \
13803,a2d46845f90bd841871419063cf12ebe4c2e2b72,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13804,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
13805,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
13806,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
13807,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,# basic smoke test
13808,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13809,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13810,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# backwards compatibility shim
13811,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13812,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
13813,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13814,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13815,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
13816,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13817,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jdk/slim/Dockerfile,# basic smoke test
13818,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13819,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13820,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13821,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13822,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13823,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
13824,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13825,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,#!/bin/sh'; \
13826,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13827,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13828,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13829,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13830,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13831,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13832,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13833,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13834,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13835,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13836,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13837,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13838,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13839,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13840,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13841,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
13842,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13843,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13844,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,# basic smoke test
13845,70db83bbbbcc0a6e9406ff695581e82fe4d84a1d,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13846,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13847,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
13848,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
13849,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13850,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13851,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13852,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
13853,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13854,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13855,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13856,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,# basic smoke test
13857,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13858,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
13859,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13860,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13861,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
13862,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13863,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
13864,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13865,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13866,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-servercore.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13867,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13868,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-servercore.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13869,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13870,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13871,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13872,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13873,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
13874,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13875,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13876,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13877,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13878,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13879,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13880,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# amd64
13881,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# fallback
13882,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13883,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13884,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
13885,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,# basic smoke test
13886,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13887,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13888,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13889,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13890,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
13891,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13892,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13893,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13894,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13895,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13896,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13897,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13898,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13899,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13900,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13901,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,#!/bin/sh'; \
13902,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13903,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13904,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13905,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13906,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13907,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13908,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13909,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13910,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13911,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13912,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
13913,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13914,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,#!/bin/sh'; \
13915,70015f4ca4c484a5c78b71fad7243a022cb1e6c2,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13916,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13917,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13918,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
13919,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
13920,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13921,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
13922,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
13923,cee45bcb0f2d6db2e3e96c5465ebd5dbddcb2aea,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
13924,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
13925,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
13926,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# backwards compatibility shim
13927,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13928,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
13929,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13930,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# amd64
13931,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# fallback
13932,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
13933,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
13934,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
13935,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
13936,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13937,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,# basic smoke test
13938,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13939,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13940,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13941,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
13942,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13943,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
13944,dd54ae37bc44d19ecb5be702d36d664fed2c68e4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13945,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13946,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13947,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
13948,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13949,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
13950,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
13951,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
13952,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
13953,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,#!/bin/sh'; \
13954,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
13955,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
13956,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
13957,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
13958,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
13959,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
13960,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
13961,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
13962,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13963,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
13964,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# backwards compatibility shim
13965,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
13966,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
13967,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13968,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
13969,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
13970,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,# basic smoke test
13971,e715db19b8abe216948ef5b81dcb352273bd69f3,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13972,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
13973,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
13974,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
13975,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13976,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
13977,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# arm64v8
13978,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# amd64
13979,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# fallback
13980,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
13981,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
13982,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,# basic smoke test
13983,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
13984,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13985,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13986,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13987,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13988,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
13989,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13990,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
13991,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
13992,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
13993,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
13994,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
13995,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
13996,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
13997,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
13998,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
13999,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14000,3f6ab87ebe4bdea4470d0ff1e26f61dadd646c64,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14001,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14002,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14003,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14004,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14005,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,#!/bin/sh'; \
14006,f6c1efc5fdf4358b633042522920a1624c95914b,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14007,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14008,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14009,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14010,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14011,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,#!/bin/sh'; \
14012,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14013,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14014,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14015,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14016,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14017,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14018,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14019,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14020,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14021,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14022,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14023,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14024,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14025,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14026,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14027,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14028,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14029,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14030,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14031,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14032,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14033,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14034,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14035,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14036,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
14037,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14038,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14039,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14040,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14041,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14042,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14043,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14044,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
14045,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14046,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14047,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14048,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14049,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14050,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14051,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14052,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14053,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14054,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# backwards compatibility shim
14055,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14056,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14057,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14058,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# arm64v8
14059,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# amd64
14060,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# fallback
14061,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14062,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14063,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14064,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14065,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14066,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,# basic smoke test
14067,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14068,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14069,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14070,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14071,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14072,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14073,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14074,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14075,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14076,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14077,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14078,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14079,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,# basic smoke test
14080,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14081,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14082,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14083,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# Default to UTF-8 file.encoding
14084,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14085,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,#!/bin/sh'; \
14086,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14087,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14088,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14089,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14090,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14091,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14092,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14093,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14094,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14095,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14096,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,#!/bin/sh'; \
14097,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14098,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14099,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14100,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14101,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14102,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14103,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14104,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14105,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14106,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14107,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14108,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14109,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14110,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14111,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14112,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14113,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14114,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14115,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
14116,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
14117,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14118,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,#!/bin/sh'; \
14119,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14120,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14121,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
14122,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14123,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14124,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14125,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14126,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14127,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14128,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14129,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14130,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
14131,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14132,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14133,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14134,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14135,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14136,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14137,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14138,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14139,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
14140,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14141,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,#!/bin/sh'; \
14142,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14143,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14144,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14145,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14146,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14147,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14148,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14149,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14150,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14151,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14152,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
14153,d93be18f4f2d5e8457169cac00e559d953b6028e,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14154,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
14155,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14156,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14157,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,# basic smoke test
14158,1398299a268f339254a94b606113d1627dec342e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14159,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14160,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14161,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
14162,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14163,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,#!/bin/bash'; \
14164,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14165,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14166,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14167,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14168,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14169,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14170,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14171,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14172,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14173,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# backwards compatibility shim
14174,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14175,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
14176,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14177,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14178,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14179,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14180,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14181,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
14182,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14183,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14184,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/Dockerfile,# basic smoke test
14185,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14186,8b20818d91705361ff42b597369620680d0af98c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14187,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14188,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
14189,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14190,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14191,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
14192,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14193,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14194,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
14195,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14196,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14197,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14198,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14199,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14200,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14201,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14202,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14203,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14204,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,#!/bin/sh'; \
14205,d22a4675dad30274c9ed6cfd9b98bfa0fec9d4a9,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14206,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14207,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14208,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14209,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14210,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14211,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14212,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14213,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14214,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14215,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14216,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14217,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14218,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14219,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14220,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14221,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14222,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14223,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14224,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14225,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14226,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14227,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
14228,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14229,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14230,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14231,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14232,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14233,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14234,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14235,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14236,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14237,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
14238,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
14239,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14240,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14241,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14242,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14243,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14244,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14245,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14246,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14247,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14248,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14249,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14250,9089afd69bd69c34413b064bc36c15509b2ed4df,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
14251,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14252,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14253,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14254,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,# basic smoke test
14255,ee26e3735002dfb83551faf0f3b73822addc4799,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14256,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14257,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14258,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14259,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14260,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
14261,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
14262,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14263,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14264,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14265,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14266,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# arm64v8
14267,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# amd64
14268,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# fallback
14269,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14270,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14271,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14272,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14273,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
14274,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14275,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14276,1f1ff0100fb7d6dad50e71f50f11ce10a1f1dcef,/11/jre/slim-buster/Dockerfile,# basic smoke test
14277,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14278,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14279,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
14280,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# backwards compatibility shim
14281,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14282,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
14283,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14284,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14285,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
14286,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14287,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14288,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
14289,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14290,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14291,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/8/jre/Dockerfile,# basic smoke test
14292,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14293,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14294,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
14295,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# backwards compatibility shim
14296,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14297,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14298,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14299,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14300,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# arm64v8
14301,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# amd64
14302,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# fallback
14303,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14304,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14305,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14306,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14307,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
14308,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14309,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14310,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/buster/Dockerfile,# basic smoke test
14311,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14312,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14313,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14314,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14315,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14316,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14317,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,#!/bin/sh'; \
14318,c5febc686f445910ce2075d8b2434c7ec23ffc6c,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14319,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14320,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14321,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14322,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
14323,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# backwards compatibility shim
14324,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14325,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14326,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14327,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# arm64v8
14328,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# amd64
14329,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# fallback
14330,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14331,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
14332,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14333,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14334,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14335,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,# basic smoke test
14336,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14337,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14338,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14339,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14340,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14341,ff0e8fce865700e3632272a3acc70ed3a1a2065c,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14342,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14343,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14344,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
14345,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14346,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,#!/bin/sh'; \
14347,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14348,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14349,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14350,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14351,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14352,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14353,ae4562dcd2d99eb9d6224517f9e6b4ab4c2b4672,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14354,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14355,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14356,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14357,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14358,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14359,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14360,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14361,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14362,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14363,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
14364,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14365,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14366,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14367,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14368,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14369,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14370,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14371,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14372,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14373,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14374,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14375,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14376,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14377,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,#!/bin/sh'; \
14378,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14379,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14380,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14381,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14382,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14383,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14384,502f18c2a34cb4a6f50ca6943a82e9a0b18f4254,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14385,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14386,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14387,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# backwards compatibility shim
14388,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14389,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14390,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14391,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14392,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14393,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14394,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14395,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14396,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14397,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14398,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jdk/slim/Dockerfile,# basic smoke test
14399,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14400,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14401,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# backwards compatibility shim
14402,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14403,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
14404,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14405,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14406,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14407,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14408,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14409,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14410,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14411,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14412,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,# basic smoke test
14413,451e66427f3c53fada288aaff950617c5864745f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14414,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14415,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14416,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14417,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14418,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14419,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14420,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14421,4815a7dc43f0fb212c40f357624fb4ec943992bf,/8-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14422,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14423,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14424,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14425,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
14426,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14427,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14428,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14429,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# backwards compatibility shim
14430,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14431,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
14432,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14433,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14434,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
14435,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14436,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14437,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
14438,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14439,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14440,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,# basic smoke test
14441,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14442,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14443,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14444,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14445,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14446,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14447,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14448,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14449,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
14450,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14451,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,#!/bin/sh'; \
14452,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14453,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14454,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14455,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14456,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14457,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14458,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14459,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14460,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14461,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
14462,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14463,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14464,d912163e5aa10f916be7ac40ac0de7e8a82c4547,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14465,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14466,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14467,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14468,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14469,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14470,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14471,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14472,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
14473,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
14474,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14475,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14476,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,# basic smoke test
14477,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14478,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14479,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14480,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14481,d93be18f4f2d5e8457169cac00e559d953b6028e,/Dockerfile-alpine.template,# https://jdk.java.net/
14482,d93be18f4f2d5e8457169cac00e559d953b6028e,/Dockerfile-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14483,d93be18f4f2d5e8457169cac00e559d953b6028e,/Dockerfile-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14484,d93be18f4f2d5e8457169cac00e559d953b6028e,/Dockerfile-alpine.template,# basic smoke test
14485,d93be18f4f2d5e8457169cac00e559d953b6028e,/Dockerfile-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14486,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14487,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14488,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
14489,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14490,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,#!/bin/sh'; \
14491,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14492,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14493,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14494,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14495,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14496,6a45699ce1082b389dfe3ed052814a28433e0668,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14497,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14498,8b20818d91705361ff42b597369620680d0af98c,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14499,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14500,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14501,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
14502,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14503,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
14504,2ac2312f6374ae864c3166466fb366967b97e47a,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14505,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14506,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
14507,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14508,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14509,2695acad7bb0cd43353dc6c7d5cfc6424ab12b54,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14510,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14511,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14512,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14513,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14514,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,#!/bin/bash'; \
14515,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14516,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14517,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14518,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14519,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14520,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14521,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14522,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14523,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14524,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14525,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14526,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14527,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14528,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14529,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
14530,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14531,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14532,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
14533,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14534,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14535,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
14536,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14537,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14538,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14539,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14540,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14541,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14542,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14543,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14544,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
14545,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-nanoserver.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14546,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-oracle-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14547,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14548,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14549,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14550,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14551,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,#!/bin/sh'; \
14552,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14553,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14554,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14555,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14556,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14557,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14558,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14559,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14560,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14561,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14562,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,#!/bin/sh'; \
14563,434085b54bbb735683242c232d8b0d79259ce3c0,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14564,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14565,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14566,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14567,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
14568,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14569,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14570,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14571,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14572,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
14573,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14574,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14575,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14576,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
14577,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14578,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,"# this ""case"" statement is generated via ""update.sh"""
14579,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14580,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14581,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,# basic smoke test
14582,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14583,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14584,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14585,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14586,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14587,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,#!/bin/sh'; \
14588,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14589,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14590,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14591,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14592,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14593,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14594,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14595,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14596,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14597,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14598,b4a3c296023e590e410f645ab83d3c11a30cf535,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14599,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14600,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14601,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14602,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14603,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,#!/bin/sh'; \
14604,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14605,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14606,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14607,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14608,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14609,9865ab7ac7d26a1ba05d5eadde059c01873bc12d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14610,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14611,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14612,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14613,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14614,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14615,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14616,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14617,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14618,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
14619,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14620,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14621,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14622,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14623,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14624,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14625,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14626,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14627,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
14628,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14629,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14630,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
14631,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14632,bd65529778e956612c0bd689aa6ff1ace391859e,/8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
14633,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14634,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# backwards compatibility shim
14635,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14636,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
14637,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14638,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14639,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14640,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/slim/Dockerfile,# basic smoke test
14641,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14642,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14643,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14644,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
14645,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
14646,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14647,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14648,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,# basic smoke test
14649,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14650,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14651,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# backwards compatibility shim
14652,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14653,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
14654,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14655,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
14656,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14657,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,# basic smoke test
14658,3eb0351b208d739fac35345c85e3c6237c2114ec,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14659,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14660,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14661,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
14662,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14663,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,#!/bin/sh'; \
14664,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14665,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14666,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14667,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14668,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14669,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14670,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14671,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14672,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14673,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14674,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14675,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,#!/bin/sh'; \
14676,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14677,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14678,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
14679,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
14680,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14681,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14682,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14683,4b9abf8a5458b15b43349f38ac670dae39967e24,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14684,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14685,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14686,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14687,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14688,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,#!/bin/sh'; \
14689,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14690,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14691,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14692,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14693,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14694,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14695,78e731d8ba269c8d50c0f4ad9ee431c1c32f179a,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14696,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14697,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14698,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
14699,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14700,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,#!/bin/sh'; \
14701,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14702,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14703,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14704,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14705,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14706,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14707,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14708,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14709,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# backwards compatibility shim
14710,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14711,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14712,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14713,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14714,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14715,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14716,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14717,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
14718,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14719,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14720,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/Dockerfile,# basic smoke test
14721,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14722,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
14723,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
14724,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14725,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,#!/bin/sh'; \
14726,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14727,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
14728,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14729,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14730,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14731,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14732,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
14733,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14734,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14735,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14736,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
14737,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14738,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,#!/bin/sh'; \
14739,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14740,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14741,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14742,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14743,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14744,bb0fea2a160c93950c99f44fcf8fe1685c198c75,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14745,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14746,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14747,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14748,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14749,fd4ce4b1cd4188dc7803afdedda8a6f97f16b605,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14750,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14751,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
14752,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14753,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14754,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
14755,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14756,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14757,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
14758,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14759,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14760,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14761,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14762,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14763,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14764,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14765,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
14766,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14767,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,#!/bin/sh'; \
14768,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14769,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14770,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14771,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14772,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14773,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14774,2f9d8d32f19425da337cf5793bdffda6909f5fec,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14775,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14776,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14777,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14778,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
14779,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14780,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14781,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14782,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14783,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
14784,bd732a9833011e418a553f0b603a66d9c4711391,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14785,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14786,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14787,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14788,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14789,54c64cf47d2b705418feb68b811419a223c5a040,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
14790,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14791,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14792,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
14793,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14794,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,#!/bin/sh'; \
14795,97ab55cab073e87658ec6f993538038bfc7a858d,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
14796,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14797,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14798,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14799,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
14800,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# backwards compatibility shim
14801,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14802,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14803,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14804,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# arm64v8
14805,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# amd64
14806,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# fallback
14807,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14808,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
14809,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14810,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14811,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14812,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,# basic smoke test
14813,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14814,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14815,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14816,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14817,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
14818,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14819,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
14820,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
14821,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14822,eaf1c5575ab9763caf66d8d5debb7ec089411740,/8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
14823,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,# https://jdk.java.net/
14824,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
14825,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14826,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,# basic smoke test
14827,675f6c77d581d6d9dfd1be1bdb91a3237ef1bc1c,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14828,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14829,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14830,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14831,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
14832,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14833,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14834,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
14835,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14836,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14837,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
14838,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14839,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14840,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14841,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14842,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14843,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14844,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14845,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14846,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14847,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14848,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14849,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14850,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14851,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14852,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14853,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14854,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14855,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,# basic smoke test
14856,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14857,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14858,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14859,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14860,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
14861,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# backwards compatibility shim
14862,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14863,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14864,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14865,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
14866,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14867,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14868,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14869,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,# basic smoke test
14870,07af9d796441a745f60db9a812c33fe0db18529c,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14871,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14872,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14873,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
14874,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14875,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,#!/bin/sh'; \
14876,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14877,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14878,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14879,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14880,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14881,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14882,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14883,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14884,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14885,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14886,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14887,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,# basic smoke test
14888,0b27ae01321952c764c24c5f79c146fce11ec8a7,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14889,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14890,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14891,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14892,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
14893,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# backwards compatibility shim
14894,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14895,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
14896,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
14897,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# arm64v8
14898,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# amd64
14899,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# fallback
14900,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14901,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
14902,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14903,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14904,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14905,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,# basic smoke test
14906,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14907,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
14908,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14909,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
14910,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
14911,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14912,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
14913,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,# basic smoke test
14914,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14915,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
14916,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14917,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
14918,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# backwards compatibility shim
14919,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
14920,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
14921,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
14922,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
14923,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
14924,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
14925,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
14926,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
14927,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
14928,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
14929,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/Dockerfile,# basic smoke test
14930,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14931,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14932,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14933,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14934,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14935,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14936,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14937,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
14938,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14939,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
14940,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14941,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
14942,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
14943,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14944,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,#!/bin/sh'; \
14945,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14946,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14947,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14948,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14949,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14950,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14951,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14952,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14953,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
14954,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14955,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14956,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14957,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14958,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14959,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14960,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14961,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
14962,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14963,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
14964,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14965,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
14966,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
14967,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
14968,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
14969,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
14970,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
14971,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
14972,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
14973,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
14974,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
14975,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
14976,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14977,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14978,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
14979,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14980,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
14981,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14982,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
14983,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
14984,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
14985,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
14986,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
14987,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
14988,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
14989,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
14990,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
14991,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
14992,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
14993,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
14994,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
14995,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
14996,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
14997,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,# basic smoke test
14998,d283315254bbaadabfe76ef0ebfda770debabfdb,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
14999,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15000,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15001,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15002,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15003,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15004,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15005,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# backwards compatibility shim
15006,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15007,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15008,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15009,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15010,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15011,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15012,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15013,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15014,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15015,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15016,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/slim/Dockerfile,# basic smoke test
15017,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15018,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15019,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15020,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15021,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,#!/bin/sh'; \
15022,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15023,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15024,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15025,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15026,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15027,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15028,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15029,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15030,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15031,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15032,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15033,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15034,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,# basic smoke test
15035,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15036,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15037,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15038,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15039,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15040,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15041,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
15042,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-nanoserver.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15043,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15044,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15045,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15046,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15047,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15048,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15049,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15050,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15051,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15052,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
15053,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# backwards compatibility shim
15054,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15055,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15056,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15057,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
15058,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15059,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15060,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15061,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,# basic smoke test
15062,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15063,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15064,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
15065,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15066,030bf19db79998e9f9861d1ce848bbf1f41ee050,/openjdk-8-jdk/alpine/Dockerfile,#!/bin/sh -e'; \
15067,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15068,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15069,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15070,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15071,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15072,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15073,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15074,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
15075,07f251a7891fb4624535379d58b50f585a32c279,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15076,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15077,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15078,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# Default to UTF-8 file.encoding
15079,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15080,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15081,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# arm64v8
15082,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# amd64
15083,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# fallback
15084,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15085,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15086,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
15087,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,# basic smoke test
15088,6d84f8417bf9eb6d25515ab2400c02704bf9b8ea,/16/jdk/oraclelinux8/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15089,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15090,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15091,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15092,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15093,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15094,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15095,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15096,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15097,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
15098,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15099,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15100,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,# basic smoke test
15101,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15102,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15103,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15104,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15105,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15106,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,#!/bin/sh'; \
15107,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15108,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15109,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15110,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15111,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15112,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15113,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
15114,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-nanoserver.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15115,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15116,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15117,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15118,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
15119,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15120,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
15121,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15122,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15123,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15124,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15125,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15126,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15127,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# arm64v8
15128,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# amd64
15129,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# fallback
15130,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15131,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15132,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
15133,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,# basic smoke test
15134,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15135,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15136,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15137,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
15138,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15139,9089afd69bd69c34413b064bc36c15509b2ed4df,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
15140,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15141,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15142,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15143,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15144,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,#!/bin/sh'; \
15145,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15146,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15147,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15148,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15149,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15150,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15151,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15152,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15153,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15154,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15155,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15156,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15157,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15158,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15159,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15160,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15161,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15162,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,#!/bin/sh'; \
15163,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15164,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15165,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15166,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15167,c34391ea981c804c097981bad8403ec4bd934285,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15168,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15169,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15170,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15171,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
15172,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15173,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15174,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15175,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15176,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15177,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15178,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15179,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15180,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15181,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15182,21d9cc19133eb963fba57bd8861c5642b0db53bd,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15183,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15184,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15185,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15186,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15187,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
15188,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15189,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15190,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15191,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15192,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15193,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15194,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15195,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15196,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15197,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15198,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15199,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15200,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15201,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15202,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15203,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15204,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15205,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15206,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15207,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15208,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15209,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15210,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15211,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15212,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15213,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15214,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15215,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,# basic smoke test
15216,2544422915ae09bf77b02f0afaadaad5ba204cef,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15217,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15218,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15219,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
15220,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15221,f60edc7cfe9fa4d4473ef027c6fb2d5e1f6c17f9,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
15222,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15223,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15224,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15225,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15226,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15227,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15228,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15229,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15230,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15231,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
15232,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15233,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15234,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15235,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15236,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15237,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15238,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15239,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15240,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15241,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15242,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15243,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15244,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15245,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15246,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15247,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15248,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
15249,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15250,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15251,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15252,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15253,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15254,2057305e0474ebf6461daea607ff02874d690914,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15255,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15256,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15257,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15258,873fb56728befef8ecaf8436c3a27fd239cba301,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15259,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15260,46dbd23011cd18e86a7ce4a326de1c0f8fdf7463,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15261,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15262,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15263,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15264,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15265,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15266,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15267,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15268,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15269,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15270,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15271,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15272,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15273,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15274,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,#!/bin/sh'; \
15275,e2c8648d39ef1492df3482de3fda0ee3f8955fb1,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15276,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15277,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15278,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# backwards compatibility shim
15279,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15280,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15281,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15282,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15283,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15284,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15285,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15286,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15287,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15288,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15289,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/slim/Dockerfile,# basic smoke test
15290,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15291,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15292,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15293,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15294,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15295,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15296,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15297,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
15298,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15299,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15300,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15301,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15302,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15303,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15304,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15305,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15306,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# backwards compatibility shim
15307,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15308,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15309,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15310,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15311,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15312,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15313,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15314,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15315,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15316,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15317,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,# basic smoke test
15318,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15319,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15320,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15321,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15322,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15323,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,#!/bin/sh'; \
15324,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15325,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15326,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15327,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15328,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15329,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15330,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15331,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15332,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15333,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15334,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15335,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15336,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15337,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15338,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15339,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,#!/bin/sh'; \
15340,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15341,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15342,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15343,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15344,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15345,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15346,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15347,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15348,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15349,8d80a82bb2a2bb895beffebe28ef221e36449446,/openjdk-8-jre/alpine/Dockerfile,#!/bin/sh -e'; \
15350,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15351,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
15352,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
15353,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15354,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,#!/bin/sh'; \
15355,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15356,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15357,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
15358,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15359,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15360,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15361,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15362,fc83ef9b145590878eeba8f3293f0acfb9045877,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15363,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15364,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15365,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15366,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15367,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15368,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15369,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15370,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15371,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
15372,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15373,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15374,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,# basic smoke test
15375,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15376,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,# https://jdk.java.net/
15377,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15378,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15379,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,# basic smoke test
15380,bde1e9a0f36e12e3df58b81acddd695fd140cf6a,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15381,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15382,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15383,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15384,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15385,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15386,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15387,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15388,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15389,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15390,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
15391,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15392,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15393,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15394,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15395,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15396,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15397,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15398,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15399,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15400,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15401,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15402,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15403,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15404,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15405,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15406,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15407,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,# basic smoke test
15408,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15409,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15410,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15411,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15412,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
15413,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15414,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,#!/bin/sh'; \
15415,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15416,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15417,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15418,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15419,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15420,c38dea4532ea7833b18b961e2bac37af85c9d064,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15421,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15422,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15423,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
15424,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15425,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
15426,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15427,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15428,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15429,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15430,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15431,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15432,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15433,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
15434,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15435,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15436,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15437,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15438,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15439,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15440,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# amd64
15441,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# fallback
15442,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15443,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15444,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,# basic smoke test
15445,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15446,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15447,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15448,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15449,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15450,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15451,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15452,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# arm64v8
15453,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# amd64
15454,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# fallback
15455,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15456,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15457,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15458,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15459,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15460,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,# basic smoke test
15461,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15462,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15463,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15464,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
15465,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15466,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
15467,193df6f21c76adb7bf23c0a6791fcbc28f6ec5fc,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15468,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15469,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15470,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15471,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
15472,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# backwards compatibility shim
15473,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15474,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15475,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15476,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# arm64v8
15477,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# amd64
15478,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# fallback
15479,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15480,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
15481,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15482,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15483,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15484,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,# basic smoke test
15485,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15486,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15487,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15488,5fb0ba0b6f08e6647a1ba4fbdf8263895b1cf61f,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15489,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15490,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15491,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15492,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15493,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15494,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15495,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15496,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15497,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
15498,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15499,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
15500,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15501,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15502,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,# basic smoke test
15503,311e8bb2d3d322cf0e00366408dd5e1c3210bfce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15504,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15505,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15506,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15507,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15508,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,#!/bin/sh'; \
15509,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15510,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15511,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15512,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15513,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15514,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15515,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15516,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15517,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15518,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# backwards compatibility shim
15519,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15520,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15521,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15522,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15523,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15524,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15525,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15526,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,# basic smoke test
15527,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15528,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15529,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15530,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15531,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
15532,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15533,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,#!/bin/sh'; \
15534,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15535,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15536,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15537,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15538,0467df283134a79840c25808093c00f7c94b9a88,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15539,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15540,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15541,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
15542,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# backwards compatibility shim
15543,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15544,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
15545,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15546,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15547,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15548,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15549,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15550,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
15551,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15552,1733ab9061cf1a076dc0566e40edb600fc434db4,/8/jre/Dockerfile,# basic smoke test
15553,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15554,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15555,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15556,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
15557,a316e6bfd44c82c3b5c801767d145f0ecb676aa6,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15558,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15559,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15560,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15561,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15562,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15563,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15564,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15565,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15566,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15567,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15568,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
15569,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15570,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
15571,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15572,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
15573,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15574,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15575,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,#!/bin/sh'; \
15576,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15577,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15578,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15579,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15580,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15581,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15582,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15583,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15584,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15585,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
15586,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15587,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
15588,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,# Default to UTF-8 file.encoding
15589,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,# backwards compatibility shim
15590,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15591,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
15592,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
15593,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15594,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,#!/usr/bin/env bash'; \
15595,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15596,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15597,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15598,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,# basic smoke test
15599,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15600,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
15601,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,# Default to UTF-8 file.encoding
15602,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,# backwards compatibility shim
15603,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15604,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15605,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"# this ""case"" statement is generated via ""update.sh"""
15606,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15607,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,#!/usr/bin/env bash'; \
15608,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15609,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15610,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15611,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,# basic smoke test
15612,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15613,92b9cd2adf595f48da92b39976bbbab474c4837c,/Dockerfile-oracle-slim.template,"/*; \
	\
	arch=""$(dpkg --print-architecture)""; \
# this ""case"" statement is generated via ""update.sh""
	%%ARCH-CASE%%; \
	\
	wget -O openjdk.tgz ""$downloadUrl""; \
	echo ""$downloadSha256 */"
15614,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15615,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
15616,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15617,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,# basic smoke test
15618,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15619,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15620,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15621,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
15622,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15623,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,#!/bin/bash'; \
15624,eaf1c5575ab9763caf66d8d5debb7ec089411740,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15625,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15626,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15627,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
15628,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15629,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15630,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15631,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15632,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15633,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,#!/bin/sh'; \
15634,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15635,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15636,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
15637,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
15638,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15639,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15640,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15641,258870647c5a4281c4cc81d0d17b6fd95bcf4141,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15642,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15643,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15644,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
15645,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15646,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,#!/bin/sh'; \
15647,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15648,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15649,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15650,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15651,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15652,c68ebcca06c8740939866575cfe39ee4ad84c782,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15653,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15654,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15655,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
15656,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15657,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,#!/bin/sh'; \
15658,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15659,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15660,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15661,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15662,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15663,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15664,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15665,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15666,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15667,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15668,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
15669,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15670,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
15671,bc2fcfad89194727ec8a9334730af6ff4d8c44a7,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15672,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
15673,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,# Default to UTF-8 file.encoding
15674,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,# backwards compatibility shim
15675,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15676,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,# https://jdk.java.net/
15677,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15678,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,#!/usr/bin/env bash'; \
15679,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15680,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15681,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15682,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,# basic smoke test
15683,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15684,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-slim.template,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15685,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15686,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
15687,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
15688,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15689,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,#!/bin/sh'; \
15690,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15691,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15692,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
15693,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
15694,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15695,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15696,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15697,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15698,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15699,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15700,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15701,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15702,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15703,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15704,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15705,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15706,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
15707,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15708,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15709,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15710,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15711,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15712,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15713,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# arm64v8
15714,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# amd64
15715,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# fallback
15716,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15717,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15718,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
15719,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,# basic smoke test
15720,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15721,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15722,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15723,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
15724,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15725,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,#!/bin/sh'; \
15726,054cea7585e6c0e4e98d133378ea38061a2ae3ac,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15727,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15728,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15729,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15730,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
15731,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15732,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15733,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,# basic smoke test
15734,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15735,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15736,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15737,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# backwards compatibility shim
15738,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15739,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15740,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15741,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15742,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15743,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15744,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15745,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,# basic smoke test
15746,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15747,9b88b83ce32c3e8ebd5bf1faae8524501f8c7afb,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15748,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15749,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15750,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
15751,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15752,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,#!/bin/sh'; \
15753,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15754,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15755,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15756,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15757,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15758,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15759,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15760,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15761,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15762,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
15763,aac815a21ffd5690192e06202d6c065a49ed655f,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15764,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15765,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15766,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15767,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15768,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15769,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15770,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15771,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15772,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15773,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
15774,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15775,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15776,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15777,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
15778,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# backwards compatibility shim
15779,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15780,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# https://jdk.java.net/
15781,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15782,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
15783,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15784,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15785,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15786,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,# basic smoke test
15787,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15788,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15789,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15790,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15791,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15792,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15793,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15794,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15795,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15796,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15797,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15798,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
15799,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# backwards compatibility shim
15800,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15801,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# https://jdk.java.net/
15802,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15803,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
15804,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15805,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15806,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15807,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,# basic smoke test
15808,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15809,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15810,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
15811,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
15812,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15813,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
15814,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,# basic smoke test
15815,5af847883c715d9dc76ace53ddbbf84a923e568a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15816,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15817,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15818,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15819,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15820,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15821,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
15822,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15823,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15824,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,#!/bin/sh'; \
15825,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15826,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15827,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15828,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15829,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15830,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15831,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15832,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15833,ba6f55a8a023c30b212e08dd5ea89951a96992ae,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
15834,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15835,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
15836,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# backwards compatibility shim
15837,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15838,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15839,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15840,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
15841,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# arm64v8
15842,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# amd64
15843,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# fallback
15844,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15845,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15846,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15847,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15848,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
15849,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15850,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15851,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,# basic smoke test
15852,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15853,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15854,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15855,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# backwards compatibility shim
15856,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15857,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15858,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15859,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
15860,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15861,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15862,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15863,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,# basic smoke test
15864,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15865,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
15866,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
15867,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
15868,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
15869,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
15870,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
15871,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
15872,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,# basic smoke test
15873,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
15874,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15875,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
15876,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15877,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15878,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,#!/bin/sh'; \
15879,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15880,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15881,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15882,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15883,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15884,aa4a339f9aa5a0ef0eaac0c08297b796b2ef81ae,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15885,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15886,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15887,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15888,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
15889,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15890,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15891,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15892,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15893,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15894,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,#!/bin/sh'; \
15895,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15896,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15897,30b27d0b3b16ae395859ba47610b858076324508,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15898,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15899,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15900,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15901,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
15902,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15903,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15904,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15905,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
15906,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15907,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,#!/bin/sh'; \
15908,d1890fa5206eee489ab6285afa2a52f409dcfdc4,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15909,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
15910,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
15911,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
15912,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15913,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15914,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# Default to UTF-8 file.encoding
15915,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15916,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,#!/bin/sh'; \
15917,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15918,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15919,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15920,882461ade8207de7647d083009200de85eb978bc,/6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15921,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15922,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15923,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
15924,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15925,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
15926,e7c6ade3d9d636c39fbbfa30c144a93fbb038494,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
15927,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15928,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15929,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# backwards compatibility shim
15930,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15931,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15932,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15933,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15934,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15935,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15936,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15937,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15938,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15939,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15940,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jre/slim/Dockerfile,# basic smoke test
15941,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
15942,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
15943,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
15944,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
15945,b22cd578c9eafb0cf9f2a64352aa79d17b6eb644,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
15946,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15947,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
15948,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
15949,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15950,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,#!/bin/sh'; \
15951,c9b01ac2d89222ede86d8ce47becfa8ec869dd3b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
15952,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15953,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
15954,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
15955,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15956,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
15957,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15958,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15959,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15960,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# backwards compatibility shim
15961,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15962,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15963,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15964,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
15965,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
15966,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15967,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15968,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15969,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15970,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15971,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/8/jre/slim/Dockerfile,# basic smoke test
15972,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
15973,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
15974,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
15975,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
15976,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
15977,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
15978,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
15979,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
15980,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
15981,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
15982,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
15983,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
15984,1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
15985,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
15986,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
15987,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# backwards compatibility shim
15988,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
15989,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
15990,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
15991,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
15992,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
15993,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
15994,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
15995,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
15996,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
15997,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
15998,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,# basic smoke test
15999,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16000,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16001,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16002,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16003,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16004,d99cc7ed3be85c89b6ac3968f270e670c243b807,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16005,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16006,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16007,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16008,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16009,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16010,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16011,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16012,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16013,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16014,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16015,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16016,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16017,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,# basic smoke test
16018,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16019,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16020,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16021,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16022,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
16023,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16024,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16025,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16026,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16027,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16028,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,#!/bin/sh'; \
16029,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16030,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16031,7c892b454f53426dbf9cb8a76ca4ae8dfd7aa40f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16032,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16033,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16034,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# backwards compatibility shim
16035,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16036,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16037,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16038,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16039,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16040,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16041,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16042,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,# basic smoke test
16043,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16044,626e2f82bb753cb530feea7955698c29d346e738,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16045,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16046,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16047,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
16048,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16049,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,#!/bin/sh'; \
16050,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16051,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16052,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16053,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16054,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16055,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16056,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16057,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16058,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16059,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16060,52f18b0051ad39514c6dea65555bfed14c537598,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16061,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16062,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16063,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16064,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16065,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16066,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16067,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
16068,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# backwards compatibility shim
16069,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16070,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16071,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16072,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16073,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# arm64v8
16074,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# amd64
16075,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# fallback
16076,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16077,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16078,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16079,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16080,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
16081,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16082,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16083,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/buster/Dockerfile,# basic smoke test
16084,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16085,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16086,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16087,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16088,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,#!/bin/sh'; \
16089,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16090,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16091,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16092,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16093,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16094,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16095,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16096,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
16097,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
16098,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16099,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
16100,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,# basic smoke test
16101,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16102,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16103,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16104,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16105,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16106,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16107,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16108,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16109,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16110,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16111,06552bdff28039988fca96ec7f810456849d420f,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
16112,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16113,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16114,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16115,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16116,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
16117,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16118,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16119,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16120,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16121,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16122,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16123,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16124,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16125,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16126,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16127,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16128,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16129,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
16130,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16131,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16132,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16133,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16134,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16135,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
16136,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16137,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16138,2dd0496901a9c01c78895d0e6618b36c08f78bde,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16139,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16140,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16141,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16142,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16143,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,#!/bin/sh'; \
16144,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16145,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16146,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16147,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16148,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16149,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16150,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16151,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16152,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16153,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16154,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16155,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16156,d2acc0356b5a68a4d168462a3f5f0e29444982b9,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16157,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16158,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16159,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16160,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
16161,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16162,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16163,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16164,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16165,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16166,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,#!/bin/sh'; \
16167,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16168,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16169,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16170,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16171,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16172,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16173,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16174,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
16175,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
16176,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16177,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16178,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16179,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# arm64v8
16180,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# amd64
16181,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# fallback
16182,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16183,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
16184,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16185,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16186,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16187,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,# basic smoke test
16188,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16189,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16190,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# backwards compatibility shim
16191,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16192,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
16193,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16194,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
16195,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
16196,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16197,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,# basic smoke test
16198,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16199,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16200,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16201,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16202,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
16203,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16204,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16205,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16206,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16207,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16208,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16209,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16210,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16211,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
16212,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16213,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,#!/bin/sh'; \
16214,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16215,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16216,b118fdc1e9b1aebdc178537551101dffe1f612a3,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16217,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
16218,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16219,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16220,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,# basic smoke test
16221,44d6908951d61d6f3fc8d08a4c0e7857f0914ee5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16222,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16223,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16224,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16225,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16226,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16227,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16228,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16229,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16230,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16231,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16232,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# backwards compatibility shim
16233,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16234,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16235,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16236,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16237,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16238,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16239,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16240,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,# basic smoke test
16241,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16242,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16243,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
16244,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16245,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16246,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
16247,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,# backwards compatibility shim
16248,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16249,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16250,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16251,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
16252,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16253,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16254,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16255,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,# basic smoke test
16256,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16257,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16258,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16259,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16260,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16261,50dcb999fcc9a922bd4a60769bcc514ca988a56f,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16262,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16263,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16264,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16265,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16266,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
16267,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16268,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16269,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
16270,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16271,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16272,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16273,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16274,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16275,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16276,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16277,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16278,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16279,dd3eaaae87061493f86dc3f45c3aa1ce3b8f2ca8,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16280,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16281,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16282,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# backwards compatibility shim
16283,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16284,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16285,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16286,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16287,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16288,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16289,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16290,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16291,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16292,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16293,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/slim/Dockerfile,# basic smoke test
16294,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16295,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16296,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
16297,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16298,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,#!/bin/sh'; \
16299,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16300,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16301,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16302,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16303,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16304,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16305,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16306,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16307,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16308,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16309,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16310,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16311,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16312,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16313,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16314,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16315,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16316,a233b9f3054c3e625cc7e94ef50c4866195b25e5,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16317,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16318,f47afa13905074605a616adf3b9c01c396ed74a8,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16319,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16320,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16321,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16322,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16323,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
16324,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16325,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16326,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
16327,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16328,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16329,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16330,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16331,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16332,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16333,cbbefa82b92964e6fd98b20353be7010f970c60a,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16334,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16335,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16336,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
16337,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16338,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,#!/bin/sh'; \
16339,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16340,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16341,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16342,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16343,b93e629663f80ca4214097b5a3c248d9a866779b,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16344,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16345,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16346,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16347,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16348,66ec18c5985a36e4583bc05174fe3e7301109710,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16349,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16350,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16351,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16352,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16353,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
16354,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16355,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16356,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16357,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16358,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16359,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16360,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16361,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16362,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16363,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16364,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16365,bce7dc7659f84311bfde1d4a5902d3103a456a48,/9-jdk/windows/nanoserver/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16366,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16367,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16368,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16369,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16370,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
16371,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16372,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
16373,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16374,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,# Default to UTF-8 file.encoding
16375,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,# backwards compatibility shim
16376,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16377,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16378,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16379,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# this ""case"" statement is generated via ""update.sh"""
16380,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16381,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16382,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# TODO strip ""demo"" and ""man"" folders?"
16383,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16384,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,#!/usr/bin/env bash'; \
16385,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16386,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16387,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,# basic smoke test
16388,19031c95912d7964223fffab57fad4d07932c05c,/Dockerfile-adopt-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16389,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16390,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16391,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16392,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
16393,e8d128ea8328ffb06d767e6210e952f4526ee6e8,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16394,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16395,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-windows.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16396,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16397,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-windows.template,# https://adoptopenjdk.net/upstream.html
16398,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-windows.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16399,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-windows.template,# TODO signature? checksum?
16400,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-windows.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16401,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16402,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16403,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
16404,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16405,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,#!/bin/sh'; \
16406,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16407,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16408,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16409,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16410,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16411,4b6e3ba250722e251ce8b615d3edf8a3196c08c9,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16412,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16413,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16414,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16415,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16416,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16417,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16418,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
16419,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16420,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,#!/bin/sh'; \
16421,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16422,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16423,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16424,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16425,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16426,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16427,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16428,86918ee28d383e7af63f535a2558040dce141099,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16429,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16430,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16431,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16432,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16433,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,#!/bin/sh'; \
16434,68fbc1eb8a389ffc5224b32074cca52b431eb097,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16435,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16436,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16437,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16438,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
16439,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# backwards compatibility shim
16440,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16441,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16442,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16443,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# arm64v8
16444,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# amd64
16445,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# fallback
16446,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16447,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
16448,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16449,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16450,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16451,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,# basic smoke test
16452,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16453,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16454,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16455,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16456,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16457,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16458,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16459,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16460,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16461,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16462,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16463,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16464,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16465,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
16466,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16467,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16468,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16469,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16470,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16471,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16472,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16473,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16474,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16475,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
16476,9d0fd4e53df969368f9ad9eac9399f075a2565df,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16477,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16478,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16479,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16480,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16481,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,#!/bin/sh'; \
16482,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16483,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16484,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16485,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16486,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16487,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16488,a09d082da6e09c075495827ce74fbed4af044b96,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16489,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16490,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16491,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16492,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16493,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16494,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16495,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16496,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16497,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16498,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16499,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16500,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16501,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16502,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16503,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16504,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,# Default to UTF-8 file.encoding
16505,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,# https://jdk.java.net/
16506,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16507,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16508,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,# basic smoke test
16509,aa54394ae6a54d3fa1d2b4363e130b59d9e32638,/Dockerfile-oracle-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16510,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16511,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16512,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16513,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16514,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16515,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16516,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
16517,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16518,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16519,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16520,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16521,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16522,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,#!/bin/sh'; \
16523,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16524,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16525,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16526,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16527,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16528,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16529,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16530,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16531,f45f3f269d4b515201f290360b345790663e657e,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16532,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16533,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
16534,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
16535,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16536,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16537,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,# basic smoke test
16538,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16539,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16540,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16541,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
16542,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16543,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,#!/bin/sh'; \
16544,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16545,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16546,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16547,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16548,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16549,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16550,cd2bd6640a70fe2a07e2fae99d09accbc9a251c9,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16551,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16552,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16553,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16554,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16555,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16556,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16557,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16558,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16559,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16560,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
16561,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# backwards compatibility shim
16562,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16563,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16564,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16565,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# arm64v8
16566,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# amd64
16567,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# fallback
16568,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16569,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
16570,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16571,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16572,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16573,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,# basic smoke test
16574,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16575,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16576,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16577,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16578,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
16579,c033737a139efaa2422d5e5c7073c4b341932b1a,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16580,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16581,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16582,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16583,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16584,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16585,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16586,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16587,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# backwards compatibility shim
16588,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16589,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16590,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16591,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16592,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16593,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16594,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16595,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
16596,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16597,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16598,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/slim/Dockerfile,# basic smoke test
16599,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16600,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16601,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16602,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16603,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
16604,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16605,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16606,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16607,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16608,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16609,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16610,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16611,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16612,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16613,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16614,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
16615,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# backwards compatibility shim
16616,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16617,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
16618,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16619,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
16620,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
16621,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16622,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16623,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
16624,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16625,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16626,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jdk/Dockerfile,# basic smoke test
16627,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16628,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16629,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
16630,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16631,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,#!/bin/sh'; \
16632,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16633,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16634,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16635,f28e00f31f9b3e60a60d70a138af3528a89f9f40,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16636,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16637,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16638,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16639,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16640,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,#!/bin/sh'; \
16641,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16642,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16643,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16644,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16645,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16646,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16647,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16648,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16649,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16650,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16651,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
16652,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16653,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,#!/bin/sh'; \
16654,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16655,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16656,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16657,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16658,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16659,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16660,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16661,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16662,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
16663,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# backwards compatibility shim
16664,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16665,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
16666,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16667,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16668,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16669,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16670,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16671,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
16672,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16673,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16674,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,# basic smoke test
16675,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16676,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16677,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16678,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16679,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16680,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16681,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16682,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16683,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# backwards compatibility shim
16684,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16685,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# https://jdk.java.net/
16686,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16687,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16688,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16689,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16690,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16691,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,# basic smoke test
16692,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16693,545278c50a9391b07c0c3827eedb40923e4d5833,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16694,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16695,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16696,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# backwards compatibility shim
16697,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16698,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16699,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16700,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16701,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16702,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16703,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16704,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,# basic smoke test
16705,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16706,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
16707,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16708,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16709,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
16710,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16711,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,#!/bin/sh'; \
16712,89851f0abc3a83cfad5248102f379d6a0bd3951a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16713,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16714,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16715,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16716,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16717,e24f1c142d0a2fa1852b5ea899b691483fc72a02,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16718,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-alpine.template,# https://jdk.java.net/
16719,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
16720,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16721,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-alpine.template,# basic smoke test
16722,37dbf0917c384321c6c0faa5db00586c4448325f,/Dockerfile-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16723,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16724,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# backwards compatibility shim
16725,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16726,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
16727,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16728,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
16729,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
16730,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16731,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/slim/Dockerfile,# basic smoke test
16732,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16733,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16734,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16735,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16736,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
16737,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16738,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16739,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16740,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16741,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16742,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16743,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16744,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16745,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# Default to UTF-8 file.encoding
16746,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16747,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,#!/bin/sh'; \
16748,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16749,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16750,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16751,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16752,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16753,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16754,f29e745facb32c529934eda4e4608be721cca04c,/11-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16755,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16756,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16757,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16758,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16759,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16760,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16761,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16762,0476812eabd178c77534f3c03bd0a2673822d7b9,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
16763,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16764,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16765,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16766,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16767,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,#!/bin/sh'; \
16768,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16769,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16770,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16771,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16772,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16773,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16774,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16775,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16776,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16777,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16778,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16779,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16780,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16781,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16782,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16783,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16784,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16785,19031c95912d7964223fffab57fad4d07932c05c,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16786,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16787,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
16788,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
16789,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16790,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16791,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,# basic smoke test
16792,331cbccfae0c0261d1cc92c85efba9e6c3542eea,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16793,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16794,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
16795,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16796,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16797,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16798,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16799,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16800,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
16801,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16802,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16803,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16804,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16805,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16806,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16807,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
16808,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16809,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16810,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
16811,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16812,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16813,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,#!/bin/sh'; \
16814,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16815,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16816,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
16817,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16818,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16819,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16820,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16821,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/10/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16822,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16823,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16824,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
16825,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16826,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,#!/bin/sh'; \
16827,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16828,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16829,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16830,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16831,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16832,cbbefa82b92964e6fd98b20353be7010f970c60a,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16833,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16834,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
16835,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
16836,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/11/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16837,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16838,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16839,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
16840,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16841,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,#!/bin/sh'; \
16842,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16843,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16844,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16845,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16846,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16847,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16848,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16849,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16850,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16851,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16852,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16853,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16854,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16855,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16856,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16857,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16858,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16859,d7bc1b133e5c57f209f7ba8760d448fec2409780,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16860,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16861,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16862,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16863,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
16864,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16865,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16866,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16867,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
16868,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16869,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16870,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16871,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16872,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16873,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
16874,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16875,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16876,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
16877,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16878,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,#!/bin/sh'; \
16879,a344905a72f381b3084c4c1cd0b3a24bcc9b4e23,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16880,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16881,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16882,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
16883,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16884,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16885,36a0de603602114458516929dbc4a62d12c1d4c2,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16886,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
16887,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16888,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16889,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16890,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16891,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16892,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16893,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16894,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
16895,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
16896,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
16897,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
16898,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
16899,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16900,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,# basic smoke test
16901,7efc7a9956ea7f0f55fc752ca18a55e193d9c55a,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
16902,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16903,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
16904,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16905,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16906,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
16907,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16908,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16909,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16910,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16911,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16912,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16913,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16914,8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16915,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16916,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
16917,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16918,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16919,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,#!/bin/sh'; \
16920,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16921,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16922,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16923,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16924,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16925,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16926,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16927,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
16928,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# backwards compatibility shim
16929,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16930,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16931,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16932,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
16933,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
16934,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
16935,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16936,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
16937,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16938,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16939,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,# basic smoke test
16940,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16941,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16942,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
16943,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
16944,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
16945,6f340724d3bc1f9b4385975c5de6bfe15aac8c85,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
16946,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16947,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
16948,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16949,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16950,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
16951,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
16952,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
16953,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
16954,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
16955,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
16956,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
16957,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
16958,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
16959,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# backwards compatibility shim
16960,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
16961,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
16962,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
16963,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# arm64v8
16964,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# amd64
16965,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# fallback
16966,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
16967,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
16968,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
16969,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
16970,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
16971,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,# basic smoke test
16972,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16973,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16974,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16975,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
16976,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16977,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16978,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16979,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16980,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16981,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16982,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16983,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
16984,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
16985,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
16986,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
16987,5dba2054c6821e38a6d3fad32239369818289228,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
16988,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16989,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16990,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
16991,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
16992,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
16993,19031c95912d7964223fffab57fad4d07932c05c,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
16994,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
16995,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
16996,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
16997,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
16998,823c4ba26ee436c8a8abf7c0703b98b01960cca2,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
16999,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17000,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17001,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17002,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
17003,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17004,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17005,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17006,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
17007,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17008,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,#!/bin/sh'; \
17009,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17010,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17011,89851f0abc3a83cfad5248102f379d6a0bd3951a,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17012,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17013,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17014,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17015,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17016,dec3c117d0c8fa9462bd1d475f3c5aae5a4d85f9,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17017,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17018,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17019,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17020,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17021,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
17022,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17023,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17024,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17025,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17026,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17027,b4f29ba829765552239bd18f272fcdaf09eca259,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17028,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17029,2408508f3b000bf997febbdb90a861185a64a260,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17030,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17031,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17032,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
17033,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17034,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,#!/bin/sh'; \
17035,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17036,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17037,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17038,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17039,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17040,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17041,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17042,80490366d49e6781e9dcb5dad8ebf0fb6ec04000,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17043,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17044,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17045,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
17046,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17047,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,#!/bin/sh'; \
17048,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17049,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17050,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17051,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17052,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17053,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17054,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17055,df9da1156dbc0e2ae0f87aeef9c79df8720d0811,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17056,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17057,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17058,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
17059,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17060,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,#!/bin/sh'; \
17061,bbb7c0995d9ab0ffec987f02f515862925553d5e,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17062,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17063,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17064,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
17065,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17066,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,#!/bin/sh'; \
17067,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17068,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17069,e1152e23e38fdda5ce7edcdbf9d8bbb883907f98,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17070,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17071,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17072,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17073,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17074,0f45d161b187aebc16c3560be36a09fc3852163a,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17075,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17076,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17077,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
17078,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17079,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,#!/bin/sh'; \
17080,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17081,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17082,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17083,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17084,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17085,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17086,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17087,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17088,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17089,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17090,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17091,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jdk/windows/windowsservercore/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17092,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17093,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17094,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# backwards compatibility shim
17095,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17096,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17097,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17098,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17099,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17100,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17101,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17102,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,# basic smoke test
17103,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17104,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17105,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17106,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17107,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
17108,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17109,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17110,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17111,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17112,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17113,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17114,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17115,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17116,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17117,765ef28d1bb2c8d1aef7d072dadea5db41d8ced3,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17118,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17119,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17120,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17121,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17122,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,#!/bin/sh'; \
17123,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17124,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17125,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17126,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17127,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17128,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17129,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17130,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17131,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17132,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17133,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17134,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17135,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17136,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
17137,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17138,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
17139,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17140,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17141,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17142,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17143,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# Default to UTF-8 file.encoding
17144,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# backwards compatibility shim
17145,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17146,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# https://jdk.java.net/
17147,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17148,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,#!/usr/bin/env bash'; \
17149,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17150,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17151,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17152,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,# basic smoke test
17153,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/13/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17154,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17155,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
17156,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17157,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17158,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,#!/bin/sh'; \
17159,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17160,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17161,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17162,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17163,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17164,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/7-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17165,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17166,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17167,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
17168,8502712f6e80904b766505805c894c2008afa700,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17169,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17170,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17171,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
17172,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17173,06552bdff28039988fca96ec7f810456849d420f,/7-jre/alpine/Dockerfile,#!/bin/sh'; \
17174,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17175,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17176,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17177,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17178,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,#!/bin/sh'; \
17179,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17180,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17181,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17182,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17183,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17184,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17185,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17186,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17187,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17188,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17189,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17190,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17191,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17192,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,# basic smoke test
17193,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17194,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17195,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17196,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
17197,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17198,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,#!/bin/sh'; \
17199,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17200,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17201,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17202,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17203,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17204,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17205,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17206,23e96e231951fc0edb5a1974280f6f460a44151f,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17207,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
17208,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,# Default to UTF-8 file.encoding
17209,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,# backwards compatibility shim
17210,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17211,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17212,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17213,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
17214,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17215,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17216,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
17217,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17218,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,#!/usr/bin/env bash'; \
17219,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17220,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17221,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,# basic smoke test
17222,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-adopt-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17223,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17224,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17225,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17226,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
17227,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17228,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17229,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17230,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17231,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
17232,3ba705f07740f053707e22695a79d5b0e3ec8516,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17233,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17234,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
17235,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17236,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17237,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
17238,c4e82d61bdae87ac25656b1371441ccca8c059b9,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17239,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17240,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17241,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17242,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17243,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17244,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17245,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17246,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17247,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17248,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,#!/bin/sh'; \
17249,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17250,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17251,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17252,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17253,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17254,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17255,894a19d0401349d39ced7764190ea6263bb17ba0,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17256,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17257,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17258,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
17259,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17260,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,#!/bin/sh'; \
17261,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17262,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17263,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17264,0fa38e630b4cdd5788a3a07729c44f564793fcc1,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17265,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17266,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17267,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17268,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
17269,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17270,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17271,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17272,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17273,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17274,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,#!/bin/sh'; \
17275,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17276,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17277,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17278,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17279,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17280,2e23069b35737d02166d86d25088a02330a7ac96,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17281,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17282,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17283,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17284,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17285,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,#!/bin/sh'; \
17286,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17287,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17288,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17289,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17290,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17291,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17292,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17293,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
17294,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17295,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17296,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
17297,ed7e7938b56ba572aa46317515f166401424243b,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17298,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17299,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17300,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
17301,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17302,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17303,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17304,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17305,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17306,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17307,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17308,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
17309,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17310,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17311,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,# basic smoke test
17312,db840bef290a52e33a58d513270ec4e41a076d67,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17313,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17314,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17315,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17316,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17317,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17318,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17319,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
17320,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17321,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17322,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
17323,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# amd64
17324,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# fallback
17325,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17326,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17327,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17328,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
17329,83fbf16d99f4094df192b4f07909b473ad1d8392,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17330,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17331,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17332,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17333,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17334,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
17335,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17336,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17337,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17338,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17339,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17340,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17341,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,# basic smoke test
17342,80b2255fe8ec9b9374e3f77f426855b627f40114,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17343,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17344,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17345,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17346,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17347,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17348,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17349,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17350,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
17351,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# backwards compatibility shim
17352,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17353,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17354,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17355,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# arm64v8
17356,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# amd64
17357,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# fallback
17358,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17359,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
17360,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17361,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17362,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17363,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,# basic smoke test
17364,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17365,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17366,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17367,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17368,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17369,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17370,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17371,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17372,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
17373,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17374,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17375,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17376,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
17377,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17378,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17379,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17380,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17381,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17382,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17383,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17384,bce2fa373dc270cccf539a8e31b5f2a432d23738,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
17385,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17386,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17387,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# Default to UTF-8 file.encoding
17388,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17389,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,#!/bin/sh'; \
17390,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17391,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17392,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17393,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17394,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17395,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17396,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17397,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17398,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17399,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17400,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
17401,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17402,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17403,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17404,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17405,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17406,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17407,ecb81629f5d5f226491e9f3e0a5be11662f72870,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17408,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17409,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17410,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17411,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# backwards compatibility shim
17412,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17413,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17414,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17415,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17416,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17417,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17418,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17419,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
17420,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17421,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17422,75b0f85e10c8cafa4fcdbbeea578a0adf99f657a,/11/jre/Dockerfile,# basic smoke test
17423,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17424,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17425,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17426,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17427,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17428,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
17429,1db004031219f5428cdf6d39425b1db8241e80e1,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17430,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17431,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17432,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17433,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17434,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17435,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17436,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17437,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17438,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
17439,afa64e6e402a56a457a8d928d67024bfaad34aad,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17440,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17441,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17442,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17443,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17444,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
17445,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17446,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17447,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17448,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17449,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17450,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17451,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17452,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
17453,318ba809c9f0e3c7095b363c5a31409ee6880208,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17454,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17455,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17456,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
17457,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17458,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,#!/bin/sh'; \
17459,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17460,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17461,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17462,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17463,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17464,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17465,a893fe3cd82757e7bccc0948c88bfee09bd916c3,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17466,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17467,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
17468,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17469,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17470,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
17471,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17472,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17473,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
17474,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17475,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17476,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17477,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17478,ed5f4f478c0739eb60b07c70e1d58c68b4304ab8,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17479,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17480,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17481,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17482,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17483,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17484,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17485,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
17486,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# backwards compatibility shim
17487,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17488,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17489,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17490,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
17491,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17492,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17493,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17494,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,# basic smoke test
17495,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17496,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17497,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17498,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17499,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17500,742d2d64611fcdaed6516f1960507141ffef892b,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17501,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17502,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17503,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17504,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
17505,cb138b5253cb10ab14c5eb3a038e90c2fa88a1c6,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17506,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17507,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17508,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17509,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17510,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17511,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17512,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17513,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17514,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
17515,faa860854c1ed83943047f669424c9c36aae4dd5,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17516,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17517,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17518,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17519,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
17520,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,# basic smoke test
17521,e3021b3a4cc9fb82962bebe688dc512d3d7a621a,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17522,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17523,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17524,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
17525,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17526,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17527,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17528,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17529,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17530,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17531,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
17532,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17533,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17534,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17535,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17536,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17537,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
17538,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17539,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17540,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
17541,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
17542,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17543,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17544,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17545,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17546,d35debdd35e5c346fef8646acf07cdb2b19b5e47,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17547,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17548,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17549,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
17550,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17551,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,#!/bin/sh'; \
17552,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17553,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17554,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17555,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17556,cf54b49f29ea633bd7d0fdbcaa1b052ea9ad18e9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17557,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17558,4ab314dc41cb31313f630ce5e11398ef0f9e9ae9,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17559,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17560,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17561,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17562,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17563,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# backwards compatibility shim
17564,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17565,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17566,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17567,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17568,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17569,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17570,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17571,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,# basic smoke test
17572,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17573,9be7dd0e7664b407d2fae82ebd7c7b03aaa415ee,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
17574,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17575,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
17576,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# backwards compatibility shim
17577,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17578,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17579,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17580,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# arm64v8
17581,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# amd64
17582,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# fallback
17583,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17584,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
17585,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17586,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17587,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17588,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,# basic smoke test
17589,5baa163193771b2f905db68405bd83b5887bd0d3,/15/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17590,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
17591,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17592,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
17593,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,# basic smoke test
17594,db97c023c9f036d5e4df5fd9d1e5d21bdbabccce,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17595,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17596,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17597,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17598,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17599,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,#!/bin/sh'; \
17600,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17601,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17602,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17603,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17604,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17605,01ca700a105984964865430aee1251932956925e,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17606,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17607,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17608,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17609,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17610,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17611,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# amd64
17612,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# fallback
17613,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17614,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17615,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,# basic smoke test
17616,92b9cd2adf595f48da92b39976bbbab474c4837c,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17617,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17618,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17619,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17620,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
17621,3282f541a228c69304b807b0d832914c51fe3d9e,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17622,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17623,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17624,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17625,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17626,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,#!/bin/sh'; \
17627,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17628,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17629,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17630,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17631,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17632,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/8/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17633,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17634,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17635,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17636,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
17637,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# backwards compatibility shim
17638,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17639,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17640,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17641,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
17642,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17643,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17644,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17645,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,# basic smoke test
17646,3e8bce63c989cdc8a2f121695d64a3717a9ad2dd,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17647,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17648,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17649,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17650,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17651,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
17652,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17653,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17654,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17655,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17656,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17657,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17658,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17659,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17660,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
17661,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17662,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
17663,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,# basic smoke test
17664,ac57930ee4cb62a9106dff2244e0b38220a5164b,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17665,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17666,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17667,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# backwards compatibility shim
17668,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17669,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17670,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17671,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# arm64v8
17672,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# amd64
17673,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# fallback
17674,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17675,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
17676,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17677,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17678,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17679,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,# basic smoke test
17680,c3a5b6c4dc910f6f27cb95df86614d2cc99642f8,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17681,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17682,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17683,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17684,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# backwards compatibility shim
17685,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17686,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17687,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17688,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17689,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17690,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17691,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17692,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
17693,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17694,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17695,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,# basic smoke test
17696,601cc5f946f8ada75d8b8eaa1eb3f4c4b821ac23,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17697,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17698,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17699,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
17700,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17701,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17702,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# arm64v8
17703,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# amd64
17704,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# fallback
17705,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17706,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17707,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17708,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,# basic smoke test
17709,8861d32919e87e879cbadcd11a1c8841e9ddfa80,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17710,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17711,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17712,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17713,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# backwards compatibility shim
17714,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17715,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
17716,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17717,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
17718,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
17719,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17720,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17721,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
17722,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17723,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17724,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,# basic smoke test
17725,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17726,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17727,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17728,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17729,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17730,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
17731,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
17732,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17733,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,#!/bin/sh'; \
17734,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17735,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17736,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17737,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17738,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17739,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17740,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17741,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17742,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
17743,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17744,0476812eabd178c77534f3c03bd0a2673822d7b9,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
17745,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17746,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17747,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
17748,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17749,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,#!/bin/sh'; \
17750,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17751,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17752,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17753,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17754,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17755,11ac1383306934fe910c168aacc06c82ec65fe52,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17756,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17757,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17758,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17759,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
17760,742d2d64611fcdaed6516f1960507141ffef892b,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17761,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17762,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17763,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
17764,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17765,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17766,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
17767,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# amd64
17768,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# fallback
17769,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17770,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17771,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
17772,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
17773,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17774,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17775,0259a649c03ace8b035432ef3ee7274ca30d3776,/7/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17776,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17777,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
17778,362513c2f1dbc630be097fb324ac5e0d5505fb8e,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17779,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17780,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17781,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17782,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
17783,aea0404de13a28d0dedb511f19a69e71efee512b,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17784,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17785,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
17786,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17787,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
17788,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,# basic smoke test
17789,ba84c1878998602129f0d7d94d26aae5e04bc872,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17790,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17791,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17792,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
17793,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17794,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,#!/bin/sh'; \
17795,b118fdc1e9b1aebdc178537551101dffe1f612a3,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17796,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17797,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17798,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17799,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17800,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17801,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17802,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17803,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
17804,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17805,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
17806,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17807,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17808,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17809,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17810,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17811,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17812,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17813,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17814,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17815,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
17816,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17817,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17818,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
17819,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17820,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17821,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,#!/bin/sh'; \
17822,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17823,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17824,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17825,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17826,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17827,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17828,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17829,cbbefa82b92964e6fd98b20353be7010f970c60a,/8-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17830,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17831,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
17832,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
17833,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17834,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
17835,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17836,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# arm64v8
17837,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# amd64
17838,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# fallback
17839,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17840,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
17841,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17842,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17843,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17844,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,# basic smoke test
17845,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17846,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17847,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17848,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17849,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17850,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17851,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17852,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17853,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17854,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# Default to UTF-8 file.encoding
17855,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# backwards compatibility shim
17856,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17857,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17858,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17859,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# arm64v8
17860,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# amd64
17861,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# fallback
17862,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17863,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,#!/usr/bin/env bash'; \
17864,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17865,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17866,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17867,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,# basic smoke test
17868,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17869,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17870,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
17871,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17872,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17873,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,#!/bin/sh'; \
17874,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17875,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17876,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17877,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17878,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17879,1dce6353dcbb15f09479e7043f48082051967139,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17880,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17881,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
17882,53e199bb130aca3b2286d85f4764b6288f27a012,/11/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17883,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17884,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17885,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
17886,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17887,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
17888,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17889,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17890,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17891,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
17892,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17893,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
17894,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17895,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-oracle.template,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
17896,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-oracle.template,# http://jdk.java.net/
17897,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
17898,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
17899,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-oracle.template,# basic smoke test
17900,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/Dockerfile-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
17901,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17902,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17903,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
17904,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17905,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,#!/bin/sh'; \
17906,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17907,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17908,a0a4970a343a3c021dad760f2281d20f61931e3c,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17909,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17910,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17911,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17912,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
17913,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# backwards compatibility shim
17914,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17915,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17916,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
17917,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# arm64v8
17918,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# amd64
17919,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# fallback
17920,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17921,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
17922,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17923,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17924,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17925,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,# basic smoke test
17926,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17927,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17928,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
17929,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17930,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
17931,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# backwards compatibility shim
17932,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17933,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17934,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17935,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
17936,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17937,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17938,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
17939,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,# basic smoke test
17940,d4f6fb0d72635dd975d46880dc652bc81bc3cbc9,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17941,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17942,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
17943,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
17944,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17945,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,#!/bin/sh'; \
17946,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
17947,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
17948,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
17949,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
17950,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
17951,02a49915095f254cbf321292ab7a021529686448,/11-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
17952,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
17953,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
17954,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
17955,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17956,748340041f02cdc9956b7653b6144224a97bf71d,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
17957,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17958,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17959,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
17960,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# backwards compatibility shim
17961,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17962,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
17963,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
17964,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17965,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17966,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17967,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17968,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,#!/usr/bin/env bash'; \
17969,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
17970,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
17971,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,# basic smoke test
17972,1b6e2ef66a086f47315f5d05ecf7de3dae7413f2,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17973,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17974,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17975,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17976,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
17977,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
17978,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
17979,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
17980,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,#!/bin/sh'; \
17981,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
17982,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
17983,baaaf7714f9c66e4c5decf2c108a2738b7186c7f,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
17984,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
17985,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
17986,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
17987,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
17988,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
17989,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
17990,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# backwards compatibility shim
17991,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
17992,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
17993,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
17994,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
17995,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
17996,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
17997,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
17998,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
17999,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18000,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18001,9375e322ce445e6f37f2fb1bfbfc96ba089a6abc,/8/jdk/Dockerfile,# basic smoke test
18002,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18003,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
18004,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18005,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18006,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,#!/bin/sh'; \
18007,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18008,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18009,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18010,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18011,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18012,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18013,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/9-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18014,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18015,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18016,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18017,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18018,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
18019,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18020,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18021,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18022,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
18023,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# backwards compatibility shim
18024,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18025,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18026,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18027,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18028,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18029,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18030,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18031,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
18032,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18033,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18034,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/Dockerfile,# basic smoke test
18035,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18036,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18037,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18038,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18039,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,#!/bin/bash'; \
18040,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18041,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18042,eaf1c5575ab9763caf66d8d5debb7ec089411740,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18043,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18044,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18045,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18046,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18047,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
18048,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18049,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18050,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18051,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18052,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18053,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18054,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18055,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18056,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18057,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18058,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
18059,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# backwards compatibility shim
18060,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18061,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18062,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18063,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
18064,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18065,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18066,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18067,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,# basic smoke test
18068,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18069,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18070,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18071,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
18072,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18073,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,#!/bin/sh'; \
18074,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18075,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18076,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18077,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18078,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18079,7bd5c28e1ade462bfcc4a49f237023dfd2330b8f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18080,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18081,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18082,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18083,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18084,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
18085,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
18086,d4ecf99e10d1f0e6239f54f1907df56e725ac4ac,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18087,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
18088,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18089,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18090,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,# basic smoke test
18091,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18092,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18093,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18094,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# Default to UTF-8 file.encoding
18095,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18096,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,#!/bin/sh'; \
18097,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18098,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18099,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18100,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18101,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18102,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18103,415b0cc42d91ef5d70597d8a24d942967728242b,/8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18104,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18105,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18106,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
18107,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18108,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,#!/bin/sh'; \
18109,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18110,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18111,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18112,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18113,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18114,36cdb411117fff3784c02f1630dacaa15c8ac5d7,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18115,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18116,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18117,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
18118,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18119,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,#!/bin/sh'; \
18120,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18121,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18122,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18123,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18124,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18125,841c5e57ac0b94b12cdbf274bed65f78137970ee,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18126,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
18127,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18128,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18129,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
18130,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,# backwards compatibility shim
18131,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18132,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,# https://jdk.java.net/
18133,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18134,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
18135,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18136,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18137,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18138,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,# basic smoke test
18139,3d26403f6d5d290f9bd23fb6a68fec1c5ac54656,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18140,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18141,1b4378dc7b57c8534fe715cfcec356ee96c87e92,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18142,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18143,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18144,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
18145,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# backwards compatibility shim
18146,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18147,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
18148,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18149,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18150,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18151,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18152,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18153,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
18154,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18155,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18156,451e66427f3c53fada288aaff950617c5864745f,/8/jdk/Dockerfile,# basic smoke test
18157,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18158,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18159,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
18160,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18161,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,#!/bin/sh'; \
18162,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18163,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18164,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18165,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18166,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18167,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18168,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18169,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18170,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18171,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# backwards compatibility shim
18172,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18173,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18174,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18175,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18176,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18177,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18178,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18179,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,# basic smoke test
18180,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18181,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18182,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18183,d63214d23aad827190c599e23351bd0bdd7dcadc,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18184,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18185,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18186,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18187,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18188,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
18189,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18190,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18191,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18192,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18193,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18194,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,# basic smoke test
18195,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18196,64c974878212b45f5c2f6b4a3e3319f1d5a1f05d,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18197,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18198,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18199,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18200,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
18201,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# backwards compatibility shim
18202,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18203,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18204,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18205,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# arm64v8
18206,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# amd64
18207,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# fallback
18208,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18209,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
18210,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18211,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18212,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18213,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,# basic smoke test
18214,19031c95912d7964223fffab57fad4d07932c05c,/16/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18215,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18216,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18217,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
18218,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# backwards compatibility shim
18219,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18220,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18221,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18222,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18223,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18224,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18225,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18226,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,#!/usr/bin/env bash'; \
18227,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18228,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18229,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/11/jre/Dockerfile,# basic smoke test
18230,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18231,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18232,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18233,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
18234,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18235,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18236,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18237,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18238,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18239,8d76d63dbc207b5715e7d7698214ee3fcff830f8,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18240,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18241,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18242,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18243,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18244,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18245,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18246,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18247,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18248,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18249,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18250,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18251,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18252,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# backwards compatibility shim
18253,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18254,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18255,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18256,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18257,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18258,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18259,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18260,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
18261,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18262,45a43909f241296d22849489dcc58c06059660c6,/8/jre/slim/Dockerfile,# basic smoke test
18263,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18264,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18265,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
18266,16316bc746915c10308aabde9fa8a09bdc83d1fc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18267,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18268,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18269,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
18270,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18271,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,#!/bin/sh'; \
18272,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18273,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18274,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18275,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18276,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18277,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18278,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18279,7ab38b79b0a20fcd4a04c58dfa57a9c0b9b24dd4,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18280,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18281,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18282,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# backwards compatibility shim
18283,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18284,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18285,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18286,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# arm64v8
18287,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# amd64
18288,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# fallback
18289,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18290,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18291,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18292,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18293,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18294,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,# basic smoke test
18295,c4b1cc35eab01bd19ee2c0a460d32c3b9d1c014d,/16/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18296,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18297,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18298,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
18299,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18300,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,#!/bin/sh'; \
18301,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18302,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18303,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18304,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18305,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18306,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18307,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18308,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18309,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18310,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,# basic smoke test
18311,17f7f8dc7e673127812e5c31b83937283beb7b12,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18312,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18313,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18314,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
18315,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18316,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,#!/bin/sh'; \
18317,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18318,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18319,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
18320,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18321,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18322,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18323,58ba04f37a289057ac53b4376773b03227dceb77,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18324,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18325,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18326,9745c87a15896ec558429a826e23926e721e4846,/8-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18327,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18328,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18329,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18330,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18331,1679aaf254c29bae2d2a9755d65b9b4c926343ae,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18332,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18333,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18334,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-windows.template,# http://jdk.java.net/
18335,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/Dockerfile-windows.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18336,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18337,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18338,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18339,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18340,c5e74a82a6c33b71d7d075caf48ce955ffd8a7b8,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18341,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18342,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18343,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18344,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18345,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,#!/bin/sh'; \
18346,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18347,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18348,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18349,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18350,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18351,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18352,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18353,cbbefa82b92964e6fd98b20353be7010f970c60a,/10-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18354,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18355,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18356,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18357,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18358,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18359,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18360,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,# basic smoke test
18361,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18362,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18363,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18364,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
18365,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18366,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,#!/bin/sh'; \
18367,faa860854c1ed83943047f669424c9c36aae4dd5,/7/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18368,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18369,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18370,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
18371,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18372,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18373,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# amd64
18374,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# fallback
18375,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18376,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18377,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18378,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,# basic smoke test
18379,83fbf16d99f4094df192b4f07909b473ad1d8392,/14/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18380,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18381,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18382,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18383,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18384,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18385,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18386,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18387,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18388,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18389,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18390,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18391,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,# basic smoke test
18392,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18393,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18394,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18395,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18396,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18397,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18398,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18399,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18400,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18401,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18402,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
18403,38cb0eb077acf2a429f32a879903cd305733d561,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18404,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18405,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18406,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18407,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18408,4cb67d65ec173de716bdc99b09be0bcb187f0850,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18409,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18410,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18411,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18412,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18413,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,#!/bin/sh'; \
18414,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18415,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18416,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18417,882461ade8207de7647d083009200de85eb978bc,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18418,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18419,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18420,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18421,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
18422,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# backwards compatibility shim
18423,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18424,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18425,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18426,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
18427,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18428,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18429,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18430,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,# basic smoke test
18431,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18432,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18433,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18434,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18435,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18436,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
18437,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18438,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18439,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18440,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18441,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18442,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18443,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18444,ce2e2040c7f32c8cb0180ff8c72e6a171d2956b9,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18445,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18446,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18447,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18448,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18449,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,#!/bin/sh'; \
18450,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18451,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18452,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18453,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18454,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18455,cbbefa82b92964e6fd98b20353be7010f970c60a,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18456,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18457,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18458,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
18459,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18460,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,#!/bin/sh'; \
18461,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18462,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18463,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-reccomends:
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
18464,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18465,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18466,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18467,c3023e4da10d10e9c9775eabe2d7baac146e7ae1,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18468,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18469,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18470,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18471,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18472,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18473,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18474,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18475,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18476,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18477,7cda38d3a921ef9b1f0ba5eb6a0eb325575d3b4c,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18478,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18479,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
18480,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
18481,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18482,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,#!/bin/sh'; \
18483,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18484,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18485,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18486,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18487,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18488,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18489,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18490,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18491,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18492,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
18493,faa860854c1ed83943047f669424c9c36aae4dd5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18494,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18495,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
18496,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# backwards compatibility shim
18497,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18498,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
18499,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18500,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18501,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18502,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,# basic smoke test
18503,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/11/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18504,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
18505,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,# Default to UTF-8 file.encoding
18506,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,# backwards compatibility shim
18507,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18508,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18509,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
18510,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18511,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,#!/usr/bin/env bash'; \
18512,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18513,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18514,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18515,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,# basic smoke test
18516,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18517,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18518,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18519,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18520,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18521,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18522,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18523,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
18524,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# backwards compatibility shim
18525,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18526,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
18527,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18528,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18529,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18530,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jre/Dockerfile,# basic smoke test
18531,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18532,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18533,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18534,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
18535,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18536,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18537,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18538,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
18539,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18540,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
18541,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,# basic smoke test
18542,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18543,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18544,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18545,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# backwards compatibility shim
18546,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18547,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18548,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18549,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# arm64v8
18550,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# amd64
18551,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# fallback
18552,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18553,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18554,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18555,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18556,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18557,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,# basic smoke test
18558,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18559,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18560,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18561,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
18562,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18563,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18564,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18565,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18566,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18567,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18568,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# arm64v8
18569,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# amd64
18570,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# fallback
18571,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18572,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18573,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18574,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,# basic smoke test
18575,edd895aacf5d3808164900f47d5fbf84b8867548,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18576,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18577,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18578,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
18579,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18580,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,#!/bin/sh'; \
18581,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18582,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18583,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18584,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18585,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18586,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18587,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18588,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18589,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# backwards compatibility shim
18590,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18591,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
18592,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18593,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
18594,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18595,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18596,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18597,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,# basic smoke test
18598,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18599,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
18600,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18601,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18602,99af3e6f0a09f3a236bcf8aa87f3b50d539086d2,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18603,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18604,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18605,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18606,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18607,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18608,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18609,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18610,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18611,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18612,238cc35696423794b1951fc63d4cc9ffb8ca9685,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
18613,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18614,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18615,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18616,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18617,a2b245fc1ab64df2de145b87e631b5e89ca67388,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
18618,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18619,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
18620,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# backwards compatibility shim
18621,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18622,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18623,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18624,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# arm64v8
18625,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# amd64
18626,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# fallback
18627,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18628,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
18629,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18630,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18631,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18632,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,# basic smoke test
18633,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/slim-buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18634,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18635,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18636,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
18637,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18638,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
18639,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18640,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18641,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
18642,65f4567ed9294e7404b3d2d0c806249946e06210,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18643,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18644,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18645,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18646,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18647,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18648,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# backwards compatibility shim
18649,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18650,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
18651,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18652,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18653,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18654,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18655,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18656,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
18657,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18658,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18659,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/slim/Dockerfile,# basic smoke test
18660,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18661,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18662,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18663,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18664,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18665,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18666,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,# basic smoke test
18667,8b49adae07cd3b86b3f52334434d00645889ff18,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18668,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18669,4c5beb8bdb21c746bef683f18bdeddee157f61fd,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18670,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18671,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18672,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
18673,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18674,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,#!/bin/sh'; \
18675,9bf9b29f73334c172d151d9a615d7cd52b74defe,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18676,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18677,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,# https://jdk.java.net/
18678,15835397954c9ec123e42e685035ecd239e0a1db,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18679,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18680,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18681,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
18682,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18683,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,#!/bin/sh'; \
18684,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18685,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18686,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18687,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18688,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18689,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18690,bca955fe8c80ff7272e9f4a4ffa8b822a27a0aef,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18691,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18692,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18693,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
18694,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18695,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,#!/bin/sh'; \
18696,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18697,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18698,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18699,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18700,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18701,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18702,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18703,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18704,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18705,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
18706,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18707,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,#!/bin/sh'; \
18708,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18709,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18710,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18711,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18712,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18713,c7846edc14a25304288c85e2e7bebe4609626512,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18714,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
18715,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18716,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18717,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
18718,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,# backwards compatibility shim
18719,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18720,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18721,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# this ""case"" statement is generated via ""update.sh"""
18722,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18723,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
18724,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18725,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18726,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18727,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,# basic smoke test
18728,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18729,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18730,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18731,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18732,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18733,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18734,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18735,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18736,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18737,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
18738,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18739,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18740,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
18741,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18742,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,#!/bin/sh'; \
18743,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18744,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18745,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18746,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18747,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18748,02a49915095f254cbf321292ab7a021529686448,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18749,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18750,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18751,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
18752,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18753,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
18754,faa860854c1ed83943047f669424c9c36aae4dd5,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18755,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18756,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18757,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
18758,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18759,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,#!/bin/sh'; \
18760,445f8b8d18d7c61e2ae7fda76d8883b5d51ae0a5,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18761,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18762,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18763,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
18764,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# backwards compatibility shim
18765,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18766,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
18767,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
18768,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
18769,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
18770,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18771,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18772,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
18773,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18774,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18775,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/Dockerfile,# basic smoke test
18776,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18777,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18778,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18779,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18780,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18781,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18782,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18783,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18784,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18785,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18786,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
18787,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18788,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,#!/bin/sh'; \
18789,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18790,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18791,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (a case of https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
18792,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18793,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18794,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18795,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18796,63656af1180ca7727ff9e158fa1ee6d16997791c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18797,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
18798,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,# Default to UTF-8 file.encoding
18799,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,# backwards compatibility shim
18800,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18801,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18802,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18803,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
18804,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18805,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18806,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
18807,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18808,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,#!/usr/bin/env bash'; \
18809,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18810,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18811,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,# basic smoke test
18812,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-adopt-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18813,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18814,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18815,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
18816,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18817,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,#!/bin/sh'; \
18818,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18819,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18820,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18821,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18822,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18823,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18824,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18825,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
18826,1c341f869e22b2db077c4f36f9f5d4c407d33c84,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18827,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18828,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
18829,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
18830,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18831,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18832,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18833,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18834,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# amd64
18835,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# fallback
18836,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18837,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18838,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18839,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18840,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
18841,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18842,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18843,19031c95912d7964223fffab57fad4d07932c05c,/8/jre/slim-buster/Dockerfile,# basic smoke test
18844,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18845,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18846,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18847,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
18848,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18849,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18850,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18851,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/14/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18852,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18853,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18854,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18855,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-alpine.template,# basic smoke test
18856,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/Dockerfile-oracle-alpine.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18857,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18858,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18859,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/nanoserver-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18860,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-oracle.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18861,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-oracle.template,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18862,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-oracle.template,# https://jdk.java.net/
18863,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-oracle.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18864,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-oracle.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18865,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-oracle.template,# basic smoke test
18866,faa860854c1ed83943047f669424c9c36aae4dd5,/Dockerfile-oracle.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18867,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18868,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18869,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18870,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18871,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,#!/bin/sh'; \
18872,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18873,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18874,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18875,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18876,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18877,6274e014e788701bc5d427e992b1fa66f5aa5ad5,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18878,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18879,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18880,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18881,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18882,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18883,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# amd64
18884,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# fallback
18885,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18886,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18887,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18888,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,# basic smoke test
18889,29c17de6c8c0df6304d0c80f569deea1d4b6a23e,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18890,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18891,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
18892,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# Default to UTF-8 file.encoding
18893,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18894,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,#!/bin/sh'; \
18895,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18896,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18897,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18898,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18899,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18900,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18901,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,# http://jdk.java.net/
18902,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
18903,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
18904,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,# basic smoke test
18905,89c5b6e626b9b8e27c1d4fd021ff8fd2a786ac26,/12/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18906,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
18907,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
18908,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# backwards compatibility shim
18909,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
18910,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
18911,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
18912,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18913,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# amd64
18914,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# fallback
18915,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
18916,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
18917,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
18918,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
18919,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
18920,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
18921,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
18922,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/slim-buster/Dockerfile,# basic smoke test
18923,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18924,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18925,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18926,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18927,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18928,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# arm64v8
18929,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# amd64
18930,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# fallback
18931,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18932,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18933,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
18934,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,# basic smoke test
18935,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18936,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18937,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
18938,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
18939,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18940,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,#!/bin/sh'; \
18941,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18942,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18943,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18944,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18945,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18946,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18947,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18948,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18949,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
18950,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
18951,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
18952,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
18953,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
18954,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18955,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18956,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18957,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18958,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18959,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18960,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,# basic smoke test
18961,ec86b477e5b47e51351b4efe1117b0ac5d93fe6a,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18962,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18963,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18964,22c0fc00ab557665e9bc0cb8d3f1fcbfbf65ac4e,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18965,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
18966,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
18967,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
18968,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
18969,fe489e584bd248f6ed6b379beed27eda755c5ba9,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
18970,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
18971,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
18972,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
18973,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
18974,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,#!/bin/sh'; \
18975,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
18976,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
18977,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
18978,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
18979,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
18980,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
18981,2c56f2478bf84471c5d16ca216a62aca492f96a8,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
18982,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
18983,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
18984,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
18985,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18986,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
18987,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
18988,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
18989,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
18990,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,# basic smoke test
18991,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
18992,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
18993,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
18994,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
18995,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
18996,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
18997,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# arm64v8
18998,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# amd64
18999,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# fallback
19000,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19001,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19002,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
19003,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,# basic smoke test
19004,29ba3b2c8eb9fad34419c79ed92fff3a0bc99da0,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19005,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19006,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19007,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19008,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# https://jdk.java.net/
19009,37dbf0917c384321c6c0faa5db00586c4448325f,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19010,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19011,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19012,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
19013,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19014,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19015,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# arm64v8
19016,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# amd64
19017,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# fallback
19018,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19019,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19020,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
19021,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,# basic smoke test
19022,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19023,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19024,0b124de91ebd32bcc8977fd2214d36b8fccb615c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19025,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19026,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19027,d676a9c8649a1f8b40b60fdbdf3a6475af030759,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19028,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19029,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19030,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
19031,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19032,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,#!/bin/sh'; \
19033,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19034,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19035,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19036,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19037,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19038,5a23ec5ab11beacb71f89ec9f9935c52ab7e44bb,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19039,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19040,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19041,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
19042,2eedac4afe8e587cb02cb7739d70e2c33c2b1421,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19043,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19044,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19045,04dce3cc1b587aa11b747d224796ce1f215e9235,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19046,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19047,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19048,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19049,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
19050,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19051,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19052,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19053,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# https://jdk.java.net/
19054,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19055,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19056,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,# basic smoke test
19057,faa860854c1ed83943047f669424c9c36aae4dd5,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19058,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19059,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19060,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
19061,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19062,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,#!/bin/bash'; \
19063,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19064,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19065,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19066,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19067,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19068,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19069,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19070,f34b3e5fc57fe265e64592d46224e69d23cda443,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19071,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19072,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19073,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19074,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,# basic smoke test
19075,1e3425cc20e6a3bf052e2fe6c7f6a18054c92570,/15/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19076,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19077,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19078,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19079,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19080,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,#!/bin/sh'; \
19081,d183725a5acda253132f21011fe903f3924e7e12,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19082,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19083,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19084,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19085,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19086,e4c9a88bfdbad7c617a84cca8cc96d3832f234d7,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19087,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19088,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,# Default to UTF-8 file.encoding
19089,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,# backwards compatibility shim
19090,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19091,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,# https://adoptopenjdk.net/upstream.html
19092,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19093,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19094,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
19095,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,"# TODO strip ""demo"" and ""man"" folders?"
19096,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,# basic smoke test
19097,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-linux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19098,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19099,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19100,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19101,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19102,5ed85f0692d4e1818539fe04268900409e410490,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19103,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19104,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,# Default to UTF-8 file.encoding
19105,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19106,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19107,43b1402a2b3af1eb182c0c16fec01886c9db9c37,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19108,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19109,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19110,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19111,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
19112,b9ed6f81ba268f52f3010d50e670c81f930ba0aa,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19113,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19114,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19115,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19116,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19117,b4641e42b7cbd9ad9ab0811c183e04baef1feca6,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19118,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19119,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19120,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19121,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19122,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19123,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19124,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19125,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19126,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19127,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19128,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19129,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19130,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,# Default to UTF-8 file.encoding
19131,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19132,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,#!/bin/bash'; \
19133,f71d77ba3fe01cbfc625e38c1841531870f0538c,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19134,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19135,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19136,0b42083d3cd9c3a57e35db84e5e9d246c9fcc129,/9-jdk/windows/windowsservercore/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19137,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19138,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19139,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19140,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
19141,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19142,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19143,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19144,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# http://jdk.java.net/
19145,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19146,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
19147,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,# basic smoke test
19148,2ac692bcec79f6ffe1c26b3bfc79eb9b1beae885,/11/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19149,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19150,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19151,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# backwards compatibility shim
19152,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19153,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19154,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19155,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19156,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19157,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19158,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19159,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,# basic smoke test
19160,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19161,7c087cd55d5c045fcc7239350da389e1741f63f0,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19162,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19163,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19164,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19165,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19166,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
19167,e2f1ab45666ee26160609c4b32517488d52d1428,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19168,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19169,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19170,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19171,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19172,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19173,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19174,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
19175,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/8-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19176,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19177,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19178,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19179,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19180,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,#!/bin/sh'; \
19181,1c98a9032d1a19122074c4009326eade264903b7,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19182,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19183,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19184,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
19185,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19186,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,#!/bin/sh'; \
19187,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19188,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19189,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19190,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19191,0467df283134a79840c25808093c00f7c94b9a88,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19192,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19193,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19194,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19195,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
19196,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# backwards compatibility shim
19197,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19198,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19199,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19200,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
19201,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19202,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19203,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19204,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,# basic smoke test
19205,7f65143a9e48d6468b73667e9b99f6858053675e,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19206,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19207,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19208,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19209,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
19210,37dbf0917c384321c6c0faa5db00586c4448325f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19211,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19212,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19213,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
19214,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19215,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
19216,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,# basic smoke test
19217,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19218,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19219,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19220,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19221,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
19222,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19223,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19224,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19225,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-windows.template,# https://adoptopenjdk.net/upstream.html
19226,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-windows.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19227,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-windows.template,# TODO signature? checksum?
19228,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/Dockerfile-adopt-windows.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19229,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19230,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19231,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19232,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19233,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19234,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19235,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19236,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19237,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19238,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
19239,041df9cd062fe5e8080c46eea4def0b4e08d10e0,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19240,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19241,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19242,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
19243,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19244,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,#!/bin/sh'; \
19245,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19246,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19247,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19248,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19249,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19250,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19251,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19252,4365c863956250d758341b86035862b111269ed9,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19253,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19254,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19255,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19256,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
19257,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# backwards compatibility shim
19258,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19259,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19260,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19261,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# arm64v8
19262,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# amd64
19263,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# fallback
19264,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19265,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
19266,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19267,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19268,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19269,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,# basic smoke test
19270,9338202f5a42dca095a4ec0abb14433458da5cc6,/15/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19271,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19272,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19273,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19274,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19275,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
19276,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19277,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19278,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19279,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19280,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19281,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19282,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19283,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19284,742d2d64611fcdaed6516f1960507141ffef892b,/Dockerfile-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19285,742d2d64611fcdaed6516f1960507141ffef892b,/Dockerfile-windows.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19286,742d2d64611fcdaed6516f1960507141ffef892b,/Dockerfile-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19287,742d2d64611fcdaed6516f1960507141ffef892b,/Dockerfile-windows.template,# http://jdk.java.net/
19288,742d2d64611fcdaed6516f1960507141ffef892b,/Dockerfile-windows.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19289,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19290,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19291,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# backwards compatibility shim
19292,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19293,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
19294,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19295,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19296,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19297,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19298,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19299,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,# basic smoke test
19300,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19301,545278c50a9391b07c0c3827eedb40923e4d5833,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19302,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19303,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19304,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
19305,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19306,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,#!/bin/sh'; \
19307,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19308,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19309,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19310,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19311,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19312,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19313,300033e6ac3762f2fd3ec1a572f3dd66408b570b,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19314,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19315,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19316,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
19317,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19318,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
19319,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19320,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19321,d7f632dcc518cf71752e95387d05cbb7f9156e1d,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19322,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
19323,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19324,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,# Default to UTF-8 file.encoding
19325,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,# backwards compatibility shim
19326,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19327,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19328,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19329,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# this ""case"" statement is generated via ""update.sh"""
19330,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
19331,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
19332,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# TODO strip ""demo"" and ""man"" folders?"
19333,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19334,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,#!/usr/bin/env bash'; \
19335,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19336,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19337,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,# basic smoke test
19338,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-adopt-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19339,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19340,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19341,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19342,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19343,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19344,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19345,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# arm64v8
19346,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# amd64
19347,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# fallback
19348,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19349,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19350,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19351,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19352,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19353,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,# basic smoke test
19354,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19355,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-alpine.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19356,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-alpine.template,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19357,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-alpine.template,"# this ""case"" statement is generated via ""update.sh"""
19358,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-alpine.template,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
19359,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-alpine.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19360,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-alpine.template,# basic smoke test
19361,83fbf16d99f4094df192b4f07909b473ad1d8392,/Dockerfile-oracle-alpine.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19362,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19363,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19364,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19365,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19366,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19367,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19368,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19369,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19370,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19371,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,#!/bin/sh'; \
19372,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19373,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19374,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19375,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19376,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19377,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19378,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19379,b4f29ba829765552239bd18f272fcdaf09eca259,/8-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19380,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19381,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19382,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19383,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19384,25129334ccc476f03ff981d399c163f9f37da007,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19385,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19386,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19387,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19388,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
19389,d6b619d64e1498aba6c054aa823092f60b582910,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19390,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19391,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19392,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19393,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19394,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19395,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,# basic smoke test
19396,aeb02a53ca43da29d6e820e5fe485db7ba03b879,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19397,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19398,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19399,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19400,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19401,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19402,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19403,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19404,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19405,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19406,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19407,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19408,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19409,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,# basic smoke test
19410,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19411,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19412,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19413,15835397954c9ec123e42e685035ecd239e0a1db,/8/jre/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19414,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19415,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19416,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19417,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19418,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,#!/bin/sh'; \
19419,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19420,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19421,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19422,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19423,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19424,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19425,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-servercore.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19426,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-servercore.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19427,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-servercore.template,# https://adoptopenjdk.net/upstream.html
19428,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-servercore.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19429,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-servercore.template,# TODO signature? checksum?
19430,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-servercore.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19431,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19432,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19433,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19434,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
19435,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,# basic smoke test
19436,68069caddc7bd0edf9b2e4458ade3ace64668ac6,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19437,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19438,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# backwards compatibility shim
19439,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19440,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
19441,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19442,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19443,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
19444,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19445,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/slim/Dockerfile,# basic smoke test
19446,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19447,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19448,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
19449,918514c9b313f8f60580b1e3638eb2ae60ef5e7f,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19450,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
19451,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19452,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19453,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
19454,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,# backwards compatibility shim
19455,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19456,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,# https://jdk.java.net/
19457,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19458,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
19459,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19460,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19461,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19462,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,# basic smoke test
19463,545278c50a9391b07c0c3827eedb40923e4d5833,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19464,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19465,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19466,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# Default to UTF-8 file.encoding
19467,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19468,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,#!/bin/sh'; \
19469,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19470,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19471,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19472,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19473,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19474,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19475,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/10/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19476,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19477,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19478,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
19479,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19480,4e39684901490c13eaef7892c44e39043d7c4bed,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
19481,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19482,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19483,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
19484,266f01a904151eab55302df4a306a5042e77f58b,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19485,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19486,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19487,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
19488,fb3108c4e046972368359c116635bea18dc8e918,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19489,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19490,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19491,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19492,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
19493,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# backwards compatibility shim
19494,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19495,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19496,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19497,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# amd64
19498,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# fallback
19499,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19500,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
19501,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19502,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19503,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19504,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,# basic smoke test
19505,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/14/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19506,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19507,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19508,5527e8e319a1451b9e302af846b9939da36d8992,/8/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19509,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19510,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19511,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19512,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19513,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19514,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19515,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19516,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19517,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# backwards compatibility shim
19518,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19519,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# https://jdk.java.net/
19520,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19521,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19522,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19523,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19524,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19525,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,# basic smoke test
19526,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19527,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
19528,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19529,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19530,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19531,4016bc190db90b9254f01ea808a91981f50500a2,/10/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19532,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19533,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19534,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19535,40a23ac72e90b05469c881a6fa9139476d3fa2a4,/10/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19536,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19537,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19538,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
19539,b75355761b3630f01ee19832486c04b5faa8c652,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19540,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19541,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
19542,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
19543,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19544,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19545,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,# basic smoke test
19546,6d1b3ad0f620b617c4a0d5df88de4a68933222c6,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19547,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19548,1de3476e9d15e63768d7afeb672ad8a0ccb3f56f,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19549,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19550,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19551,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,# Default to UTF-8 file.encoding
19552,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19553,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,#!/bin/bash'; \
19554,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19555,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19556,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19557,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19558,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19559,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
19560,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19561,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19562,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
19563,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19564,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19565,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19566,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19567,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19568,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19569,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,#!/bin/sh'; \
19570,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19571,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19572,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19573,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19574,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19575,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19576,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19577,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
19578,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19579,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19580,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
19581,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,# backwards compatibility shim
19582,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19583,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19584,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# this ""case"" statement is generated via ""update.sh"""
19585,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19586,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
19587,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19588,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19589,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19590,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,# basic smoke test
19591,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19592,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19593,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
19594,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
19595,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19596,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,#!/bin/sh'; \
19597,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19598,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19599,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19600,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19601,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19602,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19603,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19604,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19605,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19606,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19607,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,#!/bin/sh'; \
19608,e1981fe71526d3c568cdad28fe7607a5d258fcd3,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19609,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19610,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19611,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19612,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19613,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19614,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19615,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19616,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
19617,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
19618,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19619,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19620,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19621,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19622,178c542fbb93a8f8a42e331b73a1214c9d8ba81d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19623,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19624,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19625,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19626,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19627,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19628,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19629,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19630,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
19631,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19632,d938a100d9f43bab60a1d5f655b61cbac97c74ae,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
19633,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19634,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19635,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19636,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19637,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19638,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19639,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19640,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
19641,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# backwards compatibility shim
19642,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19643,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19644,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19645,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
19646,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19647,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19648,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19649,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,# basic smoke test
19650,d81c508269017a36af6a2c7103dedc4da989f452,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19651,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19652,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19653,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
19654,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19655,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
19656,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19657,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19658,5552e0cd8db55b834a0d26ab200d19cee54b09f3,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19659,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19660,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19661,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19662,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19663,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19664,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19665,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19666,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19667,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19668,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19669,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19670,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19671,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19672,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19673,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
19674,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19675,0a152d425165c851fbfc5b456191c4aeab9fc049,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19676,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19677,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19678,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19679,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# amd64
19680,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# fallback
19681,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
19682,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19683,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,# basic smoke test
19684,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/16/jdk/alpine3.12/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19685,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19686,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19687,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19688,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
19689,67b5d6546da46331b5414c84408b4bacdf14b673,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19690,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19691,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19692,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19693,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
19694,eb8786f1fa772d2e8867b9cf7fedcffd0e94966b,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19695,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19696,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19697,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19698,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19699,8f8d04a5f77116be8ebfcaf84e4fcbd1190b95e8,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
19700,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19701,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19702,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19703,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19704,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
19705,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# backwards compatibility shim
19706,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19707,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://adoptopenjdk.net/upstream.html
19708,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19709,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19710,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
19711,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19712,282961c4ca0be09af7a556e38b8d5be0c2db0608,/8/jre/Dockerfile,# basic smoke test
19713,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
19714,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,# backwards compatibility shim
19715,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19716,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
19717,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19718,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19719,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
19720,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
19721,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,# basic smoke test
19722,282961c4ca0be09af7a556e38b8d5be0c2db0608,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19723,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19724,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19725,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,# Default to UTF-8 file.encoding
19726,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19727,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,#!/bin/sh'; \
19728,ac78a119a294925b60c8fe4e64c79abab1dd8dbf,/7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19729,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19730,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19731,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19732,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
19733,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# backwards compatibility shim
19734,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19735,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19736,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19737,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
19738,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19739,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19740,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19741,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,# basic smoke test
19742,cd0e316abc515747ef6c9edc8a40914b50163ad2,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19743,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19744,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19745,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19746,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19747,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19748,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19749,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,# basic smoke test
19750,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19751,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19752,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
19753,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# backwards compatibility shim
19754,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19755,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
19756,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19757,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19758,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19759,14d125a15a95cefb2bb6a7040f61f8ee98a492f0,/8/jdk/Dockerfile,# basic smoke test
19760,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19761,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19762,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
19763,1ba292401cda0ed0b0c706c86b55d03dd5e27c5c,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19764,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19765,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19766,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19767,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19768,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19769,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19770,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19771,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19772,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19773,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19774,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19775,d954809b81fa96d37eb866b2371989fd72fa8a33,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19776,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19777,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19778,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
19779,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19780,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,#!/bin/sh'; \
19781,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19782,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19783,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19784,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19785,d8de85f72059e2a0c9d7031fe16398b9cb8492f6,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19786,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19787,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19788,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
19789,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19790,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,#!/bin/sh'; \
19791,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19792,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19793,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19794,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19795,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19796,d42099bde3dc0696981917ae48baebb1ff2ab368,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19797,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19798,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19799,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19800,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19801,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
19802,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19803,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
19804,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
19805,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19806,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,#!/bin/sh'; \
19807,ec1553cccfb87c5f53a38555771fa6d13cebfcba,/8/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19808,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19809,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19810,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
19811,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19812,c6c90f5e09a5dc1a1ccd662de8210342f94c673e,/8-jre/alpine/Dockerfile,#!/bin/sh'; \
19813,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19814,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19815,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19816,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
19817,3f0afc707474b8900b5a0e0aebc7940ac195c232,/13/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19818,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19819,9b3b7ed1bdd754fa61b5dd86c0bcd3e3400c6a33,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19820,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19821,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19822,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19823,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19824,bb3f1d5de6f9e2448b3c0ecb243029dbd2f2db20,/14/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19825,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19826,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19827,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,# Default to UTF-8 file.encoding
19828,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19829,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,#!/bin/sh'; \
19830,e3386b5a2b4004da498e145cf840561d50acd7fb,/7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19831,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19832,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19833,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19834,41532fd149c05cb3bbc0c143bfcfa4589f1c3a61,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19835,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19836,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19837,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19838,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19839,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
19840,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19841,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19842,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19843,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
19844,83fbf16d99f4094df192b4f07909b473ad1d8392,/15/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19845,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19846,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19847,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19848,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# see ""java-cacerts"" package installed above (which maintains ""/etc/ssl/certs/java/cacerts"" for us)"
19849,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,# basic smoke test
19850,9efa5c2bd28c10d07e70ceac416187a011dd6184,/16/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19851,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19852,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19853,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
19854,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
19855,19031c95912d7964223fffab57fad4d07932c05c,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
19856,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-nanoserver.template,"# ""ERROR: Access to the registry path is denied."""
19857,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-nanoserver.template,# https://adoptopenjdk.net/upstream.html
19858,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-nanoserver.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19859,15835397954c9ec123e42e685035ecd239e0a1db,/Dockerfile-adopt-windows-nanoserver.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19860,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19861,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19862,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19863,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://jdk.java.net/
19864,836002d04dbbd99e75f1c1dd7213ee391d66628f,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19865,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19866,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19867,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19868,9850ebc9cb840b259aebcf4de1f19cc3b7621810,/8/jdk/windows/nanoserver-sac2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
19869,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19870,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# backwards compatibility shim
19871,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19872,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
19873,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19874,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
19875,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
19876,e715db19b8abe216948ef5b81dcb352273bd69f3,/8/jdk/slim/Dockerfile,# basic smoke test
19877,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19878,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,# Default to UTF-8 file.encoding
19879,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19880,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19881,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
19882,0f82de10e4aaa8b78d7f79cf725fd1fad1dc85e0,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19883,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19884,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19885,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,# Default to UTF-8 file.encoding
19886,e856a9e6ba51479c2caaa97f6c5ce38bf5d02e47,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19887,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19888,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-6"
19889,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# Default to UTF-8 file.encoding
19890,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19891,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,#!/bin/sh'; \
19892,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19893,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19894,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19895,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19896,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19897,b4f29ba829765552239bd18f272fcdaf09eca259,/6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19898,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
19899,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19900,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# backwards compatibility shim
19901,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
19902,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19903,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19904,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# arm64v8
19905,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# amd64
19906,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# fallback
19907,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
19908,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
19909,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
19910,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
19911,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19912,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,# basic smoke test
19913,bb4265f075850b8b6b36347d0cb045a3fa4df18e,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
19914,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19915,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19916,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
19917,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19918,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,#!/bin/bash'; \
19919,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
19920,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
19921,b7a33e6a2e085c355e5564a4b57fe6fdc1efd46c,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19922,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
19923,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19924,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19925,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,# basic smoke test
19926,fc1b362bdd68ab37654e47cc1276bf3fc212d132,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19927,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,# https://jdk.java.net/
19928,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
19929,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19930,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,# basic smoke test
19931,d93be18f4f2d5e8457169cac00e559d953b6028e,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19932,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19933,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
19934,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
19935,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19936,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,#!/bin/sh'; \
19937,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19938,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19939,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
19940,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19941,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19942,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19943,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19944,a09d082da6e09c075495827ce74fbed4af044b96,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19945,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19946,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19947,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19948,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19949,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
19950,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# arm64v8
19951,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# amd64
19952,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# fallback
19953,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19954,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19955,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,# basic smoke test
19956,1c30e1a7505bb3cf78dbe921e9394ebe10e3c273,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19957,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19958,58866569ecc3d516467baf83375f3bd4cb0b8229,/openjdk-7-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19959,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19960,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
19961,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19962,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19963,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,#!/bin/sh'; \
19964,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19965,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19966,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19967,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19968,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19969,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19970,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
19971,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
19972,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
19973,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
19974,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
19975,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
19976,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,# basic smoke test
19977,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
19978,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19979,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
19980,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
19981,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
19982,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
19983,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
19984,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
19985,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
19986,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
19987,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
19988,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
19989,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
19990,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
19991,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
19992,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
19993,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
19994,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
19995,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
19996,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
19997,62077dac7745304d836f760c12f23e8986b83bc0,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
19998,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
19999,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20000,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
20001,823517cdb97911ad335027244a6342e9129a91ad,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20002,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20003,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20004,9cbe01ae20c38e4569d4c16f7c1b18368096db66,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20005,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20006,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20007,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# backwards compatibility shim
20008,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20009,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
20010,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20011,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
20012,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
20013,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20014,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20015,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20016,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20017,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20018,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,# basic smoke test
20019,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20020,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20021,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
20022,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20023,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20024,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
20025,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
20026,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20027,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,#!/bin/sh'; \
20028,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20029,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20030,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20031,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20032,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20033,e6bb2aec350db6d636bfde423d6fbf45b5eee6a6,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20034,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20035,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20036,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
20037,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20038,2b34ab51a8e8d4aabd6333f7dbcec8cb6796932f,/8/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
20039,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20040,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20041,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
20042,bf06437449e8ae1782905f6c2df744805498874b,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20043,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20044,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20045,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20046,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20047,033c6fea3e9dab1c9f0cf80a2dc5bdafea769ee1,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20048,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20049,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20050,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
20051,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20052,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,#!/bin/sh'; \
20053,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20054,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20055,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20056,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20057,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20058,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20059,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20060,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20061,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
20062,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20063,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20064,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
20065,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# Default to UTF-8 file.encoding
20066,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20067,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,#!/bin/sh'; \
20068,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20069,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20070,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
20071,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20072,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20073,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20074,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20075,e56d5358b1a786ab84f976fa67410621a7692cd6,/10-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20076,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20077,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20078,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
20079,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20080,6930db691f13efa925c1de3bbc8bc393783b7b2f,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
20081,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20082,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20083,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20084,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
20085,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/12/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20086,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20087,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20088,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20089,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# Default to UTF-8 file.encoding
20090,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# backwards compatibility shim
20091,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20092,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20093,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20094,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,#!/usr/bin/env bash'; \
20095,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20096,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20097,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20098,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,# basic smoke test
20099,c43142613c46308261ebc2076447ddd61702e506,/15/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20100,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20101,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20102,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# backwards compatibility shim
20103,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20104,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20105,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20106,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20107,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20108,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20109,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20110,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20111,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20112,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20113,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/slim/Dockerfile,# basic smoke test
20114,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20115,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20116,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# backwards compatibility shim
20117,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20118,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
20119,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20120,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20121,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20122,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20123,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20124,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20125,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20126,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20127,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,# basic smoke test
20128,451e66427f3c53fada288aaff950617c5864745f,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20129,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20130,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20131,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20132,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20133,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
20134,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20135,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20136,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20137,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20138,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20139,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20140,8a18717a1f0e1e48fc32e40bbe85aa89cfea3241,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20141,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20142,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20143,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
20144,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20145,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20146,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20147,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,# basic smoke test
20148,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20149,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20150,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20151,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20152,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20153,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20154,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20155,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
20156,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
20157,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20158,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
20159,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,# basic smoke test
20160,8586ecbbcb4008bfc3877685a40b9b76c17ddaed,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20161,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20162,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20163,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# Default to UTF-8 file.encoding
20164,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20165,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,#!/bin/sh'; \
20166,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20167,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20168,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11 with no-install-recommends: (https://bugs.debian.org/914860, https://bugs.debian.org/775775)
# /var/lib/dpkg/info/ca-certificates-java.postinst: line 56: java: command not found"
20169,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# ca-certificates-java does not work on src:openjdk-11: (https://bugs.debian.org/914424, https://bugs.debian.org/894979, https://salsa.debian.org/java-team/ca-certificates-java/commit/813b8c4973e6c4bb273d5d02f8d4e0aa0b226c50#d4b95d176f05e34cd0b718357c532dc5a6d66cd7_54_56)"
20170,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20171,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20172,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20173,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20174,df4cff5b79d52fa311d6dff4c874f191996b583c,/11/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20175,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20176,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20177,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20178,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
20179,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20180,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
20181,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20182,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20183,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20184,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,# https://jdk.java.net/
20185,37dbf0917c384321c6c0faa5db00586c4448325f,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20186,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20187,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20188,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
20189,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
20190,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
20191,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
20192,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# amd64
20193,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# fallback
20194,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20195,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20196,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
20197,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
20198,00da66800f522f7aec978e6599ec24ffba31b7c5,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20199,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20200,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20201,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20202,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20203,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20204,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
20205,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
20206,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20207,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20208,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,# basic smoke test
20209,0a1e59a9fbc4f2cabaef69d9fede0ffe283dc431,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20210,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20211,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20212,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20213,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
20214,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# backwards compatibility shim
20215,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20216,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# https://jdk.java.net/
20217,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20218,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
20219,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20220,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20221,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20222,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,# basic smoke test
20223,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20224,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20225,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20226,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
20227,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20228,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,#!/bin/sh'; \
20229,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20230,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
20231,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20232,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20233,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20234,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
20235,0467df283134a79840c25808093c00f7c94b9a88,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20236,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20237,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20238,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
20239,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20240,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
20241,572682ed1cb951ab8d978e8015e4a910093db920,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20242,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20243,a8d6952a882f3e56041be8d80df6276dab111f82,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20244,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20245,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,# Default to UTF-8 file.encoding
20246,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
20247,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
20248,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# see https://bugs.debian.org/793210
# and https://github.com/docker-library/java/issues/46#issuecomment-119026586"
20249,680a4e3cb3f9f3c69ad58958d35975ae083e91c1,/openjdk-9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20250,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20251,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20252,6470eb9b90f020450b5d7a3e69708e2a902024ea,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20253,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20254,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20255,3a09e5c327c55be295dd0d22bbd4d6155b974a74,/8/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20256,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20257,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
20258,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# Default to UTF-8 file.encoding
20259,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20260,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,#!/bin/sh'; \
20261,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20262,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20263,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20264,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20265,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20266,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/7/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20267,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20268,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20269,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
20270,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20271,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,#!/bin/sh'; \
20272,908ea317c41a63cb4e2d000c362aa86c9bd4c876,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20273,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20274,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20275,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# backwards compatibility shim
20276,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20277,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20278,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
20279,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# arm64v8
20280,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# amd64
20281,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# fallback
20282,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20283,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
20284,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20285,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20286,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20287,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,# basic smoke test
20288,04d949a7f8f1ae5a6bd3a5b9f7534329d4f326ab,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20289,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20290,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# Default to UTF-8 file.encoding
20291,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# backwards compatibility shim
20292,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20293,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20294,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20295,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
20296,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# arm64v8
20297,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# amd64
20298,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# fallback
20299,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20300,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20301,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20302,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20303,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,#!/usr/bin/env bash'; \
20304,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20305,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20306,83fbf16d99f4094df192b4f07909b473ad1d8392,/11/jre/slim-buster/Dockerfile,# basic smoke test
20307,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20308,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20309,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20310,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20311,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20312,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20313,0259a649c03ace8b035432ef3ee7274ca30d3776,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20314,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20315,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
20316,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
20317,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20318,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20319,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,# basic smoke test
20320,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20321,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20322,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
20323,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
20324,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20325,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,#!/bin/sh'; \
20326,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20327,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20328,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20329,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20330,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20331,7c22c27c0083344302163e7f61e78b1d1b80a2e8,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20332,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20333,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
20334,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20335,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20336,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,#!/bin/sh'; \
20337,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20338,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20339,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20340,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20341,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20342,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/7-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20343,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20344,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
20345,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
20346,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20347,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,#!/bin/sh'; \
20348,a5cc95a14480e9b30c674aa72257f6e4cf032b8d,/7/jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20349,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20350,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20351,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20352,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20353,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jdk/windows/windowsservercore-1803/Dockerfile,# TODO signature? checksum?
20354,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20355,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20356,873fb56728befef8ecaf8436c3a27fd239cba301,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20357,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20358,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20359,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
20360,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20361,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,#!/bin/sh'; \
20362,4427d56d00bbd05b6c7e0f5ce7a3a7a01b6d4177,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20363,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
20364,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
20365,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# backwards compatibility shim
20366,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20367,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
20368,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20369,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
20370,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
20371,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
20372,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20373,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
20374,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20375,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20376,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,# basic smoke test
20377,b3bcf767681aaf9386779b21c9a2ff48fb1c6f49,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20378,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20379,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,# https://jdk.java.net/
20380,dae43871681682fb03dc9f767d2d161105f7f8e0,/14/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20381,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20382,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
20383,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
20384,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20385,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,#!/bin/sh'; \
20386,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20387,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20388,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20389,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20390,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20391,0430e224b172d5e0b3cfe5c1f23a024043b0c949,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20392,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20393,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
20394,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20395,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20396,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,#!/bin/sh'; \
20397,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20398,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20399,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
20400,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20401,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20402,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20403,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20404,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20405,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20406,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# backwards compatibility shim
20407,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20408,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20409,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20410,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
20411,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20412,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20413,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20414,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,# basic smoke test
20415,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20416,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/13/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
20417,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20418,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20419,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20420,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
20421,92869730148f4b7dafbc2f3dc37647242ee7d792,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20422,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20423,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
20424,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
20425,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20426,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,#!/bin/sh'; \
20427,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20428,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20429,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20430,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20431,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20432,e73f9d4dfc2eac73d068dcd12690c1c0b09ba769,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20433,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20434,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20435,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
20436,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20437,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
20438,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20439,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20440,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20441,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# backwards compatibility shim
20442,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20443,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20444,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20445,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
20446,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20447,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20448,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20449,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,# basic smoke test
20450,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20451,71059d6368b9fdb2fc703f47ae03162450732352,/14/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
20452,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20453,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20454,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20455,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,# https://jdk.java.net/
20456,d2d90df1bb8d4f7b711f494be5ab2ace567ae8a9,/14/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20457,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20458,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
20459,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
20460,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20461,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20462,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,# basic smoke test
20463,448901d68e2a32f49bda1a8789d4c56e821506aa,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20464,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20465,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20466,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
20467,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20468,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20469,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20470,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,# basic smoke test
20471,ce204079c875bde97a94bf5a8c82a8ae245ccb68,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20472,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20473,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20474,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
20475,a7b5f34846cbad5712619ea11d686ad6be56e922,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20476,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
20477,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,# backwards compatibility shim
20478,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20479,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
20480,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20481,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,# TODO filter out arm64 for openjdk:8 (https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/tag/jdk8u212-b04 vs https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.3%2B7)
20482,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
20483,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
20484,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,# basic smoke test
20485,3eb0351b208d739fac35345c85e3c6237c2114ec,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20486,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20487,4fc0f299672be87a236d1af61a31c14f67dfcdcc,/8/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20488,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20489,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20490,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20491,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
20492,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20493,3eb0351b208d739fac35345c85e3c6237c2114ec,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
20494,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20495,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20496,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
20497,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20498,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20499,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20500,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,# basic smoke test
20501,bb67c6a174eea23128977c4da1257d84fa7b24cc,/15/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20502,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/Dockerfile-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20503,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/Dockerfile-windows.template,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20504,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/Dockerfile-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20505,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/Dockerfile-windows.template,# http://jdk.java.net/
20506,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/Dockerfile-windows.template,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20507,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20508,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20509,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# Default to UTF-8 file.encoding
20510,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20511,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,#!/bin/sh'; \
20512,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20513,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20514,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20515,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20516,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20517,ca586ef3a0d7f60b87f2649f7965f6ce6dade70f,/11/jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20518,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20519,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
20520,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
20521,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20522,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
20523,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20524,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20525,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
20526,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20527,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20528,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,#!/bin/sh'; \
20529,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20530,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20531,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20532,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20533,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20534,b4f29ba829765552239bd18f272fcdaf09eca259,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20535,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20536,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20537,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20538,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,# http://jdk.java.net/
20539,016d1e16b33615bca340d4e085ef9a5b021ac3ca,/13/jdk/windows/windowsservercore-1809/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20540,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20541,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20542,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# Default to UTF-8 file.encoding
20543,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# backwards compatibility shim
20544,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20545,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20546,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20547,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
20548,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# arm64v8
20549,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# amd64
20550,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# fallback
20551,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20552,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20553,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20554,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20555,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,#!/usr/bin/env bash'; \
20556,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20557,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20558,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,# basic smoke test
20559,52cb2ce3bda94b1c0229f11bfa176035ad41c9b8,/11/jdk/buster/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20560,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20561,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20562,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20563,7d6b0528da55c7b74feff4f565c9dbb8907b8c9a,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20564,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20565,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20566,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,# Default to UTF-8 file.encoding
20567,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20568,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,#!/bin/sh'; \
20569,dcb22f5eecaaa99a29a3607b2c36a60632af23f9,/9-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20570,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20571,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
20572,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20573,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20574,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,#!/bin/sh'; \
20575,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20576,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20577,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20578,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20579,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20580,2057305e0474ebf6461daea607ff02874d690914,/7/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20581,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20582,f25ed8b213142ebe4370cf7494ecccccecc55ecd,/openjdk-6-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20583,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20584,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
20585,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# Default to UTF-8 file.encoding
20586,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20587,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,#!/bin/sh'; \
20588,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20589,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20590,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
20591,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20592,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20593,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20594,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20595,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20596,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20597,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20598,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20599,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
20600,07af3ffded3216b44d69b4f14309fc5a2967e623,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20601,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20602,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20603,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20604,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
20605,922344e3283ef2c87cb17cc04ded9cef5e13a1e5,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20606,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20607,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20608,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20609,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# Default to UTF-8 file.encoding
20610,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# backwards compatibility shim
20611,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20612,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# https://jdk.java.net/
20613,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20614,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,#!/usr/bin/env bash'; \
20615,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20616,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20617,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20618,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,# basic smoke test
20619,25c3b44ab83e14a4692bd54a85be026956710341,/14/jdk/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20620,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20621,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
20622,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
20623,4735dcec5fec2833635b8f6634d24d7e22c617b2,/openjdk-8-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20624,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20625,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20626,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20627,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# http://jdk.java.net/
20628,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/12/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20629,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20630,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20631,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20632,6294b7d4b299639ec519dfd92782632f498eb1d2,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20633,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/Dockerfile-adopt-windows.template,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20634,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/Dockerfile-adopt-windows.template,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20635,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/Dockerfile-adopt-windows.template,# https://adoptopenjdk.net/upstream.html
20636,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/Dockerfile-adopt-windows.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20637,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/Dockerfile-adopt-windows.template,# TODO signature? checksum?
20638,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/Dockerfile-adopt-windows.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20639,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20640,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20641,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
20642,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20643,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
20644,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jdk/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20645,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20646,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,# https://adoptopenjdk.net/upstream.html
20647,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20648,15835397954c9ec123e42e685035ecd239e0a1db,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20649,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20650,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
20651,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# https://jdk.java.net/
20652,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20653,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20654,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,# basic smoke test
20655,64b1b15fdbd44e81e4e2dd6184685c02b73735ee,/13/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20656,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20657,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
20658,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
20659,1992f5ab6b5b6b4748c9628125dbea37df405d99,/openjdk-8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20660,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20661,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20662,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
20663,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20664,43e145f3fc5fd98a141f0c1c6fe90b9ea93977da,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
20665,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20666,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20667,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20668,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20669,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,#!/bin/sh'; \
20670,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20671,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20672,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20673,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20674,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20675,256e2f380b6ffc6c372c1ab5b7db8a28e71cef27,/11/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20676,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
20677,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20678,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20679,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,# Default to UTF-8 file.encoding
20680,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,# backwards compatibility shim
20681,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20682,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
20683,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# this ""case"" statement is generated via ""update.sh"""
20684,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20685,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,#!/usr/bin/env bash'; \
20686,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20687,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20688,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20689,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,# basic smoke test
20690,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20691,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20692,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20693,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20694,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20695,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
20696,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20697,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20698,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20699,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
20700,e85b3b3882c0fdba3f9fce40b9fe9f62afb7cb70,/14/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20701,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20702,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
20703,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20704,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20705,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,#!/bin/sh'; \
20706,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20707,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20708,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20709,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20710,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20711,3d6e629c1e332a29fb086c329e901ce7826cf3fc,/9/jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20712,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20713,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20714,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20715,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20716,b64d9fd4cfc27a0a59d166ed4392dc5e984eb303,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20717,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20718,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20719,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# Default to UTF-8 file.encoding
20720,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# backwards compatibility shim
20721,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20722,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20723,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20724,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
20725,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# amd64
20726,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# fallback
20727,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20728,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20729,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20730,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20731,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,#!/usr/bin/env bash'; \
20732,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20733,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20734,a24dae42b2b0c544916c714128e870c00e4c4888,/8/jre/buster/Dockerfile,# basic smoke test
20735,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20736,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20737,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
20738,823517cdb97911ad335027244a6342e9129a91ad,/11/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20739,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20740,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20741,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# backwards compatibility shim
20742,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20743,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20744,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20745,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20746,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20747,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20748,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20749,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20750,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20751,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20752,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/8/jre/slim/Dockerfile,# basic smoke test
20753,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20754,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
20755,7a20efe8b7cf5e094b310cfb0e2898d780c1215c,/8/jdk/windows/nanoserver-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20756,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20757,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20758,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,# Default to UTF-8 file.encoding
20759,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20760,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,#!/bin/bash'; \
20761,c046a7da2ac56f0ee5b870590de3e5a1cce569a7,/openjdk-7-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20762,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20763,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20764,906bdc14f53c6eff33c007511701ef0444705993,/9-jdk/windows/nanoserver/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20765,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20766,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
20767,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20768,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20769,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
20770,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20771,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20772,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20773,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20774,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20775,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20776,15765bea4a1e184007e20ac3c94b93253f16f668,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20777,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20778,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20779,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
20780,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20781,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,#!/bin/sh'; \
20782,11f3ec7d9cb5def04b7936cdf1eaa41da56341ab,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20783,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20784,8b20818d91705361ff42b597369620680d0af98c,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20785,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20786,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-9"
20787,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20788,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20789,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,#!/bin/sh'; \
20790,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20791,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20792,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20793,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20794,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20795,7e4d6aa056d7b93d13a5ca6e2838c1e49a85ebbb,/9-jre/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20796,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20797,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20798,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
20799,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20800,e3c58658d627c61a0d6afb5bd0d1944bc3dddc69,/8-jdk/alpine/Dockerfile,#!/bin/sh'; \
20801,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20802,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
20803,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20804,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,# http://jdk.java.net/
20805,48b2de7e228dd4435a957172e912a399dbb93732,/13/jdk/windows/nanoserver-sac2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20806,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20807,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20808,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
20809,431f8d3e5072d300878dcc6ff52cd0ff069d3d36,/9-jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
20810,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20811,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20812,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20813,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20814,e101ce4ea6dc4aae77905d501fd169e184f0bb00,/11/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
20815,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
20816,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,# Default to UTF-8 file.encoding
20817,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,# backwards compatibility shim
20818,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20819,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
20820,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,"# this ""case"" statement is generated via ""update.sh"""
20821,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20822,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,#!/usr/bin/env bash'; \
20823,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20824,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20825,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20826,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,# basic smoke test
20827,e47ecbf9e534f3798dde9ccdd29e13f67a54b6c4,/Dockerfile-oracle-debian-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20828,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20829,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20830,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20831,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20832,b5d14d9165fad693901c285d6e7bbc36d1cde41f,/8/jre/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
20833,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20834,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20835,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# Default to UTF-8 file.encoding
20836,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
20837,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
20838,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# arm64v8
20839,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# amd64
20840,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# fallback
20841,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20842,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20843,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
20844,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,# basic smoke test
20845,be46c34a1b45fc5746389b7b1d25751e76a9c6a0,/16/jdk/oraclelinux7/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20846,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20847,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20848,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# Default to UTF-8 file.encoding
20849,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# backwards compatibility shim
20850,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20851,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20852,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20853,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20854,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20855,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20856,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20857,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,#!/usr/bin/env bash'; \
20858,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20859,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20860,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jre/Dockerfile,# basic smoke test
20861,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20862,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# Default to UTF-8 file.encoding
#ENV LANG C.UTF-8
# TODO oraclelinux doesn't have C.UTF-8 by default??"
20863,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# http://jdk.java.net/
20864,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20865,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
20866,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,# basic smoke test
20867,0d60b6626ac530dfc39febf84416d96ca52aad8e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20868,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20869,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20870,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
20871,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# backwards compatibility shim
20872,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20873,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20874,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20875,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20876,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20877,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20878,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20879,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
20880,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20881,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20882,b78f8bec49fe2ecbf927882fa0b0b4874c8fa8c8,/8/jdk/Dockerfile,# basic smoke test
20883,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20884,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-7"
20885,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,# Default to UTF-8 file.encoding
20886,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20887,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,#!/bin/sh'; \
20888,bd88cc03a45c8e38ae0c25e7105257958847b4b0,/7-jdk/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20889,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
20890,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20891,4bfbef917281809571510a2a53b297696a122e42,/15/jdk/windows/nanoserver-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20892,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20893,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20894,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
20895,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
20896,a886db8d5ea96b7bc0104b2f55fabd44bcb5e7c0,/8/jdk/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
20897,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,"# jlink --strip-debug on 13+ needs objcopy: https://github.com/docker-library/openjdk/issues/351
# Error: java.io.IOException: Cannot run program ""objcopy"": error=2, No such file or directory"
20898,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20899,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,# Default to UTF-8 file.encoding
20900,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,"# https://jdk.java.net/
# >
# > Java Development Kit builds, from Oracle
# >"
20901,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,"# this ""case"" statement is generated via ""update.sh"""
20902,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20903,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20904,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,"# see ""update-ca-trust"" script which creates/maintains this cacerts bundle"
20905,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,# basic smoke test
20906,754d834164985ed1852aad4bb6c86ae199683ff8,/Dockerfile-oracle-oraclelinux.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20907,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
20908,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
20909,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# https://jdk.java.net/
20910,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
20911,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20912,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,# basic smoke test
20913,1ec9487ee47d39a46d914633a1b48db99eba7115,/14/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20914,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
20915,3faf377815bd5409f91a007b092d38a36134baf5,/openjdk-6-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
20916,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
20917,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
20918,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# backwards compatibility shim
20919,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20920,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
20921,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20922,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
20923,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
20924,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
20925,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20926,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
20927,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20928,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20929,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,# basic smoke test
20930,da44a9234d75e3d89ea00d679cb6a326cbbbbead,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20931,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
20932,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
20933,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://adoptopenjdk.net/upstream.html
20934,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20935,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,# TODO signature? checksum?
20936,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/windows/windowsservercore-1809/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20937,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20938,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
20939,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# backwards compatibility shim
20940,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20941,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
20942,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20943,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
20944,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20945,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20946,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
20947,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,# basic smoke test
20948,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
20949,61f394957893cfc3c00a66acdecffda579cc14ec,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
20950,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20951,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
20952,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# Default to UTF-8 file.encoding
20953,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20954,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,#!/bin/sh'; \
20955,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20956,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
20957,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20958,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20959,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20960,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20961,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
20962,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/8-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20963,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,# http://jdk.java.net/
20964,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# ""For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."""
20965,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# http://openjdk.java.net/jeps/341"
20966,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,# basic smoke test
20967,b0aa18b58d5cd20dba612c1a44c2981838037478,/13/jdk/alpine/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
20968,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
20969,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
20970,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
20971,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
20972,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,#!/bin/sh'; \
20973,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
20974,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# see https://bugs.debian.org/775775
# and https://github.com/docker-library/java/issues/19#issuecomment-70546872"
20975,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
20976,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
20977,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
20978,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
20979,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,# see CA_CERTIFICATES_JAVA_VERSION notes above
20980,7a33416016b60c045cf0ba99e82617ed6c130595,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
20981,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
20982,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
20983,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# backwards compatibility shim
20984,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20985,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
20986,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
20987,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
20988,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
20989,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
20990,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
20991,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
20992,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
20993,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
20994,32aebc4a43f7b0555438da6ca861dc4688b61b33,/11/jre/slim/Dockerfile,# basic smoke test
20995,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,# utilities for keeping Debian and OpenJDK CA certificates in sync
20996,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,# Default to UTF-8 file.encoding
20997,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,# backwards compatibility shim
20998,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
20999,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,# https://adoptopenjdk.net/upstream.html
21000,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
21001,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
21002,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
21003,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,"# TODO strip ""demo"" and ""man"" folders?"
21004,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
21005,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,#!/usr/bin/env bash'; \
21006,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
21007,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
21008,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,# basic smoke test
21009,451e66427f3c53fada288aaff950617c5864745f,/Dockerfile-adopt-slim.template,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
21010,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
21011,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
21012,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,# Default to UTF-8 file.encoding
21013,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
21014,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,#!/bin/sh'; \
21015,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,# https://bugs.alpinelinux.org/issues/10126
21016,79a6e42e299701791f8730f801e0728f82c85ea4,/8/jre/alpine/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
21017,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21018,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
21019,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21020,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
21021,d5214d1dd5be1fc53dae2dd35c852aaab6ace299,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21022,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21023,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21024,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://adoptopenjdk.net/upstream.html
21025,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
21026,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# TODO signature? checksum?
21027,6c8415585bb0a0d4afb4ede869f21d645b310d2e,/11/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
21028,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
21029,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8"
21030,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
21031,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
21032,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,#!/bin/sh'; \
21033,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
21034,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
21035,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
21036,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
21037,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
21038,58ba04f37a289057ac53b4376773b03227dceb77,/8/jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
21039,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
21040,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
21041,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# backwards compatibility shim
21042,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
21043,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
21044,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# this ""case"" statement is generated via ""update.sh"""
21045,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# arm64v8
21046,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# amd64
21047,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# fallback
21048,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
21049,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
21050,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
21051,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
21052,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
21053,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,# basic smoke test
21054,55eaa15885a2dd8b0d74c95fe9af71d90492b2d8,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
21055,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
21056,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
21057,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# backwards compatibility shim
21058,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
21059,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
21060,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
21061,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
21062,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
21063,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
21064,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
21065,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,# basic smoke test
21066,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
21067,664f4953394f3459704e15f09aae014a22c57f33,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
21068,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
21069,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
21070,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# backwards compatibility shim
21071,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
21072,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
21073,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
21074,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,#!/usr/bin/env bash'; \
21075,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
21076,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
21077,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
21078,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,# basic smoke test
21079,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
21080,310de6743d7ab2945e062c38106a9f3ff93bd3c2,/15/jdk/slim/Dockerfile,"/*; \
	\
	wget -O openjdk.tgz ""$JAVA_URL""; \
	echo ""$JAVA_SHA256 */"
21081,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
21082,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-10"
21083,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# Default to UTF-8 file.encoding
21084,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
21085,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,#!/bin/sh'; \
21086,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
21087,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
21088,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# ca-certificates-java does not support src:openjdk-10 yet:
# /etc/ca-certificates/update.d/jks-keystore: 86: /etc/ca-certificates/update.d/jks-keystore: java: not found"
21089,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
21090,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
21091,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
21092,f9c46dc617c9fab69f8fe427a3e3e1523bda461f,/10-jre/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
21093,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
21094,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
21095,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
21096,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
21097,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,#!/bin/sh'; \
21098,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
21099,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
21100,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
21101,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
21102,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
21103,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21104,07194db9f12e4507d5f048339c92682a0b49f89d,/11/jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
21105,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21106,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
21107,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21108,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://jdk.java.net/
# > Java Development Kit builds, from Oracle"
21109,2286ceecc94dcf6d5f8273db2f4e1b3fdf6cc31d,/16/jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21110,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21111,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
21112,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21113,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,# https://jdk.java.net/
21114,15835397954c9ec123e42e685035ecd239e0a1db,/13/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21115,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
21116,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
21117,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# backwards compatibility shim
21118,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
21119,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
21120,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
21121,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
21122,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/pull/322#discussion_r286839190
21123,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
21124,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
21125,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
21126,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
21127,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
21128,c202745eb5a8d4088c9d0726359f287c40e5ee71,/8/jre/slim/Dockerfile,# basic smoke test
21129,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21130,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21131,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
21132,59b305bb797b6cb60fa41e74448a68b4f0cdb813,/10/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21133,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21134,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21135,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,# http://jdk.java.net/
21136,0626946ad0c862bd1f4067cbd5f1d936dd2c95ce,/12/jdk/windows/windowsservercore-1803/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21137,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
21138,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
21139,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
21140,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
21141,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
21142,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
21143,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
21144,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
21145,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
21146,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
21147,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21148,df7364f883846fa6971ca47496eb5a5da8c7048c,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
21149,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21150,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# enable TLS 1.2 (Nano Server doesn't support using ""[Net.ServicePointManager]::SecurityProtocol"")
# https://docs.microsoft.com/en-us/system-center/vmm/install-tls?view=sc-vmm-1801
# https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/manage-ssl-protocols-in-ad-fs#enable-tls-12"
21151,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21152,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,# http://jdk.java.net/
21153,a2a90dd274e1a56937699d2d8f81ebaf4e3173dc,/13/jdk/windows/windowsservercore-1709/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21154,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
21155,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/local/openjdk-11/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11FontManager
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
21156,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# Default to UTF-8 file.encoding
21157,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# backwards compatibility shim
21158,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
21159,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://adoptopenjdk.net/upstream.html
21160,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
21161,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
21162,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
21163,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
21164,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
21165,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,#!/usr/bin/env bash'; \
21166,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
21167,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
21168,403960ed0b1f6dcb2f3194f7f3139bb954e28b77,/8/jdk/Dockerfile,# basic smoke test
21169,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# java.lang.UnsatisfiedLinkError: /usr/java/openjdk-12/lib/libfontmanager.so: libfreetype.so.6: cannot open shared object file: No such file or directory
# https://github.com/docker-library/openjdk/pull/235#issuecomment-424466077"
21170,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# Default to UTF-8 file.encoding
21171,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# https://jdk.java.net/
21172,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# https://github.com/oracle/docker-images/blob/a56e0d1ed968ff669d2e2ba8a1483d0f3acc80c0/OracleJava/java-8/Dockerfile#L17-L19
21173,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
# https://openjdk.java.net/jeps/341"
21174,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,# basic smoke test
21175,349703e3d620e86fb46e2a4529a810c7116a9b4e,/12/jdk/oracle/Dockerfile,"# https://docs.oracle.com/javase/10/tools/jshell.htm
# https://docs.oracle.com/javase/10/jshell/
# https://en.wikipedia.org/wiki/JShell"
21176,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
21177,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# A few reasons for installing distribution-provided OpenJDK:
#
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#     really hairy.
#
#     For some sample build times, see Debian's buildd logs:
#       https://buildd.debian.org/status/logs.php?pkg=openjdk-11"
21178,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# Default to UTF-8 file.encoding
21179,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
21180,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,#!/bin/sh'; \
21181,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
21182,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# deal with slim variants not having man page directories (which causes ""update-alternatives"" to fail)"
21183,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
21184,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
21185,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
21186,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# https://docs.oracle.com/javase/9/tools/jshell.htm
# https://en.wikipedia.org/wiki/JShell"
21187,e7e125d2941d991c9249d2ddbcb81e95e68dfc9f,/11-jdk/slim/Dockerfile,"# If you're reading this and have any feedback on how this image could be
# improved, please open an issue or a pull request so we can discuss it!
#
#   https://github.com/docker-library/openjdk/issues"
21188,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324
21189,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,"# Nano Server does not have ""[Environment]::SetEnvironmentVariable()"""
21190,0584b2804ed12dca7c5e264b5fc55fc07a3ac148,/8-jdk/windows/windowsservercore-ltsc2016/Dockerfile,# https://github.com/ojdkbuild/ojdkbuild/releases
21191,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""ERROR: Access to the registry path is denied."""
21192,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://adoptopenjdk.net/upstream.html
# >
# > What are these binaries?
# >
# > These binaries are built by Red Hat on their infrastructure on behalf of the OpenJDK jdk8u and jdk11u projects. The binaries are created from the unmodified source code at OpenJDK. Although no formal support agreement is provided, please report any bugs you may find to https://bugs.java.com/.
# >"
21193,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
# >
# > I am the OpenJDK 8 and 11 Updates OpenJDK project lead.
# > ...
# > While it is true that the OpenJDK Governing Board has not sanctioned those releases, they (or rather we, since I am a member) didn't sanction Oracle's OpenJDK releases either. As far as I am aware, the lead of an OpenJDK project is entitled to release binary builds, and there is clearly a need for them.
# >"
21194,61a91d560d2637de14c5f7a96ded6d1b5b06ee0b,/11/jre/windows/nanoserver-1803/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
21195,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# utilities for keeping Debian and OpenJDK CA certificates in sync
21196,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# Default to UTF-8 file.encoding
21197,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# backwards compatibility shim
21198,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"#/bin/sh'; echo 'echo ""$JAVA_HOME""'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]"
21199,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://adoptopenjdk.net/upstream.html
21200,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/320#issuecomment-494050246
21201,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO find a good link for users to verify this key is right (https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2019-April/000951.html is one of the only mentions of it I can find); perhaps a note added to https://adoptopenjdk.net/upstream.html would make sense?
# no-self-sigs-only: https://salsa.debian.org/debian/gnupg2/commit/c93ca04a53569916308b369c8b218dad5ae8fe07"
21202,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# also verify that key was signed by Andrew Haley (the OpenJDK 8 and 11 Updates OpenJDK project lead)
# (https://github.com/docker-library/openjdk/pull/322#discussion_r286839190)"
21203,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# TODO strip ""demo"" and ""man"" folders?"
21204,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# update ""cacerts"" bundle to use Debian's CA certificates (and make sure it stays up-to-date with changes to Debian's store)
# see https://github.com/docker-library/openjdk/issues/327
#     http://rabexc.org/posts/certificates-not-working-java#comment-4099504075
#     https://salsa.debian.org/java-team/ca-certificates-java/blob/3e51a84e9104823319abeb31f880580e46f45a98/debian/jks-keystore.hook.in
#     https://git.alpinelinux.org/aports/tree/community/java-cacerts/APKBUILD?id=761af65f38b4570093461e6546dcf6b179d2b624#n29"
21205,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,#!/usr/bin/env bash'; \
21206,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# 8-jdk uses ""$JAVA_HOME/jre/lib/security/cacerts"" and 8-jre and 11+ uses ""$JAVA_HOME/lib/security/cacerts"" directly (no ""jre"" directory)"
21207,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472
21208,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,# basic smoke test
21209,fb20f308cef5db398462495afd2f7bc60f51590a,/11/jre/slim/Dockerfile,"# ""jshell"" is an interactive REPL for Java (see https://en.wikipedia.org/wiki/JShell)"
21210,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"#
# NOTE: THIS DOCKERFILE IS GENERATED VIA ""update.sh""
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#"
21211,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# A few problems with compiling Java from source:
#  1. Oracle.  Licensing prevents us from redistributing the official JDK.
#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets
#       really hairy."
21212,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# Default to UTF-8 file.encoding
21213,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# add a simple script that can auto-detect the appropriate JAVA_HOME value
# based on whether the JDK or only the JRE is installed"
21214,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,#!/bin/sh'; \
21215,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe
21216,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# verify that ""docker-java-home"" returns what we expect"
21217,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
21218,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,# ... and verify that it actually worked for one of the alternatives we care about
21219,bd3c2a9867c9dc6a9a8425a8df5c54edf0cbf2cc,/9-jdk/Dockerfile,"# If you're reading this and have any feedback on how this image could be
#   improved, please open an issue or a pull request so we can discuss it!"
